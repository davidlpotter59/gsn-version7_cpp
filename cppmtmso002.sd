%%                    
Screen
        Name            = "cppMTMSO002" ;
        Type            = "Detail" ;
        Padcharacter    = Space ;
        Highlight       = Underscore ;
        Screensize      = "dynamic" ;
        Domain          = "cppGENERAL";
        Windowtitle = "%a     %s Property - Ver 7.00     %m" ;
        iconline        = 0 ;

        Global String G_LIB[10];

        Global Unsigned Ascii Number G_POLICY_NO[9],
                                     G_YEAR[4],
                                     G_END_SEQUENCE[4],
                                     G_QUOTE_NO[8] ,
                                     G_PREM_NO[4] ,
                                     g_prem_no_1[4],
                                     G_BUILD_NO[4] ,
                                     g_build_no_1[4],
                                     G_NEW_QUOTE_NO[8],
                                     G_LINE_OF_BUSINESS[4],
                                     G_STATE[2] ,
                                     G_RATE_TYPE[2] ,
                                     G_CLASS_CODE[5] ,
                                     G_SUB_CODE[4] ,
                                     G_EARTHQUAKE_RATE_CLASS[2] ,
                                     g_rate_group[2] ,
                                     g_deductible[5] ,
                                     g_wind_deductible[5];

        Global String G_COMPANY_ID[10] ,
                      G_POPUP[1] ,
                      g_code[7] ,
                      g_inquiry[1] ;

        Local String L_DESC[50] ,
                     L_DELETE_cppPROPERTY[1]="N" ,
                     l_package_mod_1[1]="N",
                     l_liability_package_mod_1[1]="N",
                     l_change_description[50] ,
                     L_FIRST[1]="Y",
                     l_enter,
                     l_hurricane_code_1[7],
                     l_hurricane_code_2[7],
                     l_hurricane_code_3[7],
                     l_agreed_value[1],
                     L_CODE[7],
                     L_CODE_1[7],
                     L_CODE_2[7],
                     L_CODE_3[7],
                     L_CODE_4[7],
                     L_CODE_5[7],
                     L_CODE_6[7],
                     L_CODE_7[7],
                     L_CODE_8[7],
                     L_CODE_9[7],
                     l_code_10[7],
                     l_code_11[7],
                     l_code_12[7],
                     l_code_13[7],
                     l_code_14[7],
                     l_code_15[7],
                     l_code_16[7],
                     l_code_17[7],
                     l_code_18[7],
                     l_code_19[7],
                     l_code_20[7],
                     l_code_21[7],
                     l_code_22[7],
                     l_code_23[7],
                     l_code_24[7],
                     L_ADD_ENDORSEMENT[1],
                     L_FORM_EDITION[25],
                     L_DESCRIPTION[75] ,
                     L_COMMANDLINE[16] ;

        Local Unsigned Ascii Number L_VACANCY[1] ,
                                    L_PROTECTIVE_SYSTEMS[1],
                                    l_mcp140_limit[8],
                                    L_EXCLUSIONS[1] ,
                                    l_building_type[1],
                                    l_prior_deductible[5],
                                    l_prior_wind_deductible[5],
                                    l_prior_contents_deductible[5] ,
                                    l_res_condo[1],
                                    l_res_condo_1[1],
                                    l_unit_owner[1],
                                    l_unit_owner_1[1],
                                    l_condo[1],
                                    l_reins[1],
                                    l_none[1],
                                    L_FORM_OPTION[1],
                                    L_WATER[1] ,
                                    L_AGREED[1]  ,
                                    l_blanket[1],
                                    l_override_hurricane_deductible[5],
                                    l_specific_minimum[4]=0/dec=3,
                                    l_class_code_1[5],
                                    l_class_code_2[5],
                                    l_class_code_3[5],
                                    l_prem_no[4],
                                    l_prem_no_1[4],
                                    l_build_no[4],
                                    l_build_no_1[4],
                                    L_BUSINESS_INCOME_LIMIT[8]=0 ,
                                    L_EARTHQUAKE[1] ,
                                    L_SPRINKLER_LEAKAGE[1] ,
                                    L_SPRINKLER_LEAKAGE_RATE[5]=0/decimals=4 ,
                                    l_line_of_business[4] ;

        local signed ascii number l_package_mod[5]=0/dec=3 ,
                                  l_special_package_mod[5]=0/dec=3 ,
                                  l_liability_special_package_mod[5]=0/dec=3,
                                  l_property_special_church_mod[5]=0/dec=3,
                                  l_liability_special_church_mod[5]=0/dec=3 ;

        Include "cpsrate.var"

        Access cppGENERAL, Set cppGENERAL:policy_NO = G_policy_NO,
                               cppgeneral:pol_year = g_year,
                               cppgeneral:end_sequence = g_end_sequence, Approximate

        Include "STDKEYS7.INC"

style definition

        include "styles.inc"

Functions

        "Exit" return ;
        "Back" return ;

        Delete/security=55 ;
        "Opt" sequence "Up" tagged opt_fn ;
        "Up" continue begin
                      if cppgeneral:builders_risk = 1 then
                          l_screen_1 = "cppmtmso200c"
                      else
                      if cppgeneral:condo = 1 then
                          l_screen_1 = "cppmtmso200a"
                      else
                      if cppgeneral:unit_owner = 1 then
                          l_screen_1 = "cppmtmso200b"
                      else
                          l_screen_1 = "cppmtmso200"
                      function = "propopt"
                      end ;

        "propopt" display l_screen_1 ;

        "SPEC" continue begin
                        if sfscompany:boiler_Rating = 4 then
                            l_screen = "cppmtmso02i"
                        else
                            l_screen = "cppmtmso02a"

                        function = "popup"
                        end ;
        "FACT" continue begin
                        if sfscompany:boiler_Rating <> 4 then
                            l_screen = "cppmtmso02b"
                        else
                            l_screen = ""

                        if l_screen <> "" then
                            function = "popup"
                        else
                            Error "Not Applicable"
                        end ;
        "popup" Display L_SCREEN ;
        "value" display "cppmtmso207" ;
        "redisplay" display/noreturn "cppmtmso002" tagged redisplay_fn ;

        "rating"     Sequence "rating_disp"      Tagged rating_fn ;
        "rating_disp" Display "cppmtmso002" ;

        "supp"     Sequence "supp_disp"      Tagged supp_fn ;
        "supp_disp" continue begin
                        function = "UP"
                        end ;

        "option"     Sequence "option_disp"      Tagged option_fn ;
        "option_disp" Display "cppmtmso250" ;

        "dev"     Sequence "dev_disp"      Tagged dev_fn ;
        "dev_disp" Display "cppmtmso296" ;

        "func"     sequence "terr"           tagged terr_fn;
        "terr"    continue begin
                if sfscompany:special_territory_rating = 1 then
                        Function = "SPEC"
                else
                        Error "You are not setup to do special territory rating"
                end ;

        "func2"    sequence "terrfac"        tagged terrfac_fn ;
        "terrfac"  continue begin
                if sfscompany:special_territory_rating = 1 and
                   sfscompany:boiler_rating <> 4 then
                        Function = "FACT"
                else
                if sfscompany:boiler_rating = 4 then
                    error "This option is not applicable for your company"
                else
                    Error "You are not setup to do special territory rating"
                end ;

        "blanket"   Sequence "blanket_disp"      Tagged work_fn ;
        "blanket_disp" Display "cppmtmso02c" ;


        "word"     Sequence "word_disp"      Tagged wording_fn ;
        "word_disp" Display "cppmtmso02e" ;

        "earth"     Sequence "earth_disp"      Tagged earth_fn ;
        "earth_disp" Display "cppmtmso25p" ;

        "deduct"     Sequence "deduct_disp"      Tagged deduct_fn ;
        "deduct_disp" continue begin
                               if sfscompany:boiler_rating = 4 then
                                   begin
                                   g_deductible = cppgeneral:deductible
                                   l_screen = "cppmtmso226"
                                   end
                               else
                                   l_screen = "cppmtmso209"
                               function = "popup"
                               end;

        "wind"     Sequence "wind_disp"      Tagged wind_fn ;
        "wind_disp" continue begin
                             g_wind_deductible = cppgeneral:wind_deductible
                             if sfscompany:boiler_rating = 4 then
                                  l_screen = "cppmtmso227"
                              function = "popup"
                              end;

        "vacancy"     Sequence "vac_disp"      Tagged vacancy_fn ;
        "vac_disp" continue begin
                            g_prem_no = cppgeneral:prem_no
                            g_build_no = cppgeneral:build_no
                            g_code = "VACANT"
                            l_screen = "cppmtmso205"
                            function = "popup"
                            end ;

        "Prot"     Sequence "prot_disp"      Tagged protective_fn ;
        "prot_disp" Display "cppmtmso204" ;

        "water"     Sequence "water_disp"      Tagged water_fn ;
        "water_disp" Display "cppmtmso206" ;

        "sprink"     Sequence "sprink_disp"      Tagged sprinkler_fn ;
        "sprink_disp" Display "cppmtmso208" ;

        "exclu"    sequence "exclu_disp"           tagged copy_fn;
        "exclu_disp" continue begin
                                switch(cppgeneral:form)
                                 case 5 : l_screen = "cppmtmso201"
                                 case 3 : l_screen = "cppmtmso202"
                                 case 2 : l_screen = "cppmtmso203"
                                 default : l_screen = ""
                                end
                                function = "popup"
                                end ;

        "agreed" sequence "agreed_disp"   tagged agreed_fn ;
        "agreed_disp" continue begin
                        if sfscompany:boiler_rating = 4 then
                            begin
                            g_prem_no_1 = cppgeneral:prem_no
                            g_build_no_1 = cppgeneral:build_no
                            end
                        else
                            begin
                            g_prem_no_1 = 0
                            g_build_no_1 = 0
                            end
                        g_code = "MCP201"
                        function = "Value"
                        end ;

        include "stdfunc7.inc"

menu definition

        include "stdmenu7.inc"

        Include "cppmsomenu7.inc"

}

toolbar definition

        include "stdtoolbar7.inc"

}

        include "stdblanktoolbar7.inc"

}

        include "cppmsoopttoolbar7.inc"

}

screen entry
access sfpname, set sfpname:policy_no = g_policy_no,
                    sfpname:pol_year = g_year,
                    sfpname:end_sequence = g_end_sequence, generic

access sfpamt, set sfpamt:policy_no = g_policy_no,
                   sfpamt:pol_year = g_year,
                   sfpamt:end_sequence = g_end_sequence, generic

access sfscompany, set sfscompany:company_id = sfpname:company_id, generic

if g_inquiry = "Y" then
    begin
    disable(add_fn)
    disable(delete_fn)
    disable(change_fn)
    end

Access Validation
If cppGENERAL:policy_NO <> G_policy_NO or
   cppgeneral:pol_year <> g_year or
   cppgeneral:end_sequence <> g_end_sequence Then
    Error 1000 ;

screen at 1,1 to 20,80
Properties
        {
        Layouttype = column
        }
{
Panel
Properties
        {
        Borderstyle     = raised
        Scrollbarpolicy = asneeded
        }
{
%%
                                                        ______________
*---------------------------------------------------------------------------------*
| Policy No:   _________  ____ ____       Business Description                    |
| Location No: ____       _________________________________________________       |
| Building No: ____       _________________________________________________       |
*---------------------------------------------------------------------------------*
| Show On Dec:  _                                                                 |
*---------------------------------------------------------------------------------*

%%

components

Fields
101     FUNCTION/noecho/showasguidetext ;
301     Begin
        access sfpname, set sfpname:policy_no = g_policy_no,
                            sfpname:pol_year = g_year,
                            sfpname:end_sequence = g_end_sequence, generic

        access sfsline, set sfsline:company_id       = sfpname:company_id,
                            sfsline:line_of_business = sfpname:line_of_business,
                            sfsline:lob_subline      = "00", generic

        l_line_of_business = sfsline:rating_line_of_business
        cppGENERAL:COMPANY_ID = sfpNAME:COMPANY_ID
        cppgeneral:rating_line_of_business = sfsline:rating_line_of_business
        If FUNCTION = "ADD" Then
            begin
            cppGENERAL:policy_NO = G_policy_NO
            cppgeneral:pol_year = g_year
            cppgeneral:end_sequence = g_end_sequence
            end
        End
        cppGENERAL:policy_NO/displayonly  ;
302     cppgeneral:pol_year/displayonly ;
303     cppgeneral:end_sequence/displayonly ;
401     Begin
        l_prem_no  = cppgeneral:prem_no
        l_build_no = cppgeneral:build_no
        If FUNCTION = "ADD" Then
            Begin
            cppGENERAL:PREM_NO = 1
            cppGENERAL:BUILD_NO = 1
            End
        End
        cppGENERAL:PREM_NO/default                  Mandatory
        If cppGENERAL:PREM_NO = 0 Then
            Error 1286 ;
501     cppGENERAL:BUILD_NO/default                 Mandatory
        If cppGENERAL:BUILD_NO = 0 Then
            Error 1287 ;

402     Begin
        access sfsline, set sfsline:company_id       = sfpname:company_id,
                            sfsline:line_of_business = sfpname:line_of_business,
                            sfsline:lob_subline      = "00", generic

        g_prem_no = cppgeneral:prem_no
        g_build_no = cppgeneral:build_no
        Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO,
                                     cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                     cppgeneral_alias:end_sequence = cppgeneral:end_sequence, Generic

        If FUNCTION = "ADD" Then
            Begin
            cppgeneral:business_desc[1] = cppgeneral_alias:business_desc[1]
            cppgeneral:business_desc[2] = cppgeneral_alias:business_desc[2]
            cppGENERAL:PACKAGE_MOD[1] = cppGENERAL_ALIAS:PACKAGE_MOD[1]
            cppGENERAL:PACKAGE_MOD[2] = cppGENERAL_ALIAS:PACKAGE_MOD[2]
            cppGENERAL:PACKAGE_MOD[3] = cppGENERAL_ALIAS:PACKAGE_MOD[3]
            cppGENERAL:PACKAGE_MOD[4] = cppGENERAL_ALIAS:PACKAGE_MOD[4]
            cppGENERAL:PACKAGE_MOD[5] = cppGENERAL_ALIAS:PACKAGE_MOD[5]
            cppGENERAL:PACKAGE_MOD[6] = cppGENERAL_ALIAS:PACKAGE_MOD[6]
            cppGENERAL:PACKAGE_MOD[7] = cppGENERAL_ALIAS:PACKAGE_MOD[7]
            cppGENERAL:COMPANY_DEVIATION[1] = cppGENERAL_ALIAS:COMPANY_DEVIATION[1]
            cppGENERAL:COMPANY_DEVIATION[2] = cppGENERAL_ALIAS:COMPANY_DEVIATION[2]
            cppGENERAL:COMPANY_DEVIATION[3] = cppGENERAL_ALIAS:COMPANY_DEVIATION[3]
            cppGENERAL:COMPANY_DEVIATION[4] = cppGENERAL_ALIAS:COMPANY_DEVIATION[4]
            cppGENERAL:COMPANY_DEVIATION[5] = cppGENERAL_ALIAS:COMPANY_DEVIATION[5]
            cppGENERAL:COMPANY_DEVIATION[6] = cppGENERAL_ALIAS:COMPANY_DEVIATION[6]
            cppGENERAL:COMPANY_DEVIATION[7] = cppGENERAL_ALIAS:COMPANY_DEVIATION[7]
            cppGENERAL:PUBLIC_INSTITUTIONAL = cppgeneral_alias:public_institutional
            End
        End
        cppGENERAL:BUSINESS_DESC[1]/uppercase/default ;
502     cppGENERAL:BUSINESS_DESC[2]/uppercase/default ;
701     cppgeneral:steel/checkbox/values="0,1"
        hide if sfscompany:boiler_Rating <> 4 ; -- used this variable because expansion is 1C
                                                -- this is for Delos to not print prem/building if checked

} -- end of header

CardDialog GUI at 1,90

{
Panel
Properties
        {
        Scrollbarpolicy = asneeded
        Text            = "Property Information"
        }
{

%%
*--------------------------------------------------------------------------------------------*
| State:      __  _______________   County:  ___  ________________________                   |
| Rate Type:  __  __________________________________________________                         |
| Builder's Risk:  _  Condo Assoc: _  Condo Unit-Owner: _  Public/Institute: _  Res Condo: _ |
| Shopping Center: _  Multiple Mercantiles: _  Mercantile with Apts:         _               |
| Group: __  Class Code: _________________________________________________  _____            |
| Construction:   _            Exclusions:    _  Sprinkler Leakage (Opt 4):  _               |
| Protection:     ___          Agreed Value:  _  SL Coinsurance:           ___               |
| Form/Option:    _ ________   Sprinklered:   _  Earthquake (Opt 6):         _               |
| Building Deduct:  _____      Vacancy:       _  Blanket:                    _               |
| Contents Deduct:  _____      Protective Systems:    _                                      |
| Wind Deduct:      _____      File No: _______________                                      |
| Coinsurance:      ___  ___   Rate Date:    __________ Hurricane Deduct:  _____             |
| Replacement Cost: _          Key Risk:              _ Rate Group/Symbol: __ ___            |
*--------------------------------------------------------------------------------------------*
%%

components

fields
201     Begin
        access sfpname, set sfpname:policy_no = g_policy_no,
                            sfpname:pol_year = g_year,
                            sfpname:end_sequence = g_end_sequence, generic

        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:STATE = cppGENERAL_ALIAS:STATE
            Else
                cppGENERAL:STATE = CPSDEFAULT:STATE
            End
        End
        cppGENERAL:STATE/default mandatory
        L_STATE = cppGENERAL:STATE
        Include "statehlp.inc"
202     SFSSTATE:DESCRIPTION ;
203     Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:COUNTY = cppGENERAL_ALIAS:COUNTY
            Else
                cppGENERAL:COUNTY = CPSDEFAULT:COUNTY
            End
        End
        cppGENERAL:COUNTY/default    mandatory
        Include "countyhlp.inc"
203     begin
        if function one of "ADD" and
           sfscompany:boiler_Rating = 4 then
            begin
            access sfplocation, set sfplocation:policy_no = g_policy_no,
                                    sfplocation:pol_year = g_year,
                                    sfplocation:end_sequence = g_end_sequence,
                                    sfplocation:prem_no  = cppgeneral:prem_no,
                                    sfplocation:build_no = cppgeneral:build_no, generic

            if sfplocation:policy_no <> g_policy_no or
               sfplocation:pol_year <> g_year or
               sfplocation:end_sequence <> g_end_sequence or
               sfplocation:prem_no <> cppgeneral:prem_no or
               sfplocation:build_no <> cppgeneral:build_no then
                begin
                g_state = cppgeneral:state
                display modal screen "sfpmt004"
                with initial function "ADD|BACK"
                end
            end

            cppgeneral:territory = sfsterritory_alias:territory
        end
        cppgeneral:county/displayonly ;
204     SFSSTATE_ALIAS:DESCRIPTION ;

301     Begin
        If FUNCTION = "ADD" Then
            cppGENERAL:RATE_TYPE = CPSDEFAULT:RATE_TYPE
        End
        cppGENERAL:RATE_TYPE/default
        If cppGENERAL:RATE_TYPE <> CPSRATETYPE:RATE_TYPE Then
            Error 1202

        Activehelp CPSRATETYPE_ALIAS:RATE_TYPE,
                   CPSRATETYPE_ALIAS:DESCRIPTION   ;
302     CPSRATETYPE:DESCRIPTION;

401     Begin
        If FUNCTION = "ADD" and
           sfscompany:boiler_rating = 4 Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                begin
                cppGENERAL:BUILDERS_RISK = cppGENERAL_ALIAS:BUILDERS_RISK
                cppgeneral:condo = cppgeneral_alias:condo
                cppgeneral:unit_owner = cppgeneral_alias:unit_owner
                cppgeneral:res_condo = cppgeneral_alias:res_condo
                end
            End
        End
        cppGENERAL:BUILDERS_RISK/checkbox/values="0,1"/default
        If cppGENERAL:BUILDERS_RISK = 1 Then
            cppGENERAL:PERPETUAL_RATED = 0
        Access CPSBUILDRISK, Set CPSBUILDRISK:COMPANY_ID = sfpNAME:COMPANY_ID,
                                 CPSBUILDRISK:STATE = L_STATE,
                                 CPSBUILDRISK:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

        While CPSBUILDRISK:COMPANY_ID = sfpNAME:COMPANY_ID And
              CPSBUILDRISK:STATE = L_STATE And
              CPSBUILDRISK:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
                Begin
                If sfpNAME:EFF_DATE >= CPSBUILDRISK:EFF_DATE Then
                   Begin
                   If cppGENERAL:BUILDERS_RISK = 1 Then
                       Begin
                       cppGENERAL:TRANS_RATE_NO = CPSBUILDRISK:TRANSITIONAL_RATE_NO
                       cppGENERAL:COINSURANCE = CPSBUILDRISK:COINSURANCE
                       L_TRANS_RATE_NO = CPSBUILDRISK:TRANSITIONAL_RATE_NO
                       End
                   End

                Next CPSBUILDRISK
                End ;
402     cppGENERAL:CONDO/checkbox/values="0,1";
403     begin
            l_unit_owner = cppgeneral:unit_owner
        end
        cppGENERAL:UNIT_OWNER/checkbox/values="0,1";
404     cppGENERAL:PUBLIC_INSTITUTIONAL/checkbox/values="0,1" ;
405     begin
            l_res_condo = cppgeneral:res_condo
        end
        cppgeneral:res_condo/checkbox/values="0,1"
        hide if sfscompany:boiler_rating <> 4 ;

501     begin
        If cppGENERAL:FILE_NO = "" Or
           cppGENERAL:PERPETUAL_RATED = 1 Or
           cppGENERAL:RESIDENTIAL = 1 Then
            cppgeneral:specific_rate_adjustment[1] = 0
        end
        cppgeneral:shopping_centers/checkbox/values="0,1" ;
502     cppgeneral:multiple_mercantiles/checkbox/values="0,1" ;
503    cppgeneral:mercantiles_with_apts/checkbox/values="0,1" ;

601     begin
        if function one of "ADD" then
            begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                begin
                cppgeneral:group_no = cppgeneral_alias:group_no
                cppgeneral:description = cppgeneral_alias:description
                cppgeneral:property_class_code = cppgeneral_alias:property_class_code
                cppgeneral:class_code = cppgeneral_alias:class_code
                cppgeneral:sub_group = cppgeneral_alias:sub_group
                cppgeneral:sub_code = cppgeneral_alias:sub_code
                end
            end
        end
        cppGENERAL:GROUP_NO/default
        If cppGENERAL:GROUP_NO <> CPSCLASSGRP:GROUP_NO Then
            Error 1262

        Activehelp If CPSCLASSGRP_ALIAS:SUB_GROUP = 00 Then
                       CPSCLASSGRP_ALIAS:GROUP_NO
                   Else
                       NULL/width=10 ,
                   If CPSCLASSGRP_ALIAS:SUB_GROUP = 00 Then
                       CPSCLASSGRP_ALIAS:DESCRIPTION
                   Else
                       NULL/width=75 ;
602     Begin
        l_change_description = cppgeneral:description
        Access CPSTRANSITIONAL, Set CPSTRANSITIONAL:COMPANY_ID = sfpNAME:COMPANY_ID,
                                    CPSTRANSITIONAL:STATE = cppGENERAL:STATE,
                                    CPSTRANSITIONAL:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                    CPSTRANSITIONAL:GROUP_NO = cppGENERAL:GROUP_NO,
                                    CPSTRANSITIONAL:SUB_GROUP = cppGENERAL:SUB_GROUP ,
                                    CPSTRANSITIONAL:CLASS_CODE = cppGENERAL:CLASS_CODE,
                                    CPSTRANSITIONAL:SUB_CODE = cppGENERAL:SUB_CODE, Generic

        While CPSTRANSITIONAL:COMPANY_ID = sfpNAME:COMPANY_ID And
              CPSTRANSITIONAL:STATE = cppGENERAL:STATE And
              CPSTRANSITIONAL:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS And
              CPSTRANSITIONAL:GROUP_NO = cppGENERAL:GROUP_NO And
              CPSTRANSITIONAL:SUB_GROUP = cppGENERAL:SUB_GROUP And
              CPSTRANSITIONAL:CLASS_CODE = cppGENERAL:CLASS_CODE And
              CPSTRANSITIONAL:SUB_CODE = cppGENERAL:SUB_CODE
                Begin
                If sfpNAME:EFF_DATE >= CPSTRANSITIONAL:EFF_DATE Then
                    L_DESC = CPSTRANSITIONAL:ALPHA_LOOK

                Next CPSTRANSITIONAL
                End
        cppgeneral:description = l_desc
        End
        cppgeneral:description/displayonly/uppercase ;
602     Begin
        l_sub_group = 1
        l_group_no = cppgeneral:group_no
        l_eff_date = sfpname:eff_date
        Access CPSTRANSITIONAL_ALIAS, Set CPSTRANSITIONAL_ALIAS:COMPANY_ID = sfpNAME:COMPANY_ID,
                                          CPSTRANSITIONAL_ALIAS:STATE = cppGENERAL:STATE,
                                          CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
--                                          cpstransitional_alias:group_no = l_group_no,
--                                          cpstransitional_alias:sub_group = l_sub_group, approximate
                                          CPSTRANSITIONAL_ALIAS:ALPHA_LOOK = cppgeneral:description, Approximate

        If FUNCTION = "ADD" And
           SECURITY < 65 Then
            Activehelp()

        End
        cppgeneral:description/upper/default    Mandatory
        hide if cpsdefault:show_class_code_warning = 0
        if cpstransitional_alias:dont_display_on_activehelp = 1 then
            warning "Refer to underwriter for this class code"

        l_desc = cppgeneral:description
        Access CPSTRANSITIONAL_ALIAS, Set CPSTRANSITIONAL_ALIAS:COMPANY_ID = sfpNAME:COMPANY_ID,
                                          CPSTRANSITIONAL_ALIAS:STATE = cppGENERAL:STATE,
                                          CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                          CPSTRANSITIONAL_ALIAS:ALPHA_LOOK = l_desc, using second index, approximate

        if sfscompany:boiler_rating = 4 then
            begin
            if function one of "ADD" or
               cppgeneral:description <> l_change_description then
                begin
            while cpstransitional_alias:company_id = sfpname:company_id and
              cpstransitional_alias:state = cppgeneral:state and
              cpstransitional_alias:line_of_business = l_line_of_business and
              cpstransitional_alias:alpha_look = l_desc
                begin
                if (sfpname:eff_date >= cpstransitional_alias:eff_date and
                   (sfpname:eff_date <= cpstransitional_alias:exp_date or
                   cpstransitional_alias:exp_date = 0)) then
                    begin
                    cppGENERAL:CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:PROPERTY_CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:SUB_CODE = CPSTRANSITIONAL_ALIAS:SUB_CODE
                    cppGENERAL:GROUP_NO = CPSTRANSITIONAL_ALIAS:GROUP_NO
                    cppGENERAL:SUB_GROUP = CPSTRANSITIONAL_ALIAS:SUB_GROUP
                    cppGENERAL:APT_CONDO = CPSTRANSITIONAL_ALIAS:APT_CONDO
                    cppGENERAL:EARTHQUAKE_RATE_CLASS = CPSTRANSITIONAL_ALIAS:EARTHQUAKE_RATE_CLASS
                    cppGENERAL:RATE_GROUP = CPSTRANSITIONAL_ALIAS:RATE_GROUP
                    cppGENERAL:CMP_SYMBOL = CPSTRANSITIONAL_ALIAS:CMP_SYMBOL
                    cppGENERAL:PERPETUAL_RATED = CPSTRANSITIONAL_ALIAS:PERPETUAL_RATED
                    if cpstransitional_alias:perpetual_rated = 1 and
                       sfscompany:boiler_rating = 4 then
                        begin
                        access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no, generic

                        cppgeneral:rate_group = cppgeneral_alias:rate_group
                        cppgeneral:cmp_symbol = cppgeneral_alias:cmp_symbol
                        end
                    cppGENERAL:RESIDENTIAL = CPSTRANSITIONAL_ALIAS:RESIDENTIAL
                    cppgeneral:church = cpstransitional_alias:church
                    cppgeneral:dont_inspect = cpstransitional_alias:dont_inspect
                    If FUNCTION = "ADD" Or
                       L_CLASS_CODE <> cppGENERAL:PROPERTY_CLASS_CODE Then
                        Begin
                        If CPSTRANSITIONAL_ALIAS:PACKAGE_MOD <> 0 and
                           sfsline:lob_code one of "SMP" Then
                            Begin
                            cppGENERAL:PACKAGE_MOD[1] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[2] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[3] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[4] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[5] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[6] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            End
                        End
                    end

                next cpstransitional_alias
                end

                end
            end
        else
            begin
            while cpstransitional_alias:company_id = sfpname:company_id and
              cpstransitional_alias:state = cppgeneral:state and
              cpstransitional_alias:line_of_business = l_line_of_business and
              cpstransitional_alias:alpha_look = l_desc
                begin
                if (sfpname:eff_date >= cpstransitional_alias:eff_date and
                   (sfpname:eff_date <= cpstransitional_alias:exp_date or
                   cpstransitional_alias:exp_date = 0)) then
                    begin
                    cppGENERAL:CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:PROPERTY_CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:SUB_CODE = CPSTRANSITIONAL_ALIAS:SUB_CODE
                    cppGENERAL:GROUP_NO = CPSTRANSITIONAL_ALIAS:GROUP_NO
                    cppGENERAL:SUB_GROUP = CPSTRANSITIONAL_ALIAS:SUB_GROUP
                    cppGENERAL:APT_CONDO = CPSTRANSITIONAL_ALIAS:APT_CONDO
                    cppGENERAL:EARTHQUAKE_RATE_CLASS = CPSTRANSITIONAL_ALIAS:EARTHQUAKE_RATE_CLASS
                    cppGENERAL:RATE_GROUP = CPSTRANSITIONAL_ALIAS:RATE_GROUP
                    cppGENERAL:CMP_SYMBOL = CPSTRANSITIONAL_ALIAS:CMP_SYMBOL
                    cppGENERAL:PERPETUAL_RATED = CPSTRANSITIONAL_ALIAS:PERPETUAL_RATED
                    if cpstransitional_alias:perpetual_rated = 1 and
                       sfscompany:boiler_rating = 4 then
                        begin
                        access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no, generic

                        cppgeneral:rate_group = cppgeneral_alias:rate_group
                        cppgeneral:cmp_symbol = cppgeneral_alias:cmp_symbol
                        end
                    cppGENERAL:RESIDENTIAL = CPSTRANSITIONAL_ALIAS:RESIDENTIAL
                    cppgeneral:church = cpstransitional_alias:church
                    cppgeneral:dont_inspect = cpstransitional_alias:dont_inspect
                    If FUNCTION = "ADD" Or
                       L_CLASS_CODE <> cppGENERAL:PROPERTY_CLASS_CODE Then
                        Begin
                        If CPSTRANSITIONAL_ALIAS:PACKAGE_MOD <> 0 and
                           sfsline:lob_code one of "SMP" Then
                            Begin
                            cppGENERAL:PACKAGE_MOD[1] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[2] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[3] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[4] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[5] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[6] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            End
                        End
                    end

                next cpstransitional_alias
                end

            end

        Activehelp If (CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS And
                      CPSTRANSITIONAL_ALIAS:GROUP_NO = cppGENERAL:GROUP_NO and
                      (l_eff_date >= cpstransitional_alias:eff_date and
                      (l_eff_date <= cpstransitional_alias:exp_date or
                      cpstransitional_alias:exp_date = 0))) then
                       CPSTRANSITIONAL_ALIAS:ALPHA_LOOK
                   Else
                       NULL/width=50,
                   If (CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS And
                      CPSTRANSITIONAL_ALIAS:GROUP_NO = cppGENERAL:GROUP_NO and
                      (l_eff_date >= cpstransitional_alias:eff_date and
                      (l_eff_date <= cpstransitional_alias:exp_date or
                      cpstransitional_alias:exp_date = 0))) then
                       CPSTRANSITIONAL_ALIAS:CLASS_CODE
                   Else
                       NULL/mask="9999"/width=10 ;
602    Begin
        l_desc = ""
        l_change_description = cppgeneral:description
        Access CPSTRANSITIONAL_ALIAS, Set CPSTRANSITIONAL_ALIAS:COMPANY_ID = sfpNAME:COMPANY_ID,
                                          CPSTRANSITIONAL_ALIAS:STATE = cppGENERAL:STATE,
                                          CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                          CPSTRANSITIONAL_ALIAS:ALPHA_LOOK = l_desc, Approximate

        If FUNCTION = "ADD" And
           SECURITY < 65 Then
            Activehelp()

        End
        cppgeneral:description/upper/default    Mandatory
        hide if cpsdefault:show_class_code_warning = 1
        l_desc = cppgeneral:description
        Access CPSTRANSITIONAL_ALIAS, Set CPSTRANSITIONAL_ALIAS:COMPANY_ID = sfpNAME:COMPANY_ID,
                                          CPSTRANSITIONAL_ALIAS:STATE = cppGENERAL:STATE,
                                          CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                          CPSTRANSITIONAL_ALIAS:ALPHA_LOOK = l_desc, Approximate


        if sfscompany:boiler_Rating = 4 then
            begin
            if function one of "ADD" or
               cppgeneral:description <> l_change_description then
                begin
            while cpstransitional_alias:company_id = sfpname:company_id and
              cpstransitional_alias:state = cppgeneral:state and
              cpstransitional_alias:line_of_business = l_line_of_business and
              cpstransitional_alias:alpha_look = l_desc
                begin
                if (sfpname:eff_date >= cpstransitional_alias:eff_date and
                   (sfpname:eff_date <= cpstransitional_alias:exp_date or
                   cpstransitional_alias:exp_date = 0)) then
                    begin
                    cppGENERAL:CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:PROPERTY_CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:SUB_CODE = CPSTRANSITIONAL_ALIAS:SUB_CODE
                    cppGENERAL:GROUP_NO = CPSTRANSITIONAL_ALIAS:GROUP_NO
                    cppGENERAL:SUB_GROUP = CPSTRANSITIONAL_ALIAS:SUB_GROUP
                    cppGENERAL:APT_CONDO = CPSTRANSITIONAL_ALIAS:APT_CONDO
                    cppGENERAL:EARTHQUAKE_RATE_CLASS = CPSTRANSITIONAL_ALIAS:EARTHQUAKE_RATE_CLASS
                    cppGENERAL:RATE_GROUP = CPSTRANSITIONAL_ALIAS:RATE_GROUP
                    cppGENERAL:CMP_SYMBOL = CPSTRANSITIONAL_ALIAS:CMP_SYMBOL
                    cppGENERAL:PERPETUAL_RATED = CPSTRANSITIONAL_ALIAS:PERPETUAL_RATED
                    if cpstransitional_alias:perpetual_rated = 1 and
                       sfscompany:boiler_rating = 4 then
                        begin
                        access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no, generic

                        cppgeneral:rate_group = cppgeneral_alias:rate_group
                        cppgeneral:cmp_symbol = cppgeneral_alias:cmp_symbol
                        end
                    cppGENERAL:RESIDENTIAL = CPSTRANSITIONAL_ALIAS:RESIDENTIAL
                    cppgeneral:church = cpstransitional_alias:church
                    cppgeneral:dont_inspect = cpstransitional_alias:dont_inspect
                    If FUNCTION = "ADD" Or
                       L_CLASS_CODE <> cppGENERAL:PROPERTY_CLASS_CODE Then
                        Begin
                        If CPSTRANSITIONAL_ALIAS:PACKAGE_MOD <> 0 and
                           sfsline:lob_code = "SMP" Then
                            Begin
                            cppGENERAL:PACKAGE_MOD[1] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[2] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[3] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[4] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[5] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[6] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            End
                        End
                    end

                next cpstransitional_alias
                end
                end
            end
        else
            begin
            while cpstransitional_alias:company_id = sfpname:company_id and
              cpstransitional_alias:state = cppgeneral:state and
              cpstransitional_alias:line_of_business = l_line_of_business and
              cpstransitional_alias:alpha_look = l_desc
                begin
                if (sfpname:eff_date >= cpstransitional_alias:eff_date and
                   (sfpname:eff_date <= cpstransitional_alias:exp_date or
                   cpstransitional_alias:exp_date = 0)) then
                    begin
                    cppGENERAL:CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:PROPERTY_CLASS_CODE = CPSTRANSITIONAL_ALIAS:CLASS_CODE
                    cppGENERAL:SUB_CODE = CPSTRANSITIONAL_ALIAS:SUB_CODE
                    cppGENERAL:GROUP_NO = CPSTRANSITIONAL_ALIAS:GROUP_NO
                    cppGENERAL:SUB_GROUP = CPSTRANSITIONAL_ALIAS:SUB_GROUP
                    cppGENERAL:APT_CONDO = CPSTRANSITIONAL_ALIAS:APT_CONDO
                    cppGENERAL:EARTHQUAKE_RATE_CLASS = CPSTRANSITIONAL_ALIAS:EARTHQUAKE_RATE_CLASS
                    cppGENERAL:RATE_GROUP = CPSTRANSITIONAL_ALIAS:RATE_GROUP
                    cppGENERAL:CMP_SYMBOL = CPSTRANSITIONAL_ALIAS:CMP_SYMBOL
                    cppGENERAL:PERPETUAL_RATED = CPSTRANSITIONAL_ALIAS:PERPETUAL_RATED
                    if cpstransitional_alias:perpetual_rated = 1 and
                       sfscompany:boiler_rating = 4 then
                        begin
                        access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no, generic

                        cppgeneral:rate_group = cppgeneral_alias:rate_group
                        cppgeneral:cmp_symbol = cppgeneral_alias:cmp_symbol
                        end
                    cppGENERAL:RESIDENTIAL = CPSTRANSITIONAL_ALIAS:RESIDENTIAL
                    cppgeneral:church = cpstransitional_alias:church
                    cppgeneral:dont_inspect = cpstransitional_alias:dont_inspect
                    If FUNCTION = "ADD" Or
                       L_CLASS_CODE <> cppGENERAL:PROPERTY_CLASS_CODE Then
                        Begin
                        If CPSTRANSITIONAL_ALIAS:PACKAGE_MOD <> 0 and
                           sfsline:lob_code = "SMP" Then
                            Begin
                            cppGENERAL:PACKAGE_MOD[1] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[2] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[3] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[4] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[5] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            cppGENERAL:PACKAGE_MOD[6] = CPSTRANSITIONAL_ALIAS:PACKAGE_MOD
                            End
                        End
                    end

                next cpstransitional_alias
                end
            end

        Activehelp If (CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS And
                      CPSTRANSITIONAL_ALIAS:GROUP_NO = cppGENERAL:GROUP_NO and
                      CPSTRANSITIONAL_ALIAS:DONT_DISPLAY_ON_ACTIVEHELP = 0 and
                      (sfpname:eff_date >= cpstransitional_alias:eff_date and
                      (sfpname:eff_date <= cpstransitional_alias:exp_date or
                      cpstransitional_alias:exp_date = 0))) then
                       CPSTRANSITIONAL_ALIAS:ALPHA_LOOK
                   Else
                       NULL/width=50,
                   If (CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS And
                      CPSTRANSITIONAL_ALIAS:GROUP_NO = cppGENERAL:GROUP_NO and
                      CPSTRANSITIONAL_ALIAS:DONT_DISPLAY_ON_ACTIVEHELP = 0 and
                      (sfpname:eff_date >= cpstransitional_alias:eff_date and
                      (sfpname:eff_date <= cpstransitional_alias:exp_date or
                      cpstransitional_alias:exp_date = 0))) then
                       CPSTRANSITIONAL_ALIAS:CLASS_CODE
                   Else
                       NULL/mask="9999"/width=10 ;
603    cppGENERAL:PROPERTY_CLASS_CODE/displayonly/mask="9999" ;

701    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:CONSTRUCTION = cppGENERAL_ALIAS:CONSTRUCTION
            Else
                cppGENERAL:CONSTRUCTION = CPSDEFAULT:CONSTRUCTION
            End
        End
        cppGENERAL:CONSTRUCTION/default
        If cppGENERAL:CONSTRUCTION <> SFSCONSTRUCTION:CONSTRUCTION Then
            Error 1203

        cppGENERAL:CONSTRUCTION_CODE = SFSCONSTRUCTION:CODE
        Activehelp SFSCONSTRUCTION_ALIAS:CONSTRUCTION,
                   SFSCONSTRUCTION_ALIAS:DESCRIPTION ;
801    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:PROTECTION = cppGENERAL_ALIAS:PROTECTION
            Else
                cppGENERAL:PROTECTION = CPSDEFAULT:PROTECTION
            End
        End
        cppGENERAL:PROTECTION/default
        If cppGENERAL:PROTECTION <> SFSPROTECTION:PROTECTION or
           cppgeneral:protection = 0 Then
            Error 1204

        Activehelp SFSPROTECTION_ALIAS:PROTECTION,
                   SFSPROTECTION_ALIAS:DESCRIPTION  ;
901    Begin
        L_FORM = cppGENERAL:FORM
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = G_policy_NO Then
                cppGENERAL:FORM = cppGENERAL_ALIAS:FORM
            Else
                cppGENERAL:FORM = CPSDEFAULT:FORM
            End
        End
        cppGENERAL:FORM/default
        If cppGENERAL:FORM <> SFSFORM:POLICY_FORM Then
            Error 1205

        Activehelp SFSFORM_ALIAS:POLICY_FORM ,
                   SFSFORM_ALIAS:DESCRIPTION ;
902    SFSFORM:DESCRIPTION ;
1001    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:DEDUCTIBLE = cppGENERAL_ALIAS:DEDUCTIBLE
            Else
                cppGENERAL:DEDUCTIBLE = CPSDEFAULT:DEDUCTIBLE
            End
        l_prior_deductible = cppgeneral:deductible
        End
        cppGENERAL:DEDUCTIBLE/default
        Access SFSDEDUCTIBLE, Set SFSDEDUCTIBLE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                  SFSDEDUCTIBLE:STATE = cppGENERAL:STATE,
                                  SFSDEDUCTIBLE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                  SFSDEDUCTIBLE:DEDUCTIBLE = cppGENERAL:DEDUCTIBLE, Generic

        If cppGENERAL:DEDUCTIBLE <> SFSDEDUCTIBLE:DEDUCTIBLE Then
            Error 1207

        Activehelp if sfsdeductible_alias:show_in_activehelp = 0 then
                       SFSDEDUCTIBLE_ALIAS:DEDUCTIBLE
                   else
                       null ;
1101    Begin
        If FUNCTION = "ADD" Then
            Begin
            cppGENERAL:CONTENTS_DEDUCTIBLE = cppGENERAL:DEDUCTIBLE
            End
        l_prior_contents_deductible = cppgeneral:contents_deductible
        End
        cppGENERAL:CONTENTS_DEDUCTIBLE/default
        Access SFSDEDUCTIBLE, Set SFSDEDUCTIBLE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                  SFSDEDUCTIBLE:STATE = cppGENERAL:STATE,
                                  SFSDEDUCTIBLE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                  SFSDEDUCTIBLE:DEDUCTIBLE = cppGENERAL:CONTENTS_DEDUCTIBLE, Generic

        access cppexclusions, set cppexclusions:policy_no = cppgeneral:policy_no,
                                  cppexclusions:pol_year = cppgeneral:pol_year,
                                  cppexclusions:end_sequence = cppgeneral:end_sequence,
                                  cppexclusions:prem_no = cppgeneral:prem_no,
                                  cppexclusions:build_no = cppgeneral:build_no,
                                  cppexclusions:rate_type = cppgeneral:rate_type, generic

        If cppGENERAL:CONTENTS_DEDUCTIBLE <> SFSDEDUCTIBLE:DEDUCTIBLE Then
            Error 1207

        Activehelp if sfsdeductible_alias:show_in_activehelp = 0 then
                       SFSDEDUCTIBLE_ALIAS:DEDUCTIBLE
                   else null ;

--1501    cppgeneral:deductible/displayonly ;
--1601    cppgeneral:contents_deductible/displayonly ;

1201    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:WIND_DEDUCTIBLE = cppGENERAL_ALIAS:WIND_DEDUCTIBLE
            Else
                cppGENERAL:WIND_DEDUCTIBLE = 0
            End
        End
        cppGENERAL:WIND_DEDUCTIBLE/default
        hide if cppexclusions:exclude_wind_hail = 1
        If cppGENERAL:WIND_DEDUCTIBLE <> SFSWINDDEDUCT:WIND_DEDUCTIBLE And
           cppGENERAL:WIND_DEDUCTIBLE <> 0 Then
            Error 1207

        Activehelp SFSWINDDEDUCT_ALIAS:WIND_DEDUCTIBLE ;
1301    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL:PUBLIC_INSTITUTIONAL = 1 Then
                cppGENERAL:COINSURANCE = CPSINSTITUTIONAL:COINSURANCE_MINIMUM
            Else
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:COINSURANCE = cppGENERAL_ALIAS:COINSURANCE
            Else
                cppGENERAL:COINSURANCE = CPSDEFAULT:COINSURANCE
            End
        End
        cppGENERAL:COINSURANCE/default
        Hide If cppGENERAL:BUILDERS_RISK = 1
        Access CPSCOINSURANCE, Set CPSCOINSURANCE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                   CPSCOINSURANCE:STATE = cppGENERAL:STATE,
                                   CPSCOINSURANCE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                   CPSCOINSURANCE:OPTION = cppGENERAL:FORM,
                                   CPSCOINSURANCE:COINSURANCE = cppGENERAL:COINSURANCE, Generic

        If cppGENERAL:COINSURANCE <> CPSCOINSURANCE:COINSURANCE Then
            Error 1208
        If cppGENERAL:COINSURANCE < CPSINSTITUTIONAL:COINSURANCE_MINIMUM And
           cppGENERAL:PUBLIC_INSTITUTIONAL = 1 Then
            Error 1208

        Activehelp CPSCOINSURANCE_ALIAS:COINSURANCE ;
1301    cppGENERAL:COINSURANCE/displayonly ;
1302    Begin
        If FUNCTION = "ADD" Then
            Begin
-- delos allows different coinsurance per building and contents and there is no
-- more room in the file so i am using BCEG which is a field for ISO rating
            If cppGENERAL:PUBLIC_INSTITUTIONAL = 1 Then
                cppGENERAL:bceg = CPSINSTITUTIONAL:COINSURANCE_MINIMUM
            Else
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:bceg = cppGENERAL_ALIAS:COINSURANCE
            Else
                cppGENERAL:bceg = CPSDEFAULT:COINSURANCE
            End
        End
        cppGENERAL:bceg/default
        Hide If cppGENERAL:BUILDERS_RISK = 1
        hide if sfscompany:boiler_rating <> 4
        Access CPSCOINSURANCE, Set CPSCOINSURANCE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                   CPSCOINSURANCE:STATE = cppGENERAL:STATE,
                                   CPSCOINSURANCE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                   CPSCOINSURANCE:OPTION = cppGENERAL:FORM,
                                   CPSCOINSURANCE:COINSURANCE = cppGENERAL:bceg, Generic

        If cppGENERAL:bceg <> CPSCOINSURANCE:COINSURANCE Then
            Error 1208

        If cppGENERAL:bceg < CPSINSTITUTIONAL:COINSURANCE_MINIMUM And
           cppGENERAL:PUBLIC_INSTITUTIONAL = 1 Then
            Error 1208

        Activehelp CPSCOINSURANCE_ALIAS:COINSURANCE ;
1302    cppGENERAL:bceg/displayonly ;
1401    Begin
        If FUNCTION = "ADD" Then
            Begin
            if cppgeneral:res_condo = 1 and
               sfscompany:boiler_rating = 4 then
                cppgeneral:replacement_cost = 1

            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:REPLACEMENT_COST = cppGENERAL_ALIAS:REPLACEMENT_COST
            End
        End
        cppGENERAL:REPLACEMENT_COST/checkbox/values="0,1"/default ;

702    Begin
        L_EXCLUSIONS = cppGENERAL:EXCLUSIONS
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:EXCLUSIONS = cppGENERAL_ALIAS:EXCLUSIONS
            End
        End
        cppGENERAL:EXCLUSIONS/checkbox/values="0,1"/default
        Hide If cppGENERAL:FORM = 1 ;
802     Begin
        If cppGENERAL:EXCLUSIONS = 1 and
           sfscompany:boiler_Rating = 4 Then
            Begin
            If FUNCTION = "CHANGE" And
               L_FORM <> cppGENERAL:FORM Then
                Begin -- if the form/options is changed delete the exclusions
                      -- and let them re-enter what they want to exclude because
                      -- different forms/options have different exclusions applicable

                Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                          cppexclusions:pol_year = cppgeneral:pol_year,
                                          cppexclusions:end_sequence = cppgeneral:end_sequence,
                                          cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                          cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                          cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

                If cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO And
                   cppexclusions:pol_year = cppgeneral:pol_year and
                   cppexclusions:end_sequence = cppgeneral:end_sequence and
                   cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO And
                   cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO And
                   cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE Then
                    Delete cppEXCLUSIONS

                g_policy_no = cppgeneral:policy_no
                g_year = cppgeneral:pol_year
                g_end_sequence = cppgeneral:end_sequence
                g_prem_no = cppgeneral:prem_no
                g_build_no = cppgeneral:build_no
                g_rate_type = cppgeneral:rate_type
                Switch(cppGENERAL:FORM)
                  Case 5  : L_SCREEN = "cppmtmso201"
                  Case 3  : L_SCREEN = "cppmtmso202"
                  Case 2  : L_SCREEN = "cppmtmso203"
                  Default : L_SCREEN = ""
                  End

                If L_SCREEN <> "" Then
                    Begin
                    g_policy_no = cppgeneral:policy_no
                    g_year = cppgeneral:pol_year
                    g_end_sequence = cppgeneral:end_sequence
                    g_prem_no = cppgeneral:prem_no
                    g_build_no = cppgeneral:build_no
                    g_rate_type = cppgeneral:rate_type
                    Display Modal Screen L_SCREEN
                    With Initial Function "ADD|BACK"
                    End
                End
            else
            If (FUNCTION = "ADD" Or
               (FUNCTION = "CHANGE" And
               L_EXCLUSIONS = 0)) Then
                Begin
                write("%c%s",1005,"      ")
                Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                          cppexclusions:pol_year = cppgeneral:pol_year,
                                          cppexclusions:end_sequence = cppgeneral:end_sequence,
                                          cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                          cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                          cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

                If cppEXCLUSIONS:policy_NO <> cppGENERAL:policy_NO or
                   cppexclusions:pol_year <> cppgeneral:pol_year or
                   cppexclusions:end_sequence <> cppgeneral:end_sequence or
                   cppEXCLUSIONS:PREM_NO <> cppGENERAL:PREM_NO or
                   cppEXCLUSIONS:BUILD_NO <> cppGENERAL:BUILD_NO or
                   cppEXCLUSIONS:RATE_TYPE <> cppGENERAL:RATE_TYPE Then
                    begin
                    g_policy_no = cppgeneral:policy_no
                    g_year = cppgeneral:pol_year
                    g_end_sequence = cppgeneral:end_sequence
                    g_prem_no = cppgeneral:prem_no
                    g_build_no = cppgeneral:build_no
                    g_rate_type = cppgeneral:rate_type
                    Switch(cppGENERAL:FORM)
                      Case 5  : L_SCREEN = "cppmtmso201"
                      Case 3  : L_SCREEN = "cppmtmso202"
                      Case 2  : L_SCREEN = "cppmtmso203"
                      Default : L_SCREEN = ""
                      End

                    If L_SCREEN <> "" Then
                        Begin
                        Display Modal Screen L_SCREEN
                        With Initial Function "ADD|BACK"
                        End
                    end
                End

            end

        L_AGREED = cppGENERAL:AGREED_VALUE
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:AGREED_VALUE = cppGENERAL_ALIAS:AGREED_VALUE
            End
        End
        cppGENERAL:AGREED_VALUE/checkbox/values="0,1"/default
        If ((FUNCTION = "ADD" Or
           FUNCTION = "CHANGE") And
           cppGENERAL:BUILDERS_RISK = 1 And
           cppGENERAL:AGREED_VALUE = 1) Then
            Begin
            l_code = "MCP201"
            cppGENERAL:AGREED_VALUE = 0
            Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                                   cppendorse:pol_year = cppgeneral:pol_year,
                                   cppendorse:end_sequence = cppgeneral:end_sequence,
                                   cppendorse:PREM_NO = cppGENERAL:PREM_NO,
                                   cppendorse:BUILD_NO = cppGENERAL:BUILD_NO,
                                   cppendorse:code = l_code, generic

            while cppendorse:policy_NO = cppGENERAL:policy_NO And
                  cppendorse:pol_year = cppgeneral:pol_year and
                  cppendorse:end_sequence = cppgeneral:end_sequence and
                  cppendorse:PREM_NO = cppGENERAL:PREM_NO And
                  cppendorse:BUILD_NO = cppGENERAL:BUILD_NO And
                  cppendorse:code = l_code
                    begin
                    Delete cppendorse

                    next cppendorse
                    end
            End  ;
903    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = G_policy_NO Then
                cppGENERAL:SPRINKLERED = cppGENERAL_ALIAS:SPRINKLERED
            End
        End
        cppGENERAL:SPRINKLERED/checkbox/values="0,1"/default ;
1002    Begin
        L_VACANCY = cppGENERAL:VACANCY
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = G_policy_NO Then
                cppGENERAL:VACANCY = cppGENERAL_ALIAS:VACANCY
            End
        End
        cppGENERAL:VACANCY/checkbox/values="0,1"/default ;
1102    Begin
        L_PROTECTIVE_SYSTEMS = cppGENERAL:PROTECTIVE_SYSTEMS
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:PROTECTIVE_SYSTEMS = cppGENERAL_ALIAS:PROTECTIVE_SYSTEMS
            End
        End
        cppGENERAL:PROTECTIVE_SYSTEMS/checkbox/values="0,1"/default
        Hide If cppGENERAL:FORM <> 5  ;
--                cppGENERAL:RATE_TYPE = 1 ;
1202    cppGENERAL:FILE_NO ;
1303    cppGENERAL:RATE_EFF_DATE
        Hide If cppGENERAL:FILE_NO = "" ;
1402    cppGENERAL:key_risk/checkbox/values="0,1"  ;

703    Begin
        L_SPRINKLER_LEAKAGE = cppGENERAL:SPRINKLER_LEAKAGE
        -- agreed value can not be written on builders risk
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL:FORM = 5 Then
                cppGENERAL:SPRINKLER_LEAKAGE = 1
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:SPRINKLER_LEAKAGE = cppGENERAL_ALIAS:SPRINKLER_LEAKAGE
            End
        End
        cppGENERAL:SPRINKLER_LEAKAGE/checkbox/values="0,1"/default
        If cppGENERAL:SPRINKLER_LEAKAGE = 0 Then
            cppGENERAL:SL_COINSURANCE = 0
        if cppgeneral:sprinkler_leakage = 1 and
           cppgeneral:form < 5 then
            warning "Sprinkler leakage has been added" ;
803    Begin
        If FUNCTION = "ADD" Then
            Begin
            If cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO Then
                cppGENERAL:SL_COINSURANCE = cppGENERAL_ALIAS:SL_COINSURANCE
            End
        L_FORM_OPTION = 4
        Access CPSCOINSURANCE_ALIAS, Set CPSCOINSURANCE_ALIAS:COMPANY_ID = sfpNAME:COMPANY_ID,
                                         CPSCOINSURANCE_ALIAS:STATE = cppGENERAL:STATE,
                                         CPSCOINSURANCE_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                         CPSCOINSURANCE_ALIAS:OPTION = L_FORM_OPTION, Generic
        End
        cppGENERAL:SL_COINSURANCE/default
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0
        L_FORM_OPTION  = 4
        Access CPSCOINSURANCE, Set CPSCOINSURANCE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                   CPSCOINSURANCE:STATE = cppGENERAL:STATE,
                                   CPSCOINSURANCE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                   CPSCOINSURANCE:OPTION = L_FORM_OPTION,
                                   CPSCOINSURANCE:COINSURANCE = cppGENERAL:SL_COINSURANCE, Generic

        If cppGENERAL:SL_COINSURANCE <> CPSCOINSURANCE:COINSURANCE Then
            Error 1208

        Activehelp CPSCOINSURANCE_ALIAS:COINSURANCE ;
904    Begin
            L_EARTHQUAKE = cppGENERAL:EARTHQUAKE
        End
        cppGENERAL:EARTHQUAKE/checkbox/values="0,1" ;
1003    begin
        l_blanket = cppgeneral:blanket
        If cppGENERAL:EARTHQUAKE = 1 Then
            Begin
            If (FUNCTION = "ADD" Or
               (FUNCTION = "CHANGE" And
               L_EARTHQUAKE = 0)) Then
                Begin
                G_STATE = cppGENERAL:STATE
                G_EARTHQUAKE_RATE_CLASS = cppGENERAL:EARTHQUAKE_RATE_CLASS
                g_rate_group = cppgeneral:rate_group
                g_rate_Type = cppgeneral:rate_type
                Display Modal Screen "cppmtmso253"
                With Initial Function "ADD|BACK"
                End
            end
        end
        cppgeneral:blanket/checkbox/values="0,1" ;
1304    begin
        access cppgeneral1, set cppgeneral1:policy_no    = cppgeneral:policy_no,
                                cppgeneral1:pol_year     = cppgeneral:pol_year,
                                cppgeneral1:end_sequence = cppgeneral:end_sequence,
                                cppgeneral1:prem_no      = cppgeneral:prem_no,
                                cppgeneral1:build_no     = cppgeneral:build_no, generic

        l_override_hurricane_deductible = cppgeneral1:override_hurricane_deductible
        if l_override_hurricane_deductible = 0 and
           cppgeneral1:hurricane_changed = 0 then
            l_override_hurricane_deductible = cppgeneral1:hurricane_deductible
        end
        l_override_hurricane_deductible/default
        if l_override_hurricane_deductible not one of 0, 1, 2, 3 then
            error "Invalid Percentage Entered"

        if l_override_hurricane_deductible = 1 and
           sfpname:eff_date < 09.01.2012 then
            error "This is not available until 9/1/2012"

        if l_override_hurricane_deductible <> cppgeneral1:override_hurricane_deductible and
           g_inquiry <> "Y" then
            begin
            l_state = cppgeneral:state
            access sfstier, set sfstier:company_id       = sfpname:company_id,
                                sfstier:state            = l_state,
                                sfstier:line_of_business = sfpname:line_of_business, generic

            l_hurricane_code_1 = ""
            l_hurricane_code_2 = ""
            l_hurricane_code_3 = ""
            while sfstier:company_Id       = sfpname:company_id and
                  sfstier:state            = l_state and
                  sfstier:line_of_business = sfpname:line_of_business
                begin
                if (sfpname:eff_date >= sfstier:eff_date and
                   (sfpname:eff_date <= sfstier:exp_date or
                   sfstier:exp_date = 0)) then
                    begin
                    if sfstier:hurricane_deductible = cppgeneral1:hurricane_deductible and
                       cppgeneral1:hurricane_deductible <> l_override_hurricane_deductible then
                        l_hurricane_code_1 = sfstier:hurricane_code
                    if sfstier:hurricane_deductible = l_override_hurricane_deductible then
                        l_hurricane_code_2 = sfstier:hurricane_code
                    if sfstier:hurricane_deductible = cppgeneral1:override_hurricane_deductible and
                       cppgeneral1:override_hurricane_deductible <> l_override_hurricane_deductible then
                        l_hurricane_code_3 = sfstier:hurricane_code
                    end

                next sfstier
                end

            if l_override_hurricane_deductible = 1 and
               sfpname:eff_date >= 09.01.2012 then
                begin
                l_code = "FCL22"
                do access_sfpend
                if l_add_endorsement = "Y" then
                    do add_sfpend
                end
            else
            if l_override_hurricane_deductible not one of 1 then
                begin
                l_code = "FCL22"
                do access_sfpend
                if l_add_endorsement = "N" then
                    do delete_sfpend
                end

            if l_hurricane_code_1 <> "" and
               cppgeneral:company_id = "FLEMINGTON" then
                begin
                l_code = l_hurricane_code_1
                do access_sfpend
                if l_add_endorsement = "Y" and
                   l_override_hurricane_deductible = cppgeneral1:hurricane_deductible then
                    do add_sfpend
                if l_add_endorsement = "N" and
                   l_override_hurricane_deductible <> cppgeneral1:hurricane_deductible then
                    do delete_sfpend
                end

            if l_hurricane_code_2 <> "" and
               cppgeneral:company_id = "FLEMINGTON" then
                begin
                l_code = l_hurricane_code_2
                do access_sfpend
                if l_add_endorsement = "Y" then
                    do add_sfpend
                end

            if l_hurricane_code_3 <> "" and
               cppgeneral:company_id = "FLEMINGTON" then
                begin
                l_code = l_hurricane_code_3
                do access_sfpend
                if l_add_endorsement = "N" then
                    do delete_sfpend
                end

            end

        if g_inquiry <> "Y" then
            begin

            access cppgeneral1, set cppgeneral1:policy_no    = cppgeneral:policy_no,
                                    cppgeneral1:pol_year     = cppgeneral:pol_year,
                                    cppgeneral1:end_sequence = cppgeneral:end_sequence,
                                    cppgeneral1:prem_no      = cppgeneral:prem_no,
                                    cppgeneral1:build_no     = cppgeneral:build_no, generic

            if cppgeneral1:policy_no    = cppgeneral:policy_no and
               cppgeneral1:pol_year     = cppgeneral:pol_year and
               cppgeneral1:end_sequence = cppgeneral:end_sequence and
               cppgeneral1:prem_no      = cppgeneral:prem_no and
               cppgeneral1:build_no     = cppgeneral:build_no then
                begin
                change cppgeneral1
                    begin
                    if l_override_hurricane_deductible <> cppgeneral1:override_hurricane_deductible then
                        begin
                        cppgeneral1:override_hurricane_deductible = l_override_hurricane_deductible
                        cppgeneral1:hurricane_changed = 1
                        end
                    else
                        begin
                        cppgeneral1:hurricane_changed = 0
                        end
                    end
                end
            end;


1403    cppgeneral:rate_group/displayonly
        hide if sfscompany:boiler_Rating = 4;
1404    cppgeneral:cmp_symbol/displayonly
        hide if sfscompany:boiler_rating = 4;
1403    cppgeneral:rate_group/default
        hide if sfscompany:boiler_Rating <> 4;
1404    cppgeneral:cmp_symbol/default/uppercase
        hide if sfscompany:boiler_rating <> 4;

} -- end of property

Panel
Properties
        {
        Scrollbarpolicy = asneeded
        Text            = "Building/Contents Information"
        }
{

%%
*---------------------------------------------------------------------------------*
|         BUILDING     BUREAU   COMPANY   CONTENTS     BUREAU      COMPANY        |
| Limit: __________     RATE      RATE   __________     RATE         RATE         |
| Fire:               _______   _______                _______     _______        |
| EC:                 _______   _______                _______     _______        |
| VMM:                _______   _______                _______     _______        |
| AOP:                _______   _______                _______     _______        |
| SL:                 _______   _______                _______     _______        |
| Earthquake:         _______   _______                _______     _______        |
*---------------------------------------------------------------------------------*

%%

components

fields
-- building
301    cppGENERAL:LIMIT[1]
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        if cppgeneral:limit[1] = 0 then
            begin
--            cppgeneral:base_rate[1] = 0
--            cppgeneral:base_rate[2] = 0
--            cppgeneral:base_rate[3] = 0
--            cppgeneral:base_rate[4] = 0
--            cppgeneral:base_rate[5] = 0
--            cppgeneral:base_rate[6] = 0
--            cppgeneral:new_rate[1]  = 0
--            cppgeneral:new_rate[2]  = 0
--            cppgeneral:new_rate[3]  = 0
--            cppgeneral:new_rate[4]  = 0
--            cppgeneral:new_rate[5]  = 0
--            cppgeneral:new_rate[6]  = 0
            cppgeneral:adj_rate1[1]  = 0
            cppgeneral:adj_rate1[2]  = 0
            cppgeneral:adj_rate1[3]  = 0
            cppgeneral:adj_rate1[4]  = 0
            cppgeneral:adj_rate1[5]  = 0
            cppgeneral:adj_rate1[6]  = 0
            cppgeneral:premium[1]   = 0
            cppgeneral:premium[2]   = 0
            cppgeneral:premium[3]   = 0
            cppgeneral:premium[4]   = 0
            cppgeneral:premium[5]   = 0
            cppgeneral:premium[6]   = 0
            cppgeneral:total_premium[1] = 0
            end ;

-- using whats in the manual for rating
401    Begin
        If FUNCTION = "ADD" Or
           FUNCTION = "CHANGE" Then
            Begin
            L_RATE_TYPE = 1
            Do GET_BASE_RATES
            if sfscompany:boiler_rating = 4 then
                begin
                if cppgeneral:construction_code = "F" then
                    Do FIRE_RESISTIVE_1
                Else
                    Begin
                    l_fire_resistive_1 = 1.00
                    l_fire_resistive_2 = 1.00
                    l_fire_resistive_3 = 1.00
                    cppGENERAL:FIRE_RESISTIVE_RATE[1] = 1.00
                    cppGENERAL:FIRE_RESISTIVE_RATE[2] = 1.00
                    cppGENERAL:FIRE_RESISTIVE_RATE[3] = 1.00
                    end
                If cppGENERAL:EXCLUSIONS = 1 Then
                    Do CAUSE_OF_LOSS
                Else
                    Begin
                    l_cl_water_factor_a = 1.00
                    l_cl_wind_Factor    = 1.00
                    l_cl_water_factor_c = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[1] = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[2] = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[3] = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[4] = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[5] = 1.00
                    cppGENERAL:WATER_EXCLUSION_FACTOR[6] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[1] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[2] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[3] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[4] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[5] = 1.00
                    cppGENERAL:WIND_EXCLUSION_FACTOR[6] = 1.00
                    end
                End
            else
                begin
                l_cl_water_factor_a = 1.00
                l_cl_wind_Factor    = 1.00
                l_cl_water_factor_c = 1.00
                l_fire_resistive_1  = 1.00
                l_fire_resistive_2  = 1.00
                l_fire_resistive_3  = 1.00
                end

            If cppGENERAL:BUILDERS_RISK = 1 Then
                Begin
                if l_fire_resistive_1 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[1] = L_TRANS_FIRE_FACTOR *
                                              L_BUILD_RISK_FIRE *
                                              l_fire_resistive_1
                else
                    cppGENERAL:BASE_RATE[1] = L_TRANS_FIRE_FACTOR *
                                              L_BUILD_RISK_FIRE *
                                              l_building_sprinklered_rate
                if l_fire_resistive_2 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[2] = l_fire_resistive_2 *
                                              L_BUILD_RISK_EC *
                                              l_cl_wind_factor
                else
                    cppGENERAL:BASE_RATE[2] = L_TRANS_EC_FACTOR *
                                              L_BUILD_RISK_EC *
                                              l_cl_wind_factor
                if l_fire_resistive_3 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[3] = l_fire_resistive_3 *
                                              L_BUILD_RISK_VMM
                else
                    cppGENERAL:BASE_RATE[3] = L_TRANS_VMM_FACTOR *
                                              L_BUILD_RISK_VMM
                cppGENERAL:BASE_RATE[4] = L_BUILD_RISK_AOP *
                                          l_cl_water_factor_a
                cppGENERAL:BASE_RATE[6] = L_SPRINKLER_LEAKAGE_RATE
                End
            Else
                Begin
                If cppGENERAL:FILE_NO = "" Or
                   cppGENERAL:PERPETUAL_RATED = 1 Or
                   cppGENERAL:RESIDENTIAL = 1 Then
                    Begin
                    if l_fire_resistive_1 not one of 0, 1.00 then
                        cppGENERAL:BASE_RATE[1] = L_TRANS_FIRE_FACTOR  *
                                                  l_fire_resistive_1
                    else
                        cppGENERAL:BASE_RATE[1] = L_TRANS_FIRE_FACTOR  *
                                                  l_building_sprinklered_rate
                    cppGENERAL:SPECIFIC_RATE_ADJUSTMENT[1] = 0
                    cppgeneral:specific_rate_minimum = l_specific_minimum
                    End
                Else
                    Begin
                    If FUNCTION = "ADD" Then
                        cppGENERAL:BASE_RATE[1] = 0
                    cppGENERAL:SPECIFIC_RATE_ADJUSTMENT[1] = L_SPECIFIC_RATE_ADJ
                    cppgeneral:specific_rate_minimum = l_specific_minimum
                    End
                if l_fire_resistive_2 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[2] = l_fire_resistive_2 * l_cl_wind_factor
                else
                    cppGENERAL:BASE_RATE[2] = L_TRANS_EC_FACTOR * l_cl_wind_factor
                if l_fire_resistive_3 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[3] = l_fire_resistive_3
                else
                    cppGENERAL:BASE_RATE[3] = L_TRANS_VMM_FACTOR
                If cppGENERAL:FORM = 3 Then
                    cppGENERAL:BASE_RATE[4] = L_OPTION3_RATE_A * l_cl_water_factor_a
                If cppGENERAL:FORM = 5 Then
                    Begin
                    cppGENERAL:BASE_RATE[4] = L_OPTION5_RATE * l_cl_water_factor_a
                    If cppGENERAL:GROUP_NO = 7 Then
                        cppGENERAL:BRTHEFT = L_OPTION5_CHARGE
                    End
                cppGENERAL:BASE_RATE[6] = L_SPRINKLER_LEAKAGE_RATE
                cppgeneral:base_rate[5] = l_earthquake_rate
                End
            End
        End
        cppGENERAL:BASE_RATE[1]/default
        Hide If cppGENERAL:blanket = 1
        hide if sfpamt:slot_rated = 1
        If cppGENERAL:FORM = 1 Then
            cppGENERAL:BASE_RATE[2] = 0 ;
501    cppGENERAL:BASE_RATE[2]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 --Or
                --cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:FORM = 1 Or
           cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 Then
            cppGENERAL:BASE_RATE[3] = 0 ;
601    cppGENERAL:BASE_RATE[3]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 --Or
                --cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:FORM not one of 3, 5 Then
            cppGENERAL:BASE_RATE[4] = 0 ;
701    cppGENERAL:BASE_RATE[4]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5 --Or
                --cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:SPRINKLER_LEAKAGE = 0 Then
            cppGENERAL:BASE_RATE[6] = 0 ;
801    cppGENERAL:BASE_RATE[6]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 Or
                --cppGENERAL:LIMIT[1] = 0 Or
                cppGENERAL:FORM = 5 ;
901    cppgeneral:base_rate[5]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;
--                cppgeneral:limit[1] = 0;

-- company changes the rate
402    cppGENERAL:new_rate[1]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
--        Hide If cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:FORM = 1 Then
            cppGENERAL:NEW_RATE[2] = 0 ;
502    cppGENERAL:NEW_RATE[2]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 --Or
--                cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:FORM = 1 Or
           cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 Then
            cppGENERAL:NEW_RATE[3] = 0 ;
602    cppGENERAL:NEW_RATE[3]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 --Or
--                cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:FORM not one of 3, 5 Then
            cppGENERAL:NEW_RATE[4] = 0 ;
702    cppGENERAL:NEW_RATE[4]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5 --Or
--                cppGENERAL:LIMIT[1] = 0
        If cppGENERAL:SPRINKLER_LEAKAGE = 0 Then
            cppGENERAL:NEW_RATE[6] = 0 ;
802    cppGENERAL:NEW_RATE[6]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 Or
--                cppGENERAL:LIMIT[1] = 0 Or
                cppGENERAL:FORM = 5 ;
902    cppgeneral:new_rate[5]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;
--                cppgeneral:limit[1] = 0 ;

-- contents
302    cppGENERAL:LIMIT[2]
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:blanket = 1
/*        If cppGENERAL:LIMIT[1] = 0 And
           cppGENERAL:LIMIT[2] = 0 Then
            Error "Must enter a limit for building and/or contents"*/
        if cppgeneral:limit[2] <> 0 and
           cppgeneral:contents_deductible = 0 then
            cppgeneral:contents_deductible = cppgeneral:deductible
        if cppgeneral:limit[2] = 0 then
            begin
--            cppgeneral:base_rate[7]  = 0
--            cppgeneral:base_rate[8]  = 0
--            cppgeneral:base_rate[9]  = 0
--            cppgeneral:base_rate[10] = 0
--            cppgeneral:base_rate[11] = 0
--            cppgeneral:base_rate[12] = 0
--            cppgeneral:new_rate[7]  = 0
--            cppgeneral:new_rate[8]  = 0
--            cppgeneral:new_rate[9]  = 0
--            cppgeneral:new_rate[10] = 0
--            cppgeneral:new_rate[11] = 0
--            cppgeneral:new_rate[12] = 0
            cppgeneral:adj_rate1[7]  = 0
            cppgeneral:adj_rate1[8]  = 0
            cppgeneral:adj_rate1[9]  = 0
            cppgeneral:adj_rate1[10] = 0
            cppgeneral:adj_rate1[11] = 0
            cppgeneral:adj_rate1[12] = 0
            cppgeneral:premium[7]   = 0
            cppgeneral:premium[8]   = 0
            cppgeneral:premium[9]   = 0
            cppgeneral:premium[10]  = 0
            cppgeneral:premium[11]  = 0
            cppgeneral:premium[12]  = 0
            cppgeneral:total_premium[2] = 0
            end ;

-- rates from the manual for contents
403    Begin
        If FUNCTION = "ADD" Or
           FUNCTION = "CHANGE" Then
            Begin
            L_RATE_TYPE = 2
            Do GET_BASE_RATES
            if sfscompany:boiler_rating = 4 then
                begin
                if cppgeneral:construction_code = "F" then
                    Do FIRE_RESISTIVE_2
                Else
                    Begin
                    cppGENERAL:FIRE_RESISTIVE_RATE[4] = 1.00
                    cppGENERAL:FIRE_RESISTIVE_RATE[5] = 1.00
                    cppGENERAL:FIRE_RESISTIVE_RATE[6] = 1.00
                    l_fire_resistive_4 = 1.00
                    l_fire_resistive_5 = 1.00
                    l_Fire_resistive_6 = 1.00
                    End
                end
            else
                begin
                l_fire_resistive_4 = 1.00
                l_fire_resistive_5 = 1.00
                l_Fire_resistive_6 = 1.00
                end

            If cppGENERAL:BUILDERS_RISK = 1 Then
                Begin
                if l_fire_resistive_4 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[7] = L_TRANS_FIRE_FACTOR *
                                              L_BUILD_RISK_FIRE *
                                              l_fire_resistive_4
                else
                    cppGENERAL:BASE_RATE[7] = L_TRANS_FIRE_FACTOR *
                                              L_BUILD_RISK_FIRE *
                                              l_contents_sprinklered_rate
                if l_fire_resistive_5 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[8] = l_Fire_resistive_5 *
                                              L_BUILD_RISK_EC *
                                              l_cl_wind_factor
                else
                    cppGENERAL:BASE_RATE[8] = L_TRANS_EC_FACTOR *
                                              L_BUILD_RISK_EC *
                                              l_cl_wind_factor
                if l_fire_resistive_6 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[9] = l_fire_resistive_6 *
                                              L_BUILD_RISK_VMM
                else
                    cppGENERAL:BASE_RATE[9] = L_TRANS_VMM_FACTOR *
                                              L_BUILD_RISK_VMM
                cppGENERAL:BASE_RATE[10] = L_BUILD_RISK_AOP *
                                           l_cl_water_factor_c
                cppGENERAL:BASE_RATE[12] = L_SPRINKLER_LEAKAGE_RATE
                End
            Else
                Begin
                If cppGENERAL:FILE_NO = "" Or
                   cppGENERAL:PERPETUAL_RATED = 1 Or
                   cppGENERAL:RESIDENTIAL = 1 Then
                    Begin
                    if l_fire_resistive_4 not one of 0, 1.00 then
                        cppGENERAL:BASE_RATE[7] = L_TRANS_FIRE_FACTOR *
                                                  l_fire_resistive_4
                    else
                        cppGENERAL:BASE_RATE[7] = L_TRANS_FIRE_FACTOR *
                                                  l_contents_sprinklered_rate
                    cppGENERAL:SPECIFIC_RATE_ADJUSTMENT[2] = 0
                    cppgeneral:specific_rate_minimum = l_specific_minimum
                    End
                Else
                    Begin
                    If FUNCTION = "ADD" Then
                        cppGENERAL:BASE_RATE[7] = 0
                    cppGENERAL:SPECIFIC_RATE_ADJUSTMENT[2] = L_SPECIFIC_RATE_ADJ
                    cppgeneral:specific_rate_minimum = l_specific_minimum
                    End
                if l_fire_resistive_5 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[8] = l_Fire_resistive_5 * l_cl_wind_factor
                else
                    cppGENERAL:BASE_RATE[8] = L_TRANS_EC_FACTOR * l_cl_wind_factor
                if l_fire_resistive_6 not one of 0, 1.00 then
                    cppGENERAL:BASE_RATE[9] = l_fire_resistive_6
                else
                    cppGENERAL:BASE_RATE[9] = L_TRANS_VMM_FACTOR
                If cppGENERAL:FORM = 3 Then
                    cppGENERAL:BASE_RATE[10] = L_OPTION3_RATE_B * l_cl_water_factor_c
                If cppGENERAL:FORM = 5 Then
                    Begin
                    cppGENERAL:BASE_RATE[10] = L_OPTION5_RATE * l_cl_water_factor_c
                    If cppGENERAL:GROUP_NO = 7 Then
                        cppGENERAL:BRTHEFT = L_OPTION5_CHARGE
                    End
                cppGENERAL:BASE_RATE[12] = L_SPRINKLER_LEAKAGE_RATE
                cppgeneral:base_rate[11] = l_earthquake_rate
                End
            End
        End
        cppGENERAL:BASE_RATE[7]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        If cppGENERAL:FORM = 1 Then
            cppGENERAL:BASE_RATE[8] = 0 ;

503    cppGENERAL:BASE_RATE[8]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1
        If cppGENERAL:FORM = 1 Or
           cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 Then
            cppGENERAL:BASE_RATE[9] = 0 ;

603    cppGENERAL:BASE_RATE[9]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1

        If cppGENERAL:FORM not one of 3, 5 Then
            cppGENERAL:BASE_RATE[10] = 0 ;

703    cppGENERAL:BASE_RATE[10]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5

        If cppGENERAL:SPRINKLER_LEAKAGE = 0 Then
            cppGENERAL:BASE_RATE[12] = 0 ;
803    cppGENERAL:BASE_RATE[12]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 or
                cppGENERAL:FORM = 5 ;
903    cppgeneral:base_rate[11]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;

-- company changed rates
404    cppGENERAL:new_RATE[7]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        If cppGENERAL:FORM = 1 Then
            cppGENERAL:NEW_RATE[8] = 0 ;

504    cppGENERAL:NEW_RATE[8]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1
        If cppGENERAL:FORM = 1 Or
           cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 Then
            cppGENERAL:NEW_RATE[9] = 0 ;

604    cppGENERAL:NEW_RATE[9]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1

        If cppGENERAL:FORM not one of 3, 5 Then
            cppGENERAL:NEW_RATE[10] = 0 ;

704    cppGENERAL:NEW_RATE[10]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5

        If cppGENERAL:SPRINKLER_LEAKAGE = 0 Then
            cppGENERAL:NEW_RATE[12] = 0 ;
804    cppGENERAL:NEW_RATE[12]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 Or
                cppGENERAL:FORM = 5 ;
904    cppgeneral:new_rate[11]/default
        hide if cppgeneral:blanket = 1
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;

--3001    cppgeneral:other_subject_limit/mask="ZZ,ZZZ,ZZZ"
--        hide if cppgeneral:blanket = 1 ;

301    cppGENERAL:LIMIT[1]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1 ;
401    cppGENERAL:BASE_RATE[1]/displayonly
        Hide If cppGENERAL:blanket = 0
        hide if sfpamt:slot_rated = 1 ;
501    cppGENERAL:BASE_RATE[2]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1  ;
601    cppGENERAL:BASE_RATE[3]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 ;
701    cppGENERAL:BASE_RATE[4]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5 ;
801    cppGENERAL:BASE_RATE[6]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 Or
                cppGENERAL:FORM = 5 ;
901    cppgeneral:base_rate[5]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;

-- contents
302    cppGENERAL:LIMIT[2]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1 ;

-- rates from the manual for contents
403    cppGENERAL:BASE_RATE[7]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1 ;

503    cppGENERAL:BASE_RATE[8]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 ;
603    cppGENERAL:BASE_RATE[9]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM = 1 Or
                cppEXCLUSIONS:EXCLUDE_VANDALISM = 1 ;
703    cppGENERAL:BASE_RATE[10]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:FORM not one of 3, 5 ;
803    cppGENERAL:BASE_RATE[12]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        Hide If cppGENERAL:SPRINKLER_LEAKAGE = 0 or
                cppGENERAL:FORM = 5 ;
903    cppgeneral:base_rate[11]/displayonly
        hide if cppgeneral:blanket = 0
        hide if sfpamt:slot_rated = 1
        hide if cppgeneral:earthquake = 0 ;
--3001    cppgeneral:other_subject_limit/mask="ZZ,ZZZ,ZZZ"/displayonly
--        hide if cppgeneral:blanket = 0 ;

} -- end of building/contents

}

}

Update
If UPDATEOK = "YES" And
   Abort = "NO" Then
    Begin
    g_prem_no = cppgeneral:prem_no
    g_build_no = cppgeneral:build_no
    if function one of "ADD" and
       sfpamt:slot_rated = 1 and
       sfscompany:boiler_rating = 4 then
        begin
        display modal screen "cppmtmso240"
        with initial function "ADD|BACK"
        end

    if function one of "CHANGE", "CHG" then
        begin
        if l_prior_deductible <> cppgeneral:deductible or
           l_prior_contents_deductible <> cppgeneral:contents_deductible then
            begin
            G_policy_NO = cppGENERAL:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            G_PREM_NO = cppGENERAL:PREM_NO
            G_BUILD_NO = cppGENERAL:BUILD_NO
            G_RATE_TYPE = cppGENERAL:RATE_TYPE
            g_deductible = cppgeneral:deductible
            Display Modal Screen "cppmtmso226"
            With Initial Function "CHANGE|BACK"
            end
        if l_prior_wind_deductible <> cppgeneral:wind_deductible then
            begin
            G_policy_NO = cppGENERAL:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            G_PREM_NO = cppGENERAL:PREM_NO
            G_BUILD_NO = cppGENERAL:BUILD_NO
            G_RATE_TYPE = cppGENERAL:RATE_TYPE
            g_deductible = cppgeneral:deductible
            g_wind_deductible = cppgeneral:wind_deductible
            Display Modal Screen "cppmtmso227"
            With Initial Function "CHANGE|BACK"
            end
        end

    if function one of "DELETE" and
       cppgeneral:blanket = 1 and
       sfpamt:slot_rated = 0 then
        begin
        access cppblanket, set cppblanket:policy_no = cppgeneral:policy_no,
                               cppblanket:pol_year = cppgeneral:pol_year,
                               cppblanket:end_sequence = cppgeneral:end_sequence, generic

        while cppblanket:policy_no = cppgeneral:policy_no and
              cppblanket:pol_year = cppgeneral:pol_year and
              cppblanket:end_sequence = cppgeneral:end_sequence
            begin
            delete cppblanket

            next cppblanket
            end

        end

    access sfscompany, set sfscompany:company_id = sfpname:company_id, generic

    if function one of "ADD" and
       sfscompany:boiler_Rating <> 4 then
        begin
        if cppgeneral:blanket = 1 then
            begin
            g_policy_no = cppgeneral:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            g_prem_no = cppgeneral:prem_no
            g_build_no = cppgeneral:build_no
            g_rate_type = cppgeneral:rate_type
            display modal screen "cppmtmso02c"
            end
        end

    if function one of "CHANGE" and
       cppgeneral:blanket = 0 and
       l_blanket = 1 and
       sfpamt:slot_rated = 0 then
        begin
        do update_cppgeneral_from_cppblanket
        end

    If FUNCTION = "ADD" Or
       FUNCTION = "CHANGE" Then
        Begin
        access sfpmaster, set sfpmaster:policy_no = cppgeneral:policy_no,
                              sfpmaster:pol_year = cppgeneral:pol_year,
                              sfpmaster:end_sequence = cppgeneral:end_sequence, generic

        change sfpmaster
            begin
            sfpmaster:state = cppgeneral:state
            sfpmaster:county = cppgeneral:county
            end

        access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no,
                                     cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                     cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                                     cppgeneral_alias:prem_no = cppgeneral:prem_no,
                                     cppgeneral_alias:build_no = cppgeneral:build_no,
                                     cppgeneral_alias:rate_type = cppgeneral:rate_type, generic

        if cppgeneral_alias:policy_no = cppgeneral:policy_no and
           cppgeneral_alias:pol_year = cppgeneral:pol_year and
           cppgeneral_alias:end_sequence = cppgeneral:end_sequence and
           cppgeneral_alias:prem_no = cppgeneral:prem_no and
           cppgeneral_alias:build_no = cppgeneral:build_no and
           cppgeneral_alias:rate_type = cppgeneral:rate_type then
            begin
            change cppgeneral_alias
                begin
                if cppgeneral_alias:new_rate[1] <> 0 then
                    cppgeneral_alias:manually_rated[1] = 1
                else
                    cppgeneral_alias:manually_rated[1] = 0
                if cppgeneral_alias:new_rate[2] <> 0 then
                    cppgeneral_alias:manually_rated[2] = 1
                else
                    cppgeneral_alias:manually_rated[2] = 0
                if cppgeneral_alias:new_rate[3] <> 0 then
                    cppgeneral_alias:manually_rated[3] = 1
                else
                    cppgeneral_alias:manually_rated[3] = 0
                if cppgeneral_alias:new_rate[4] <> 0 then
                    cppgeneral_alias:manually_rated[4] = 1
                else
                    cppgeneral_alias:manually_rated[4] = 0
                if cppgeneral_alias:new_rate[5] <> 0 then
                    cppgeneral_alias:manually_rated[5] = 1
                else
                    cppgeneral_alias:manually_rated[5] = 0
                if cppgeneral_alias:new_rate[6] <> 0 then
                    cppgeneral_alias:manually_rated[6] = 1
                else
                    cppgeneral_alias:manually_rated[6] = 0
                if cppgeneral_alias:new_rate[7] <> 0 then
                    cppgeneral_alias:manually_rated[7] = 1
                else
                    cppgeneral_alias:manually_rated[7] = 0
                if cppgeneral_alias:new_rate[8] <> 0 then
                    cppgeneral_alias:manually_rated[8] = 1
                else
                    cppgeneral_alias:manually_rated[8] = 0
                if cppgeneral_alias:new_rate[9] <> 0 then
                    cppgeneral_alias:manually_rated[9] = 1
                else
                    cppgeneral_alias:manually_rated[9] = 0
                if cppgeneral_alias:new_rate[10] <> 0 then
                    cppgeneral_alias:manually_rated[10] = 1
                else
                    cppgeneral_alias:manually_rated[10] = 0
                if cppgeneral_alias:new_rate[11] <> 0 then
                    cppgeneral_alias:manually_rated[11] = 1
                else
                    cppgeneral_alias:manually_rated[11] = 0
                if cppgeneral_alias:new_rate[12] <> 0 then
                    cppgeneral_alias:manually_rated[12] = 1
                else
                    cppgeneral_alias:manually_rated[12] = 0
                end
            end

        l_deductible = cppgeneral:deductible
        if l_deductible = 0 then
            l_deductible = cppgeneral:contents_deductible
        Access SFSDEDUCTIBLE, Set SFSDEDUCTIBLE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                  SFSDEDUCTIBLE:STATE = cppGENERAL:STATE,
                                  SFSDEDUCTIBLE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                  SFSDEDUCTIBLE:DEDUCTIBLE = l_DEDUCTIBLE, Generic

        If l_deductible >= 5000 and
           sfscompany:boiler_rating <> 4 Then
            Begin
            G_policy_NO = cppGENERAL:policy_NO
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            G_PREM_NO = cppGENERAL:PREM_NO
            G_BUILD_NO = cppGENERAL:BUILD_NO
            G_RATE_TYPE = cppGENERAL:RATE_TYPE
            Display Modal Screen "cppmtmso209"
            With Initial Function "CHANGE|BACK"
            End
        else
        If sfscompany:boiler_rating = 4 and
           function one of "ADD" and
           sfpamt:slot_rated = 0 Then
            Begin
            G_policy_NO = cppGENERAL:policy_NO
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            G_PREM_NO = cppGENERAL:PREM_NO
            G_BUILD_NO = cppGENERAL:BUILD_NO
            G_RATE_TYPE = cppGENERAL:RATE_TYPE
            g_deductible = cppgeneral:deductible
            g_wind_deductible = cppgeneral:wind_deductible
            Display Modal Screen "cppmtmso226"
            With Initial Function "CHANGE|BACK"
            if cppgeneral:wind_deductible <> 0 then
                begin
                Display Modal Screen "cppmtmso227"
                With Initial Function "CHANGE|BACK"
                end
            End
        Else
        if sfscompany:boiler_rating <> 4 then
            Begin
            Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO,
                                         cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                         cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                                         cppGENERAL_ALIAS:PREM_NO = cppGENERAL:PREM_NO,
                                         cppGENERAL_ALIAS:BUILD_NO = cppGENERAL:BUILD_NO,
                                         cppGENERAL_ALIAS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

            if cppgeneral_alias:policy_no = cppgeneral:policy_no and
               cppgeneral_alias:pol_year = cppgeneral:pol_year and
               cppgeneral_alias:end_sequence = cppgeneral:end_sequence and
               cppgeneral_alias:prem_no = cppgeneral:prem_no and
               cppgeneral_alias:build_no = cppgeneral:build_no and
               cppgeneral_alias:rate_type = cppgeneral:rate_type then
                Change cppGENERAL_ALIAS
                Begin
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[1] = 1.00
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[2] = 1.00
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[3] = 1.00
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[4] = 1.00
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[5] = 1.00
                cppGENERAL_ALIAS:DEDUCTIBLE_FACTOR[6] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[1] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[2] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[3] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[4] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[5] = 1.00
                cppGENERAL_ALIAS:CONTENTS_DEDUCT_FACTOR[6] = 1.00
                End
            End
        End

    if function = "ADD" then
        begin
        Access cpppolicy, Set cpppolicy:policy_NO = G_policy_NO,
                              cpppolicy:pol_year = g_year,
                              cpppolicy:end_sequence = g_end_sequence,
                              cpppolicy:PREM_NO = cppGENERAL:PREM_NO,
                              cpppolicy:BUILD_NO = cppGENERAL:BUILD_NO, Generic

        If cpppolicy:policy_NO <> G_policy_NO Or
           cpppolicy:pol_year <> g_year or
           cpppolicy:end_sequence <> g_end_sequence or
           cpppolicy:PREM_NO <> cppGENERAL:PREM_NO Or
           cpppolicy:BUILD_NO <> cppGENERAL:BUILD_NO Then
            Add cpppolicy
                Begin
                cpppolicy:policy_NO = G_policy_NO
                cpppolicy:pol_year = g_year
                cpppolicy:end_sequence = g_end_sequence
                cpppolicy:PREM_NO = cppGENERAL:PREM_NO
                cpppolicy:BUILD_NO = cppGENERAL:BUILD_NO
                End
        end

    If FUNCTION  = "ADD" And
       cppGENERAL:COMPANY_DEVIATION[1] = 0 and
       sfpamt:slot_rated = 0 Then
        Begin
        G_POPUP = "Y"
        G_policy_NO = cppGENERAL:policy_NO
        g_year = cppgeneral:pol_year
        g_end_sequence = cppgeneral:end_sequence
        G_PREM_NO = cppGENERAL:PREM_NO
        G_BUILD_NO = cppGENERAL:BUILD_NO
        G_RATE_TYPE = cppGENERAL:RATE_TYPE
        G_STATE = cppGENERAL:STATE
        Display Modal Screen "cppmtmso296"
        With Initial Function "CHANGE|BACK"
        G_POPUP = "N"
        End
    else
    if function not one of "DELETE" and
       sfpamt:slot_rated = 0 then
        begin
        if sfsline:lob_code one of "SMP" and
           sfpname:company_id = "FARMERS" then
            do access_cpstransitional
        end

    If cppGENERAL:VACANCY = 1 Then
        Begin
        If (FUNCTION = "ADD" Or
           (FUNCTION = "CHANGE" And
           L_VACANCY  = 0)) Then
            Begin
            g_code = "VACANT"
            Display Modal Screen "cppmtmso205"
            With Initial Function "ADD|BACK"
            End
        End

    If cppGENERAL:VACANCY = 0 Then
        Begin
        l_code = "VACANT"
        Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                               cppendorse:pol_year = cppgeneral:pol_year,
                               cppendorse:end_sequence = cppgeneral:end_sequence,
                               cppendorse:PREM_NO = cppGENERAL:PREM_NO,
                               cppendorse:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppendorse:code = l_code, generic

        while cppendorse:policy_NO = cppGENERAL:policy_NO And
              cppendorse:pol_year = cppgeneral:pol_year and
              cppendorse:end_sequence = cppgeneral:end_sequence and
              cppendorse:PREM_NO = cppGENERAL:PREM_NO And
              cppendorse:BUILD_NO = cppGENERAL:BUILD_NO And
              cppendorse:code = l_code
                begin
                Delete cppendorse

                next cppendorse
                end

        End

    If cppGENERAL:PROTECTIVE_SYSTEMS = 1 Then
        Begin
        If (FUNCTION = "ADD" Or
           (FUNCTION = "CHANGE" And
           L_PROTECTIVE_SYSTEMS = 0)) Then
            Begin
            Display Modal Screen "cppmtmso204"
            With Initial Function "ADD|BACK"
            End
        End

    If cppGENERAL:PROTECTIVE_SYSTEMS = 0 Or
       cppGENERAL:FORM <> 5 Then
        Begin
        Access cppPROTECT, Set cppPROTECT:policy_NO = cppGENERAL:policy_NO,
                               cppprotect:pol_year = cppgeneral:pol_year,
                               cppprotect:end_sequence = cppgeneral:end_sequence,
                               cppPROTECT:PREM_NO = cppGENERAL:PREM_NO,
                               cppPROTECT:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppPROTECT:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppPROTECT:policy_NO = cppGENERAL:policy_NO And
           cppprotect:pol_year = cppgeneral:pol_year and
           cppprotect:end_sequence = cppgeneral:end_sequence and
           cppPROTECT:PREM_NO = cppGENERAL:PREM_NO And
           cppPROTECT:BUILD_NO = cppGENERAL:BUILD_NO And
           cppPROTECT:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppPROTECT

        End

    If cppGENERAL:EXCLUSIONS = 1 and
       sfscompany:boiler_Rating <> 4 Then
        Begin
        If FUNCTION = "CHANGE" And
           L_FORM <> cppGENERAL:FORM Then
            Begin -- if the form/options is changed delete the exclusions
                  -- and let them re-enter what they want to exclude because
                  -- different forms/options have different exclusions applicable
            Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                      cppexclusions:pol_year = cppgeneral:pol_year,
                                      cppexclusions:end_sequence = cppgeneral:end_sequence,
                                      cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                      cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                      cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

            If cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO And
               cppexclusions:pol_year = cppgeneral:pol_year and
               cppexclusions:end_sequence = cppgeneral:end_sequence and
               cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO And
               cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO And
               cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE Then
                Delete cppEXCLUSIONS

            g_policy_no = cppgeneral:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            g_prem_no = cppgeneral:prem_no
            g_build_no = cppgeneral:build_no
            g_rate_type = cppgeneral:rate_type
            Switch(cppGENERAL:FORM)
              Case 5  : L_SCREEN = "cppmtmso201"
              Case 3  : L_SCREEN = "cppmtmso202"
              Case 2  : L_SCREEN = "cppmtmso203"
              Default : L_SCREEN = ""
              End
            If L_SCREEN <> "" Then
                Begin
                g_policy_no = cppgeneral:policy_no
                g_year = cppgeneral:pol_year
                g_end_sequence = cppgeneral:end_sequence
                g_prem_no = cppgeneral:prem_no
                g_build_no = cppgeneral:build_no
                g_rate_type = cppgeneral:rate_type
                Display Modal Screen L_SCREEN
                With Initial Function "ADD|BACK"
                End
            End
        else
        If (FUNCTION = "ADD" Or
           (FUNCTION = "CHANGE" And
           L_EXCLUSIONS = 0)) Then
            Begin
            write("%c%s",1005,"      ")
            g_policy_no = cppgeneral:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            g_prem_no = cppgeneral:prem_no
            g_build_no = cppgeneral:build_no
            g_rate_type = cppgeneral:rate_type
            Switch(cppGENERAL:FORM)
              Case 5  : L_SCREEN = "cppmtmso201"
              Case 3  : L_SCREEN = "cppmtmso202"
              Case 2  : L_SCREEN = "cppmtmso203"
              Default : L_SCREEN = ""
              End
            If L_SCREEN <> "" Then
                Begin
                Display Modal Screen L_SCREEN
                With Initial Function "ADD|BACK"
                End
            End
        end

    If cppGENERAL:EXCLUSIONS = 1 Then
        Begin
        Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                  cppexclusions:pol_year = cppgeneral:pol_year,
                                  cppexclusions:end_sequence = cppgeneral:end_sequence,
                                  cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                  cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        if cppexclusions:exclude_wind_hail = 1 then
            begin
            access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no,
                                         cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                         cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                                         cppgeneral_alias:prem_no = cppgeneral:prem_no,
                                         cppgeneral_alias:build_no = cppgeneral:build_no,
                                         cppgeneral_alias:rate_type = cppgeneral:rate_type, generic

            if cppgeneral_alias:wind_deductible <> 0 then
                begin
                change cppgeneral_alias
                    begin
                    cppgeneral_alias:wind_deductible = 0
                    end
                end
            end

        End

    If cppGENERAL:EXCLUSIONS = 0 Then
        Begin
        Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                  cppexclusions:pol_year = cppgeneral:pol_year,
                                  cppexclusions:end_sequence = cppgeneral:end_sequence,
                                  cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                  cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO And
           cppexclusions:pol_year = cppgeneral:pol_year and
           cppexclusions:end_sequence = cppgeneral:end_sequence and
           cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO And
           cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO And
           cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppEXCLUSIONS
        End

    If cppGENERAL:AGREED_VALUE = 1 Then
        Begin
        if sfscompany:boiler_rating <> 4 then
            begin
            l_prem_no_1  = 0
            l_build_no_1 = 0
            end
        else
            begin
            if cppgeneral:blanket = 0 then
                begin
                l_prem_no_1  = cppgeneral:prem_no
                l_build_no_1 = cppgeneral:build_no
                l_prem_no = 0
                l_build_no = 0
                end
            else
                begin
                l_prem_no_1  = 0
                l_build_no_1 = 0
                l_prem_no = 0
                l_build_no = 0
                end
            end
        l_code       = "MCP201"
        Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                               cppendorse:pol_year = cppgeneral:pol_year,
                               cppendorse:end_sequence = cppgeneral:end_sequence,
                               cppendorse:PREM_NO = l_prem_no_1,
                               cppendorse:BUILD_NO = l_build_no_1,
                               cppendorse:code = l_code, generic

        if ((cppendorse:policy_no <> cppgeneral:policy_no or
           cppendorse:pol_year <> cppgeneral:pol_year or
           cppendorse:end_sequence <> cppgeneral:end_sequence or
           cppendorse:prem_no <> l_prem_no_1 or
           cppendorse:build_no <> l_build_no_1 or
           cppendorse:code <> l_code) and
           sfscompany:boiler_rating <> 4 and
           cppgeneral:blanket = 0) then
            begin
            If (FUNCTION = "ADD" Or
               (FUNCTION = "CHANGE" And
               L_AGREED = 0)) Then
                Begin
                g_code = "MCP201"
                g_prem_no_1  = 0
                g_build_no_1 = 0
                Display Modal Screen "cppmtmso207"
                With Initial Function "ADD|BACK"
                end
            End
        else
        if ((cppendorse:policy_no <> cppgeneral:policy_no or
           cppendorse:pol_year <> cppgeneral:pol_year or
           cppendorse:end_sequence <> cppgeneral:end_sequence or
           cppendorse:prem_no <> l_prem_no_1 or
           cppendorse:build_no <> l_build_no_1 or
           cppendorse:code <> l_code) and
           sfscompany:boiler_rating = 4) then
            begin
            If (FUNCTION = "ADD" Or
               (FUNCTION = "CHANGE" And
               L_AGREED = 0)) then
                Begin
                if cppgeneral:blanket = 0 then
                    begin
                    g_code = "MCP201"
                    g_prem_no_1  = cppgeneral:prem_no
                    g_build_no_1 = cppgeneral:build_no
                    Display Modal Screen "cppmtmso207"
                    With Initial Function "ADD|BACK"
                    end
                else
                    begin
                    l_code = "MCP201"
                    do access_sfpend_1
                    if l_add_endorsement = "Y" then
                        begin
                        g_code = "MCP201"
                        g_prem_no_1  = 0
                        g_build_no_1 = 0
                        Display Modal Screen "cppmtmso207"
                        With Initial Function "ADD|BACK"
                        end
                    end
                End
            end
        else
        if cppendorse:policy_no = cppgeneral:policy_no and
           cppendorse:pol_year = cppgeneral:pol_year and
           cppendorse:end_sequence = cppgeneral:end_sequence and
           cppendorse:prem_no = l_prem_no_1 and
           cppendorse:build_no = l_build_no_1 and
           cppendorse:code = l_code and
           sfscompany:boiler_rating = 4 then
            begin
            If function = "CHANGE" Then
                Begin
                if cppgeneral:blanket = 0 then
                    begin
                    g_code = "MCP201"
                    g_prem_no_1  = cppgeneral:prem_no
                    g_build_no_1 = cppgeneral:build_no
                    Display Modal Screen "cppmtmso207"
                    With Initial Function "CHANGE|BACK"
                    end
                else
                    begin
                    l_code = "MCP201"
                    do access_sfpend_1
                    if l_add_endorsement = "Y" then
                        begin
                        g_code = "MCP201"
                        g_prem_no_1  = 0
                        g_build_no_1 = 0
                        Display Modal Screen "cppmtmso207"
                        With Initial Function "CHANGE|BACK"
                        end
                    end
                End
            end
        End

    If cppGENERAL:AGREED_VALUE = 0 Then
        Begin
        l_code = "MCP201"
        Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                               cppendorse:pol_year = cppgeneral:pol_year,
                               cppendorse:end_sequence = cppgeneral:end_sequence,
                               cppendorse:PREM_NO = cppGENERAL:PREM_NO,
                               cppendorse:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppendorse:code = l_code, generic

        while cppendorse:policy_NO = cppGENERAL:policy_NO And
              cppendorse:pol_year = cppgeneral:pol_year and
              cppendorse:end_sequence = cppgeneral:end_sequence and
              cppendorse:PREM_NO = cppGENERAL:PREM_NO And
              cppendorse:BUILD_NO = cppGENERAL:BUILD_NO And
              cppendorse:code = l_code
                begin
                Delete cppendorse

                next cppendorse
                end

        End

    If cppGENERAL:SPRINKLER_LEAKAGE = 1 And
       cppGENERAL:FORM <> 5 Then
        Begin
        If (FUNCTION = "ADD" Or
           (FUNCTION = "CHANGE" And
           L_SPRINKLER_LEAKAGE = 0)) Then
            Begin
            Display Modal Screen "cppmtmso208"
            With Initial Function "ADD|BACK"
            End
        End
    Else
        Begin
        Access cppSPRINKLEAK, Set cppSPRINKLEAK:policy_NO = cppGENERAL:policy_NO,
                                  cppsprinkleak:pol_year = cppgeneral:pol_year,
                                  cppsprinkleak:end_sequence = cppgeneral:end_sequence,
                                  cppSPRINKLEAK:PREM_NO = cppGENERAL:PREM_NO,
                                  cppSPRINKLEAK:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppSPRINKLEAK:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppSPRINKLEAK:policy_NO = cppGENERAL:policy_NO And
           cppsprinkleak:pol_year = cppgeneral:pol_year and
           cppsprinkleak:end_sequence = cppgeneral:end_sequence and
           cppSPRINKLEAK:PREM_NO = cppGENERAL:PREM_NO And
           cppSPRINKLEAK:BUILD_NO = cppGENERAL:BUILD_NO And
           cppSPRINKLEAK:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppSPRINKLEAK
        End

    if cppgeneral:earthquake = 0 then
        Begin
        Access cppEARTHQUAKE, Set cppEARTHQUAKE:policy_NO = cppGENERAL:policy_NO,
                                  cppearthquake:pol_year = cppgeneral:pol_year,
                                  cppearthquake:end_sequence = cppgeneral:end_sequence,
                                  cppEARTHQUAKE:PREM_NO = cppGENERAL:PREM_NO,
                                  cppEARTHQUAKE:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppEARTHQUAKE:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppEARTHQUAKE:policy_NO = cppGENERAL:policy_NO And
           cppearthquake:pol_year = cppgeneral:pol_year and
           cppearthquake:end_sequence = cppgeneral:end_sequence and
           cppEARTHQUAKE:PREM_NO = cppGENERAL:PREM_NO And
           cppEARTHQUAKE:BUILD_NO = cppGENERAL:BUILD_NO And
           cppEARTHQUAKE:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppEARTHQUAKE
        End

    If FUNCTION = "ADD" And
       SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 and
       sfpname:package = 1 and
       cppgeneral:blanket = 0 and
       sfscompany:boiler_Rating <> 4 Then
        Begin
        g_prem_no = cppgeneral:prem_no
        g_build_no = cppgeneral:build_no
        g_rate_type = cppgeneral:rate_type
        Display Modal Screen "cppmtmso02a"
        With Initial Function "CHANGE"
        Display Modal Screen "cppmtmso02b"
        With Initial Function "CHANGE"
        End

    If FUNCTION = "ADD" And
       SFSCOMPANY:SPECIAL_TERRITORY_RATING = 1 and
--       cppgeneral:blanket = 0 and
       sfscompany:boiler_rating = 4 and
       sfpamt:slot_rated = 0 Then
        Begin
        if cppgeneral:perpetual_rated = 0 then
            begin
            g_prem_no = cppgeneral:prem_no
            g_build_no = cppgeneral:build_no
            g_rate_type = cppgeneral:rate_type
            Display Modal Screen "cppmtmso02i"
            With Initial Function "CHANGE|BACK"
            end
        else
            begin
            access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no,
                                         cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                         cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                                         cppgeneral_alias:prem_no = cppgeneral:prem_no,
                                         cppgeneral_alias:build_no = cppgeneral:build_no,
                                         cppgeneral_alias:rate_type = cppgeneral:rate_type, generic

            change cppgeneral_alias
                begin
                cppgeneral_alias:rating_territory_factor = 1.00
                end
            end
        End

    if function = "CHANGE" then
        Begin
        Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                CPSPROPRATE:STATE = cppGENERAL:STATE,
                                CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

        While CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID And
              CPSPROPRATE:STATE = cppGENERAL:STATE And
              CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
                Begin
                If sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE Then
                    Begin
                    Access cppPROPERTY, Set cppPROPERTY:policy_NO = cppGENERAL:policy_NO,
                                            cppproperty:pol_year = cppgeneral:pol_year,
                                            cppproperty:end_sequence = cppgeneral:end_sequence,
                                            cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO,
                                            cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO, Generic

                    If cppPROPERTY:policy_NO = cppGENERAL:policy_NO Or
                       cppproperty:pol_year = cppgeneral:pol_year or
                       cppproperty:end_sequence = cppgeneral:end_sequence or
                       cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO Or
                       cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO Then
                        Change cppPROPERTY
                            Begin
                            if cppgeneral:unit_owner = 1 and
                               l_unit_owner = 0 then
                                begin
                                cppproperty:loss_assessment = cpsproprate:loss_assessment
                                cppproperty:coverage_b_times = cpsproprate:newly_acquired_percent[2]
                                cppproperty:furs = cpsproprate:furs_mcp017
                                cppproperty:jewelry_limit = cpsproprate:jewelry_limit_mcp017
                                cppproperty:jewelry_per = cpsproprate:jewelry_per_mcp017
                                end
                            else
                            if cppgeneral:unit_owner = 0 and
                               l_unit_owner = 1 then
                                begin
                                cppPROPERTY:FURS = CPSPROPRATE:FURS
                                cppPROPERTY:JEWELRY_LIMIT = CPSPROPRATE:JEWELRY_LIMIT
                                cppPROPERTY:JEWELRY_PER = CPSPROPRATE:JEWELRY_PER
                                end
                            if sfscompany:boiler_rating = 4 then
                                begin
                                if cppgeneral:res_condo = 1 and
                                   l_res_condo = 0 then
                                    begin
                                    cppproperty:off_prem_in_transit = cpsproprate:condo_in_transit
                                    cppproperty:lock_replacement = cpsproprate:lock_replacement
                                    cppproperty:outdoor_property = cpsproprate:condo_outdoor_limit
                                    cppproperty:outdoor_property_per = cpsproprate:condo_outdoor_limit2
                                    cppproperty:personal_property_of_others = cpsproprate:condo_property_of_others
                                    cppPROPERTY:SIGNS_ATTACHED = CPSPROPRATE:condo_signs_attached
                                    cppPROPERTY:SIGNS_NOT_ATTACHED = CPSPROPRATE:condo_SIGNS_NOT_ATTACHED
                                    end
                                else
                                if cppgeneral:res_condo = 0 and
                                   l_res_condo = 1 then
                                    begin
                                    cppPROPERTY:OFF_PREM_IN_TRANSIT = CPSPROPRATE:OFF_PREM_TRANSIT_LIMIT
                                    cppPROPERTY:OUTDOOR_PROPERTY = CPSPROPRATE:OUTDOOR_BASIC_LIMIT
                                    cppPROPERTY:OUTDOOR_PROPERTY_PER = CPSPROPRATE:OUTDOOR_PER_PLANT
                                    cppPROPERTY:SIGNS_ATTACHED = CPSPROPRATE:signs_attached_limit
                                    cppPROPERTY:SIGNS_NOT_ATTACHED = CPSPROPRATE:SIGNS_NOT_ATTACHED_LIMIT
                                    cppPROPERTY:PERSONAL_PROPERTY_OF_OTHERS = CPSPROPRATE:PROPERTY_OTHERS_LIMIT
                                    end
                                end
                            End

                    end

                Next CPSPROPRATE
                End
        End

    If FUNCTION = "ADD" Then
        Begin
        Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID,
                                CPSPROPRATE:STATE = cppGENERAL:STATE,
                                CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

        While CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID And
              CPSPROPRATE:STATE = cppGENERAL:STATE And
              CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
                Begin
                If (sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE and
                   (sfpname:eff_date <= cpsproprate:exp_date or
                   cpsproprate:exp_date = 0)) Then
                    Begin
                    Access cppPROPERTY, Set cppPROPERTY:policy_NO = cppGENERAL:policy_NO,
                                            cppproperty:pol_year = cppgeneral:pol_year,
                                            cppproperty:end_sequence = cppgeneral:end_sequence,
                                            cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO,
                                            cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO, Generic

                    If cppPROPERTY:policy_NO <> cppGENERAL:policy_NO Or
                       cppproperty:pol_year <> cppgeneral:pol_year or
                       cppproperty:end_sequence <> cppgeneral:end_sequence or
                       cppPROPERTY:PREM_NO <> cppGENERAL:PREM_NO Or
                       cppPROPERTY:BUILD_NO <> cppGENERAL:BUILD_NO Then
                        Add cppPROPERTY
                            Begin
                            cppPROPERTY:policy_NO = cppGENERAL:policy_NO
                            cppproperty:pol_year = cppgeneral:pol_year
                            cppproperty:end_sequence = cppgeneral:end_sequence
                            cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO
                            cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO
                            cppPROPERTY:AR_LIMIT = CPSPROPRATE:AR_BASIC_LIMIT
                            cppproperty:boiler = 1
                            cppPROPERTY:GLASS_LIMIT = CPSPROPRATE:GLASS_LIMIT
                            cppPROPERTY:GLASS_PER_PANE = CPSPROPRATE:GLASS_PANE
                            if cppgeneral:res_condo = 1 and
                               sfscompany:boiler_rating = 4 then
                                begin
                                cppPROPERTY:SIGNS_ATTACHED = CPSPROPRATE:condo_signs_attached
                                cppPROPERTY:SIGNS_NOT_ATTACHED = CPSPROPRATE:condo_SIGNS_NOT_ATTACHED
                                end
                            else
                                begin
                                cppPROPERTY:SIGNS_ATTACHED = CPSPROPRATE:SIGNS_ATTACHED_LIMIT
                                cppPROPERTY:SIGNS_NOT_ATTACHED = CPSPROPRATE:SIGNS_NOT_ATTACHED_LIMIT
                                end
                            cppPROPERTY:DELETE_SIGNS_DEDUCTIBLE = 0
                            cppPROPERTY:BUILDING_CODE_PERCENT = CPSPROPRATE:BUILDING_LAW_PERCENT
                            if (sfpname:company_Id = "NWIC" and
                               (cppgeneral:unit_owner = 1 or
                               cppgeneral:condo = 1)) then
                                begin
                                if cpsproprate:condo_building_code_percent <> 0 then
                                    cppproperty:building_code_percent = cpsproprate:condo_building_code_percent
                                end
                            cppPROPERTY:LOSS_UTILITY = CPSPROPRATE:UTILITY_LIMIT
                            cppPROPERTY:MECHANICAL_BREAKDOWN = CPSPROPRATE:MECHANICAL_LIMIT
                            cppPROPERTY:DEBRIS_FACTOR = CPSPROPRATE:DEBRIS_PERCENT
                            if (sfpname:company_Id = "NWIC" and
                               (cppgeneral:unit_owner = 1 or
                               cppgeneral:condo = 1)) then
                                begin
                                if cpsproprate:condo_debris_removal <> 0 then
                                    cppproperty:debris_factor = cpsproprate:condo_debris_removal
                                end
                            cppPROPERTY:DEBRIS_REMOVAL = CPSPROPRATE:DEBRIS_LIMIT
                            cppPROPERTY:FIRE_DEPT = CPSPROPRATE:FIRE_DEPT_LIMIT
                            cppPROPERTY:COVERAGE_A_TIMES = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[1]
                            cppPROPERTY:COVERAGE_B_TIMES = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[2]
                            cppPROPERTY:COVERAGE_D_TIMES = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[3]
                            cppPROPERTY:COV_A_LIMIT = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[1]
                            cppPROPERTY:COV_B_LIMIT = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[2]
                            cppPROPERTY:COV_D_LIMIT = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[3]
                            cppPROPERTY:OFF_PREM_OTHER_LOCATION = CPSPROPRATE:OFF_PREM_LOC_LIMIT
                            if cppgeneral:res_condo = 1 and
                               sfscompany:boiler_rating = 4 then
                                begin
                                cppproperty:off_prem_in_transit = cpsproprate:condo_in_transit
                                cppproperty:lock_replacement = cpsproprate:lock_replacement
                                end
                            else
                                cppPROPERTY:OFF_PREM_IN_TRANSIT = CPSPROPRATE:OFF_PREM_TRANSIT_LIMIT
                            cppPROPERTY:MCP505_OPTION = 0
                            cppPROPERTY:OPTIONAL_THEFT_LIMIT = 0
                            if cppgeneral:res_condo = 1 and
                               sfscompany:boiler_Rating = 4 then
                                begin
                                cppproperty:outdoor_property = cpsproprate:condo_outdoor_limit
                                cppproperty:outdoor_property_per = cpsproprate:condo_outdoor_limit2
                                end
                            else
                                begin
                                cppPROPERTY:OUTDOOR_PROPERTY = CPSPROPRATE:OUTDOOR_BASIC_LIMIT
                                cppPROPERTY:OUTDOOR_PROPERTY_PER = CPSPROPRATE:OUTDOOR_PER_PLANT
                                end
                            cppPROPERTY:PERSONAL_EFFECTS = CPSPROPRATE:PERSONAL_EFFECTS_LIMIT
                            if cppgeneral:res_condo = 1 and
                               sfscompany:boiler_rating = 4 then
                                cppproperty:personal_property_of_others = cpsproprate:condo_property_of_others
                            else
                                cppPROPERTY:PERSONAL_PROPERTY_OF_OTHERS = CPSPROPRATE:PROPERTY_OTHERS_LIMIT
                            cppPROPERTY:VALUABLE_PAPERS = CPSPROPRATE:VALUABLE_LIMIT
                            cppPROPERTY:POLLUTION_CLEAN_UP = CPSPROPRATE:POLLUTION_LIMIT
                            cppPROPERTY:PRECIOUS_METALS = CPSPROPRATE:METALS_LIMIT
                            if cppgeneral:unit_owner = 1 then
                                begin
                                cppproperty:loss_assessment = cpsproprate:loss_assessment
                                cppproperty:coverage_b_times = cpsproprate:newly_acquired_percent[2]
                                cppproperty:furs = cpsproprate:furs_mcp017
                                cppproperty:jewelry_limit = cpsproprate:jewelry_limit_mcp017
                                cppproperty:jewelry_per = cpsproprate:jewelry_per_mcp017
                                end
                            else
                                begin
                                cppPROPERTY:FURS = CPSPROPRATE:FURS
                                cppPROPERTY:JEWELRY_LIMIT = CPSPROPRATE:JEWELRY_LIMIT
                                cppPROPERTY:JEWELRY_PER = CPSPROPRATE:JEWELRY_PER
                                end
                            cppPROPERTY:REPLACEMENT_THRESHOLD = CPSPROPRATE:REPLACEMENT_THRESHOLD
                            cppPROPERTY:SPECIAL_CONDITION = CPSPROPRATE:SPECIAL_CONDITION
                            cppPROPERTY:SPECIAL_CONDITION_FACTOR = CPSPROPRATE:SPECIAL_FACTOR
                            End

                    End

                Next CPSPROPRATE
                End
        End

    If FUNCTION = "DELETE" Then
        Begin
        Access cppEXCLUSIONS, Set cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO,
                                  cppexclusions:pol_year = cppgeneral:pol_year,
                                  cppexclusions:end_sequence = cppgeneral:end_sequence,
                                  cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO,
                                  cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppEXCLUSIONS:policy_NO = cppGENERAL:policy_NO And
           cppexclusions:pol_year = cppgeneral:pol_year and
           cppexclusions:end_sequence = cppgeneral:end_sequence and
           cppEXCLUSIONS:PREM_NO = cppGENERAL:PREM_NO And
           cppEXCLUSIONS:BUILD_NO = cppGENERAL:BUILD_NO And
           cppEXCLUSIONS:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppEXCLUSIONS

        Access cppPROTECT, Set cppPROTECT:policy_NO = cppGENERAL:policy_NO,
                               cppprotect:pol_year = cppgeneral:pol_year,
                               cppprotect:end_sequence = cppgeneral:end_sequence,
                               cppPROTECT:PREM_NO = cppGENERAL:PREM_NO,
                               cppPROTECT:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppPROTECT:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppPROTECT:policy_NO = cppGENERAL:policy_NO And
           cppprotect:pol_year = cppgeneral:pol_year and
           cppprotect:end_sequence = cppgeneral:end_sequence and
           cppPROTECT:PREM_NO = cppGENERAL:PREM_NO And
           cppPROTECT:BUILD_NO = cppGENERAL:BUILD_NO And
           cppPROTECT:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppPROTECT

        l_code = "VACANT"
        Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                               cppendorse:pol_year = cppgeneral:pol_year,
                               cppendorse:end_sequence = cppgeneral:end_sequence,
                               cppendorse:PREM_NO = cppGENERAL:PREM_NO,
                               cppendorse:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppendorse:code = l_code, generic

        while cppendorse:policy_NO = cppGENERAL:policy_NO And
              cppendorse:pol_year = cppgeneral:pol_year and
              cppendorse:end_sequence = cppgeneral:end_sequence and
              cppendorse:PREM_NO = cppGENERAL:PREM_NO And
              cppendorse:BUILD_NO = cppGENERAL:BUILD_NO And
              cppendorse:code = l_code
                begin
                Delete cppendorse

                next cppendorse
                end

        l_code = "MCP201"
        Access cppendorse, Set cppendorse:policy_NO = cppGENERAL:policy_NO,
                               cppendorse:pol_year = cppgeneral:pol_year,
                               cppendorse:end_sequence = cppgeneral:end_sequence,
                               cppendorse:PREM_NO = cppGENERAL:PREM_NO,
                               cppendorse:BUILD_NO = cppGENERAL:BUILD_NO,
                               cppendorse:code = l_code, generic

        while cppendorse:policy_NO = cppGENERAL:policy_NO And
              cppendorse:pol_year = cppgeneral:pol_year and
              cppendorse:end_sequence = cppgeneral:end_sequence and
              cppendorse:PREM_NO = cppGENERAL:PREM_NO And
              cppendorse:BUILD_NO = cppGENERAL:BUILD_NO And
              cppendorse:code = l_code
                begin
                Delete cppendorse

                next cppendorse
                end

        Access cppEARTHQUAKE, Set cppEARTHQUAKE:policy_NO = cppGENERAL:policy_NO,
                                  cppearthquake:pol_year = cppgeneral:pol_year,
                                  cppearthquake:end_sequence = cppgeneral:end_sequence,
                                  cppEARTHQUAKE:PREM_NO = cppGENERAL:PREM_NO,
                                  cppEARTHQUAKE:BUILD_NO = cppGENERAL:BUILD_NO,
                                  cppEARTHQUAKE:RATE_TYPE = cppGENERAL:RATE_TYPE, Generic

        If cppEARTHQUAKE:policy_NO = cppGENERAL:policy_NO And
           cppearthquake:pol_year = cppgeneral:pol_year and
           cppearthquake:end_sequence = cppgeneral:end_sequence and
           cppEARTHQUAKE:PREM_NO = cppGENERAL:PREM_NO And
           cppEARTHQUAKE:BUILD_NO = cppGENERAL:BUILD_NO And
           cppEARTHQUAKE:RATE_TYPE = cppGENERAL:RATE_TYPE Then
            Delete cppEARTHQUAKE

        Access cppPROPERTY, Set cppPROPERTY:policy_NO = cppGENERAL:policy_NO,
                                cppproperty:pol_year = cppgeneral:pol_year,
                                cppproperty:end_sequence = cppgeneral:end_sequence,
                                cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO,
                                cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO, Generic

        Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO,
                                     cppgeneral_alias:pol_year = cppgeneral:pol_year,
                                     cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                                     cppGENERAL_ALIAS:PREM_NO = cppGENERAL:PREM_NO,
                                     cppGENERAL_ALIAS:BUILD_NO = cppGENERAL:BUILD_NO, Generic

        L_DELETE_cppPROPERTY = "Y"
        While cppGENERAL_ALIAS:policy_NO = cppGENERAL:policy_NO And
              cppgeneral_alias:pol_year = cppgeneral:pol_year and
              cppgeneral_alias:end_sequence = cppgeneral:end_sequence and
              cppGENERAL_ALIAS:PREM_NO = cppGENERAL:PREM_NO And
              cppGENERAL_ALIAS:BUILD_NO = cppGENERAL:BUILD_NO
                Begin
                L_DELETE_cppPROPERTY = "N"

                Next cppGENERAL_ALIAS
                End

        If cppPROPERTY:policy_NO = cppGENERAL:policy_NO And
           cppproperty:pol_year = cppgeneral:pol_year and
           cppproperty:end_sequence = cppgeneral:end_sequence and
           cppPROPERTY:PREM_NO = cppGENERAL:PREM_NO And
           cppPROPERTY:BUILD_NO = cppGENERAL:BUILD_NO And
           L_DELETE_cppPROPERTY = "Y" Then
            Delete cppPROPERTY

        End

    g_prem_no = cppgeneral:prem_no
    g_build_no = cppgeneral:build_no
    Access CPSPROPEND, Set CPSPROPEND:COMPANY_ID = sfpNAME:COMPANY_ID,
                           CPSPROPEND:STATE = cppGENERAL:STATE,
                           CPSPROPEND:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

    l_code_1 = ""
    l_code_2 = ""
    l_code_3 = ""
    l_code_4 = ""
    l_code_5 = ""
    l_code_6 = ""
    While CPSPROPEND:COMPANY_ID = sfpNAME:COMPANY_ID And
          CPSPROPEND:STATE = cppGENERAL:STATE And
          CPSPROPEND:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
            Begin
            If sfpNAME:EFF_DATE >= CPSPROPEND:EFF_DATE then
                Begin
                L_CODE_1 = CPSPROPEND:CODE[10] -- boilers
                L_CODE_2 = CPSPROPEND:CODE[11] -- wind deductible
                L_CODE_3 = CPSPROPEND:CODE[12] -- protective systems
                L_CODE_4 = CPSPROPEND:CODE[14] -- agreed value
                L_CODE_5 = CPSPROPEND:CODE[15] -- replacement cost
                l_code_6 = cpspropend:wind_deduct_percent_code
                End

            Next CPSPROPEND
            End

    access cppproperty, set cppproperty:policy_no = cppgeneral:policy_no,
                            cppproperty:pol_year = cppgeneral:pol_year,
                            cppproperty:end_sequence = cppgeneral:end_sequence,
                            cppproperty:prem_no = g_prem_no,
                            cppproperty:build_no = g_build_no, generic

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_2 <> "" Then
        Begin
        L_CODE = L_CODE_2
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:WIND_DEDUCTIBLE <> 0 and
           cppgeneral:wind_deductible not one of 1, 2, 5 Then
            Do ADD_sfpEND
        If ((L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:WIND_DEDUCTIBLE = 0) or
           (l_add_endorsement = "N" and
           cppgeneral:wind_deductible one of 1, 2, 5)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_6 <> "" Then
        Begin
        L_CODE = L_CODE_6
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:WIND_DEDUCTIBLE <> 0 and
           cppgeneral:wind_deductible one of 1, 2, 5 Then
            Do ADD_sfpEND
        If ((L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:WIND_DEDUCTIBLE = 0) or
           (l_add_endorsement = "N" and
           cppgeneral:wind_deductible not one of 1, 2, 5)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_3 <> "" Then
        Begin
        L_CODE = L_CODE_3
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:PROTECTIVE_SYSTEMS = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:PROTECTIVE_SYSTEMS = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_4 <> "" Then
        Begin
        L_CODE = L_CODE_4
        if sfscompany:boiler_rating <> 4 then
            begin
            Do ACCESS_sfpEND_1
            If L_ADD_ENDORSEMENT = "Y" And
               cppGENERAL:AGREED_VALUE = 1 and
               cppgeneral:blanket = 0 Then
                Do ADD_sfpEND_1
            If L_ADD_ENDORSEMENT = "N" And
               cppGENERAL:AGREED_VALUE = 0 Then
                Do DELETE_sfpEND_1
            end
        else
            begin
            if cppgeneral:blanket = 0 then
                Do ACCESS_sfpEND
            else
                do access_sfpend_1
            If L_ADD_ENDORSEMENT = "Y" And
               cppGENERAL:AGREED_VALUE = 1 and
               cppgeneral:blanket = 0 Then
                Do ADD_sfpEND
            If L_ADD_ENDORSEMENT = "Y" And
               cppGENERAL:AGREED_VALUE = 1 and
               cppgeneral:blanket = 1 Then
                Do ADD_sfpEND_1
            If L_ADD_ENDORSEMENT = "N" And
               cppGENERAL:AGREED_VALUE = 0 and
               cppgeneral:blanket = 0 Then
                Do DELETE_sfpEND
            If L_ADD_ENDORSEMENT = "N" And
               cppGENERAL:AGREED_VALUE = 0 and
               cppgeneral:blanket = 1 Then
                Do DELETE_sfpEND_1
            end
        End

    If L_CODE_5 <> "" Then
        Begin
        L_CODE = L_CODE_5
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:REPLACEMENT_COST = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:REPLACEMENT_COST = 0 Then
            Do DELETE_sfpEND
        End

    g_prem_no = cppgeneral:prem_no
    g_build_no = cppgeneral:build_no
    Access CPSTRIGGER, Set CPSTRIGGER:COMPANY_ID = sfpNAME:COMPANY_ID,
                           CPSTRIGGER:STATE = cppGENERAL:STATE,
                           CPSTRIGGER:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

    l_code_1  = ""
    l_code_2  = ""
    l_code_3  = ""
    l_code_4  = ""
    l_code_5  = ""
    l_code_6  = ""
    l_code_7  = ""
    l_code_8  = ""
    l_code_9  = ""
    l_code_10 = ""
    l_code_11 = ""
    l_code_12 = ""
    l_code_13 = ""
    l_code_14 = ""
    l_code_15 = ""
    l_code_16 = ""
    l_code_17 = ""
    l_code_18 = ""
    l_code_19 = ""
    l_code_20 = ""
    l_code_21 = ""
    l_code_22 = ""
    l_code_23 = ""
    While CPSTRIGGER:COMPANY_ID = sfpNAME:COMPANY_ID And
          CPSTRIGGER:STATE = cppGENERAL:STATE And
          CPSTRIGGER:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
            Begin
            If sfpNAME:EFF_DATE >= CPSTRIGGER:EFF_DATE Then
                Begin
                L_CODE_1  = CPSTRIGGER:CODE[1]  -- MCP010
                L_CODE_2  = CPSTRIGGER:CODE[2]  -- MCP011
                L_CODE_3  = CPSTRIGGER:CODE[3]  -- MCP014
                L_CODE_4  = CPSTRIGGER:CODE[4]  -- MCP015
                L_CODE_5  = CPSTRIGGER:CODE[5]  -- MCP016
                L_CODE_6  = CPSTRIGGER:CODE[6]  -- MCP017
                l_code_7  = cpstrigger:code[7]  -- MCP013
                l_code_8  = cpstrigger:code[8]  -- MCP213
                l_code_9  = cpstrigger:code[9]  -- CCS10
                l_code_10 = cpstrigger:code_1[1] -- MCP601
                l_code_11 = cpstrigger:code[14] -- MCP601B
                l_code_21 = cpstrigger:code[15] -- MCP602
                l_code_12 = cpstrigger:code_1[2] -- mcp550
                l_code_13 = cpstrigger:code_1[4] -- mcp250
                l_code_14 = cpstrigger:code_1[5] -- mcp702
                l_code_15 = cpstrigger:code_1[6] -- mcp507
                l_code_16 = cpstrigger:code_1[7] -- mcp515
                l_code_17 = cpstrigger:code_1[8] -- mcp805
                l_code_18 = cpstrigger:code_1[9] -- NPMCP714
                l_code_19 = cpstrigger:code_2[1] -- mcp714 delos mcp140 - salem
                l_code_20 = cpstrigger:code_2[2] -- mcp715
                l_code_22 = cpstrigger:code_1[10] -- NPMCP010
                l_code_23 = cpstrigger:code_2[4] -- NPMCP014
                l_code_24 = cpstrigger:code_1[10]---sicp707
                End

            Next CPSTRIGGER
            End

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:CONDO = 0 And
           cppGENERAL:UNIT_OWNER = 0 and
           cppgeneral:res_condo = 0 Then
            Do ADD_sfpEND_1
        If (L_ADD_ENDORSEMENT = "N" And
           (cppGENERAL:CONDO = 1 Or
           cppGENERAL:UNIT_OWNER = 1 or
           cppgeneral:res_condo = 1)) Then
            begin
            do check_forms
            if l_none = 0 then
                Do DELETE_sfpEND_1
            end
        End

    If L_CODE_2 <> "" Then
        Begin
        L_CODE = L_CODE_2
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:CONDO = 0 And
           cppGENERAL:UNIT_OWNER = 0 and
           cppgeneral:builders_risk = 0 and
           cppgeneral:res_condo = 0 Then
            Do ADD_sfpEND
        If (L_ADD_ENDORSEMENT = "N" And
           (cppGENERAL:CONDO = 1 Or
           cppGENERAL:UNIT_OWNER = 1 or
           cppgeneral:builders_risk = 1 or
           cppgeneral:res_condo = 1)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_3 <> "" Then
        Begin
        L_CODE = L_CODE_3
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:CONDO = 1 Then
            begin
            Do ADD_sfpEND_1
            end
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:CONDO = 0 Then
            begin
            do check_forms
            if l_condo = 0 then
                Do DELETE_sfpEND_1
            end
        End

    If L_CODE_4 <> "" Then
        Begin
        L_CODE = L_CODE_4
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:CONDO = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:CONDO = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_5 <> "" Then
        Begin
        L_CODE = L_CODE_5
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:UNIT_OWNER = 1 Then
            Do ADD_sfpEND_1
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:UNIT_OWNER = 0 Then
            begin
            do check_forms
            if l_unit_owner_1 = 0 then
                Do DELETE_sfpEND_1
            end
        End

    If L_CODE_6 <> "" Then
        Begin
        L_CODE = L_CODE_6
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:UNIT_OWNER = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:UNIT_OWNER = 0 Then
            begin
            Do DELETE_sfpEND
            end
        End

    If L_CODE_7 <> "" Then
        Begin
        L_CODE = L_CODE_7
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:builders_risk = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:builders_risk = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_8 <> "" Then
        Begin
        L_CODE = L_CODE_8
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:builders_risk = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:builders_risk = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_9 <> "" Then
        Begin
        L_CODE = L_CODE_9
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:church = 1  Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:church = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_10 <> "" and
       sfscompany:boiler_rating = 4 Then
        Begin
        L_CODE = L_CODE_10
        Do ACCESS_sfpEND_1
        do access_cppgeneral
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:agreed_value = 1 Then
            Do ADD_sfpEND_1
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:agreed_value = 0 and
           l_agreed_value = "N" Then
            Do DELETE_sfpEND_1
        End

    If L_CODE_21 <> "" and
       sfscompany:boiler_rating = 4 and
       cppgeneral:blanket = 1 Then
        Begin
        L_CODE = L_CODE_21
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:agreed_value = 0 Then
            Do ADD_sfpEND_1
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:agreed_value = 1 Then
            Do DELETE_sfpEND_1
        End

    If L_CODE_11 <> "" and
       sfscompany:boiler_rating <> 4 Then
        Begin
        L_CODE = L_CODE_11
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:blanket = 0 Then
            Do DELETE_sfpEND_1
        end

    If L_CODE_12 <> "" Then
        Begin
        L_CODE = L_CODE_12
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:dont_inspect = 0 and
           cppgeneral:file_no = "" Then
            Do ADD_sfpEND
        If ((L_ADD_ENDORSEMENT = "N" And
           cppgeneral:dont_inspect = 1) or
           (l_add_endorsement = "N" and
           cppgeneral:file_no <> "")) Then
            Do DELETE_sfpEND
        End

    If L_CODE_13 <> "" Then
        Begin
        L_CODE = L_CODE_13
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:limit[1] <> 0 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:limit[1] = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_14 <> "" Then
        Begin
        L_CODE = L_CODE_14
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:limit[1] <> 0 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:limit[1] = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_15 <> "" Then
        Begin
        L_CODE = L_CODE_15
        Do ACCESS_sfpEND
        If (L_ADD_ENDORSEMENT = "Y" And
           (cppgeneral:condo = 1 or
           cppgeneral:unit_owner = 1 or
           cppgeneral:res_condo = 1)) Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppgeneral:condo = 0 and
           cppgeneral:unit_owner = 0 and
           cppgeneral:res_condo = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_16 <> "" Then
        Begin
        L_CODE = L_CODE_16
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:condo = 0 and
           cppgeneral:unit_owner = 0 and
           cppgeneral:res_condo = 0 Then
            Do ADD_sfpEND
        If (L_ADD_ENDORSEMENT = "N" And
           (cppgeneral:condo = 1 or
           cppgeneral:unit_owner = 1 or
           cppgeneral:res_condo = 1)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_17 <> "" Then
        Begin
        L_CODE = L_CODE_17
        Do ACCESS_sfpEND
        If ((L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:condo = 1) or
           (l_add_endorsement = "Y" and
           cppgeneral:unit_owner = 1)) Then
            Do ADD_sfpEND
        If ((L_ADD_ENDORSEMENT = "N" And
           cppgeneral:condo = 0) or
           (l_add_endorsement = "N" and
           cppgeneral:unit_owner = 0)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_18 <> "" Then
        Begin
        L_CODE = L_CODE_18
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:res_condo = 1 and
           sfpname:previous_policy_no <> 0 then
            Do ADD_sfpEND
        else
        If ((L_ADD_ENDORSEMENT = "N" And
           cppgeneral:res_condo = 0) or
           (l_add_endorsement = "N" and
           sfpname:previous_policy_no = 0)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_19 <> "" and
       sfpname:company_id one of "DELOS", "GGUND" Then
        Begin
        L_CODE = L_CODE_19
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:res_CONDO = 1 Then
            begin
            Do ADD_sfpEND_1
            end
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:res_CONDO = 0 Then
            begin
            do check_forms
            if l_res_condo_1 = 0 then
                Do DELETE_sfpEND_1
            end
        End

    If L_CODE_20 <> "" Then
        Begin
        L_CODE = L_CODE_20
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:res_CONDO = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:res_CONDO = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_22 <> "" Then
        Begin
        L_CODE = L_CODE_22
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:res_condo = 0 and
           cppgeneral:condo = 0 and
           cppgeneral:unit_owner = 0 and
           sfpname:previous_policy_no <> 0 Then
            Do ADD_sfpEND
        else
        If ((L_ADD_ENDORSEMENT = "N" And
           cppgeneral:condo = 1) or
           (l_add_endorsement = "N" and
           cppgeneral:unit_owner = 1) or
           (l_add_endorsement = "N" and
           cppgeneral:res_condo = 1) or
           (l_add_endorsement = "N" and
           sfpname:previous_policy_no = 0)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_23 <> "" Then
        Begin
        L_CODE = L_CODE_23
        Do ACCESS_sfpEND
        If ((L_ADD_ENDORSEMENT = "Y" And
           cppgeneral:condo = 1 and
           sfpname:previous_policy_no <> 0) or
           (l_add_endorsement = "Y" and
           cppgeneral:unit_owner = 1 and
           sfpname:previous_policy_no <> 0)) Then
            Do ADD_sfpEND
        else
        If ((L_ADD_ENDORSEMENT = "N" And
           cppgeneral:condo = 0) or
           (l_add_endorsement = "N" and
           cppgeneral:unit_owner = 0) or
           (l_add_endorsement = "N" and
           sfpname:previous_policy_no = 0)) Then
            Do DELETE_sfpEND
        End

        If L_CODE_19 <> "" and
           sfpname:company_id = "FARMERS" Then
            Begin
            L_CODE = L_CODE_19
            Do ACCESS_sfpEND
            If L_ADD_ENDORSEMENT = "Y" Then
                begin
                Do ADD_sfpEND
                do add_cppendorse
                end
            End

    If L_CODE_24 <> "" and
       L_unit_owner = 1 and
       l_code_5 <> ""Then
      Begin
        L_CODE = L_CODE_24
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGENERAL:unit_owner = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGENERAL:unit_owner = 0 Then
            Do DELETE_SFPEND
      End

/*
    If L_unit_owner = 1 and
       l_code_5 <> "" Then
      Begin
        L_CODE = l_code_24
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" then
          Begin
            Do ADD_sfpEND_1
          end
      End
*/

    Access CPSEARTHQUAKE, Set CPSEARTHQUAKE:COMPANY_ID = sfpNAME:COMPANY_ID,
                              CPSEARTHQUAKE:STATE = cppGENERAL:STATE,
                              CPSEARTHQUAKE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

    While CPSEARTHQUAKE:COMPANY_ID = sfpNAME:COMPANY_ID And
          CPSEARTHQUAKE:STATE = cppGENERAL:STATE And
          CPSEARTHQUAKE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
            Begin
            If sfpNAME:EFF_DATE >= CPSEARTHQUAKE:EFF_DATE Then
                Begin
                L_CODE_1 = CPSEARTHQUAKE:EARTHQUAKE_CODE  --earthquake
                End

            Next CPSEARTHQUAKE
            End

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppGENERAL:EARTHQUAKE = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppGENERAL:EARTHQUAKE = 0 Then
            Do DELETE_sfpEND
        End

if sfscompany:boiler_rating = 4 then
    begin
    g_prem_no = cppgeneral:prem_no
    g_build_no = cppgeneral:build_no
    Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID,
                            CPSPROPRATE:STATE = cppGENERAL:STATE,
                            CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

    l_code_1 = ""
    l_code_2 = ""
    l_code_3 = ""
    l_code_4 = ""
    While CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID And
          CPSPROPRATE:STATE = cppGENERAL:STATE And
          CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
            Begin
            If (sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE and
               (sfpname:eff_date <= cpsproprate:exp_date or
               cpsproprate:exp_date = 0)) Then
                Begin
                L_CODE_1 = CPSPROPRATE:boiler_code
                L_CODE_2 = CPSPROPRATE:boiler_code_1
                if sfpname:company_id = "GGUND" then
                    begin
                    l_code_3 = cpsproprate:res_condo_code
                    l_code_4 = cpsproprate:condo_code
                    end
                else
                    begin
                    L_CODE_3 = CPSPROPRATE:condo_code
                    l_code_4 = ""
                    end
                End

            Next CPSPROPRATE
            End

    access cppproperty, set cppproperty:policy_no = cppgeneral:policy_no,
                            cppproperty:pol_year = cppgeneral:pol_year,
                            cppproperty:end_sequence = cppgeneral:end_sequence,
                            cppproperty:prem_no = g_prem_no,
                            cppproperty:build_no = g_build_no, generic

    If L_CODE_1 <> "" then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            begin
            if cppgeneral:condo = 0 and
               cppgeneral:unit_owner = 0 and
               cppgeneral:res_condo = 0 then
                Do ADD_sfpEND
            end

        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0 Then
            Do DELETE_sfpEND

        if cppgeneral:condo = 1 or
           cppgeneral:unit_owner = 1 or
           cppgeneral:res_condo = 1 Then
            Do DELETE_sfpEND
        End

    If L_CODE_2 <> "" Then
        Begin
        L_CODE = L_CODE_2
        Do ACCESS_sfpEND_1
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            Do ADD_sfpEND_1
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0 Then
            Do DELETE_sfpEND_1
        End

    If L_CODE_3 <> "" then
        Begin
        L_CODE = L_CODE_3
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            begin
            if sfpname:company_id one of "DELOS", "GGUND" then
                begin
                if cppgeneral:unit_owner = 0 and
                   cppgeneral:condo = 0 and
                   cppgeneral:res_condo = 1 then
                    do add_sfpend
                if cppgeneral:res_condo = 0 then
                    do delete_sfpend
                end
            else
                begin
                if cppgeneral:condo = 1 or
                   cppgeneral:unit_owner = 1 or
                   cppgeneral:res_condo = 1 then
                    Do ADD_sfpEND
                end
            end

        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0 Then
            Do DELETE_sfpEND

        if sfpname:company_id not one of "DELOS",  "GGUND" then
            begin
            if cppgeneral:condo = 0 and
               cppgeneral:unit_owner = 0 and
               cppgeneral:res_condo = 0 then
                Do DELETE_sfpEND
            end
        else
            begin
            if cppgeneral:unit_owner = 1 and
               cppgeneral:res_condo = 0 then
                Do DELETE_sfpEND
            else
            if cppgeneral:condo = 1 then
                do delete_sfpend
            end
        End

    If L_CODE_4 <> "" and
       sfpname:company_id one of "DELOS",  "GGUND" then
        Begin
        L_CODE = L_CODE_4
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            begin
            if ((cppgeneral:unit_owner = 1 or
               cppgeneral:condo = 1) and
               cppgeneral:res_condo = 0) then
                Do ADD_sfpEND
            if cppgeneral:unit_owner = 0 and
               cppgeneral:condo = 0 then
                do delete_sfpend
            end

        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0 Then
            Do DELETE_sfpEND

        if cppgeneral:unit_owner = 0 and
           cppgeneral:condo = 0 then
            Do DELETE_sfpEND

        if cppgeneral:res_condo = 1 and
           cppgeneral:condo = 0 and
           cppgeneral:unit_owner = 0 then
            do delete_sfpend
        End

    end

    If FUNCTION = "DELETE" Then
        Begin
        G_PREM_NO = 0
        G_BUILD_NO = 0
        G_RATE_TYPE = 0
        End


    access sfpend, set sfpend:policy_no = cppgeneral:policy_no,
                       sfpend:pol_year = cppgeneral:pol_year,
                       sfpend:end_sequence = cppgeneral:end_sequence, generic

    while sfpend:policy_no = cppgeneral:policy_no and
          sfpend:pol_year = cppgeneral:pol_year and
          sfpend:end_sequence = cppgeneral:end_sequence
        begin
        if sfpend:form_edition = "" then
            delete sfpend

        next sfpend
        end

    if function one of "ADD" and
       sfscompany:boiler_Rating = 4 then
        begin
        if cppgeneral:blanket = 1 then
            begin
            g_policy_no = cppgeneral:policy_no
            g_year = cppgeneral:pol_year
            g_end_sequence = cppgeneral:end_sequence
            g_prem_no = cppgeneral:prem_no
            g_build_no = cppgeneral:build_no
            g_rate_type = cppgeneral:rate_type
            display modal screen "cppmtmso02c"
            with initial function "ADD"
            end
        end

    End

Screen Exit
If cppGENERAL:PREM_NO > 0 Then G_PREM_NO = cppGENERAL:PREM_NO ;
If cppGENERAL:BUILD_NO > 0 Then G_BUILD_NO = cppGENERAL:BUILD_NO ;
If cppGENERAL:RATE_TYPE > 0 Then G_RATE_TYPE = cppGENERAL:RATE_TYPE ;

Procedure Definition

procedure check_forms
begin
access cppgeneral_alias, set cppgeneral_alias:policy_no    = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year     = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence, generic

l_res_condo_1  = 0
l_condo        = 0
l_unit_owner_1 = 0
l_none         = 0
while cppgeneral_alias:policy_no    = cppgeneral:policy_no and
      cppgeneral_alias:pol_year     = cppgeneral:pol_year and
      cppgeneral_alias:end_sequence = cppgeneral:end_sequence
    begin
    if cppgeneral_alias:res_condo = 1 then
        l_res_condo_1 = 1
    if cppgeneral_alias:condo = 1 then
        l_condo = 1
    if cppgeneral_alias:unit_owner = 1 then
        l_unit_owner_1 = 1
    if cppgeneral_alias:unit_owner = 0 and
       cppgeneral_alias:condo = 0 and
       cppgeneral_alias:res_condo = 0 then
        l_none = 1

    next cppgeneral_alias
    end
end

procedure access_cppgeneral
begin
access cppgeneral_alias, set cppgeneral_alias:policy_no    = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year     = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence, generic

l_agreed_value = "N"
while cppgeneral_alias:policy_no    = cppgeneral:policy_no and
      cppgeneral_alias:pol_year     = cppgeneral:pol_year and
      cppgeneral_alias:end_sequence = cppgeneral:end_sequence
    begin
    if cppgeneral_alias:agreed_value = 1 then
        l_agreed_value = "Y"

    next cppgeneral_alias
    end

end

Procedure FIRE_RESISTIVE_1
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_PROTECTION = cppGENERAL:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end
L_SPRINKLERED = cppGENERAL:SPRINKLERED

Include "cpstransratefr.pro"

If cppGENERAL:CONSTRUCTION_CODE = "F" Then
    Begin
    l_fire_resistive_1 = l_fire_resistive_fire
    l_fire_resistive_2 = l_fire_resistive_ec
    l_fire_resistive_3 = l_fire_resistive_vmm
    cppGENERAL:FIRE_RESISTIVE_RATE[1] = L_FIRE_RESISTIVE_FIRE
    cppGENERAL:FIRE_RESISTIVE_RATE[2] = L_FIRE_RESISTIVE_EC
    cppGENERAL:FIRE_RESISTIVE_RATE[3] = L_FIRE_RESISTIVE_VMM
    End
Else
    Begin
    l_fire_resistive_1 = 1.00
    l_fire_resistive_2 = 1.00
    l_fire_resistive_3 = 1.00
    cppGENERAL:FIRE_RESISTIVE_RATE[1] = 1.00
    cppGENERAL:FIRE_RESISTIVE_RATE[2] = 1.00
    cppGENERAL:FIRE_RESISTIVE_RATE[3] = 1.00
    End

End

Procedure FIRE_RESISTIVE_2
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppgeneral:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_PROTECTION = cppgeneral:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end
L_SPRINKLERED = cppgeneral:SPRINKLERED

Include "cpstransratefr.pro"

If cppgeneral:CONSTRUCTION_CODE = "F" Then
    Begin
    l_fire_resistive_4 = l_fire_resistive_fire
    l_fire_resistive_5 = l_fire_resistive_ec
    l_fire_resistive_6 = l_fire_resistive_vmm
    cppgeneral:FIRE_RESISTIVE_RATE[4] = L_FIRE_RESISTIVE_FIRE
    cppgeneral:FIRE_RESISTIVE_RATE[5] = L_FIRE_RESISTIVE_EC
    cppgeneral:FIRE_RESISTIVE_RATE[6] = L_FIRE_RESISTIVE_VMM
    End
Else
    Begin
    l_fire_resistive_4 = 1.00
    l_fire_resistive_5 = 1.00
    l_fire_resistive_6 = 1.00
    cppgeneral:FIRE_RESISTIVE_RATE[4] = 1.00
    cppgeneral:FIRE_RESISTIVE_RATE[5] = 1.00
    cppgeneral:FIRE_RESISTIVE_RATE[6] = 1.00
    End

End

Procedure ADD_cppendorse
Begin
Add cppendorse
    Begin
    cppendorse:policy_NO                  =       G_policy_NO
    cppendorse:pol_year                   =       g_year
    cppendorse:end_sequence               =       g_end_sequence
    cppendorse:PREM_NO                    =       G_prem_no
    cppendorse:BUILD_NO                   =       G_build_no
    cppendorse:code                       =       l_code
    cppendorse:sub_code                   =       10
    cppendorse:LIMIT[1]                   =       l_mcp140_limit
    End

End

Procedure ADD_cppendorse_1
Begin
Add cppendorse
    Begin
    cppendorse:policy_NO                  =       G_policy_NO
    cppendorse:pol_year                   =       g_year
    cppendorse:end_sequence               =       g_end_sequence
    cppendorse:PREM_NO                    =       0
    cppendorse:BUILD_NO                   =       0
    cppendorse:code                       =       l_code
    cppendorse:sub_code                   =       10
    cppendorse:LIMIT[1]                   =       l_mcp140_limit
    End

End

Procedure CAUSE_OF_LOSS
Begin
access cppexclusions, set cppexclusions:policy_no  = cppgeneral:policy_no,
                          cppexclusions:pol_year = cppgeneral:pol_year,
                          cppexclusions:end_sequence = cppgeneral:end_sequence,
                          cppexclusions:prem_no   = cppgeneral:prem_no,
                          cppexclusions:build_no  = cppgeneral:build_no,
                          cppexclusions:rate_type = cppgeneral:rate_Type, generic

L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_OPTION = cppGENERAL:FORM
L_EXCLUDE_THEFT = cppEXCLUSIONS:EXCLUDE_THEFT
l_rate_type = cppgeneral:rate_type

Include "cpscauseloss.pro"

L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_OPTION = cppGENERAL:FORM
L_EXCLUDE_THEFT = cppEXCLUSIONS:EXCLUDE_THEFT
l_rate_type = 2

Include "cpscauseloss.pro"

If cppEXCLUSIONS:EXCLUDE_WATER_DAMAGE = 1 Then
    Begin
    cppGENERAL:WATER_EXCLUSION_FACTOR[1] = L_CL_WATER_FACTOR_A -- building
    cppgeneral:water_exclusion_factor[2] = l_cl_water_factor_c -- contents
    End
Else
    Begin
    l_cl_water_factor_a = 1.00
    l_cl_water_factor_c = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[1] = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[2] = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[3] = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[4] = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[5] = 1.00
    cppGENERAL:WATER_EXCLUSION_FACTOR[6] = 1.00
    End

If cppEXCLUSIONS:EXCLUDE_WIND_HAIL = 1 Then
    Begin
    cppGENERAL:WIND_EXCLUSION_FACTOR[1] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[2] = L_CL_WIND_FACTOR
    cppGENERAL:WIND_EXCLUSION_FACTOR[3] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[4] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[5] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[6] = 1.00
    End
Else
    Begin
    l_cl_wind_factor = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[1] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[2] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[3] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[4] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[5] = 1.00
    cppGENERAL:WIND_EXCLUSION_FACTOR[6] = 1.00
    End

End

procedure access_cpstransitional
begin
access cppgeneral_alias, set cppgeneral_alias:policy_no    = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year     = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence, generic

l_package_mod_1 = "N"
while cppgeneral_alias:policy_no    = cppgeneral:policy_no and
      cppgeneral_alias:pol_year     = cppgeneral:pol_year and
      cppgeneral_alias:end_sequence = cppgeneral:end_sequence
    begin
    l_desc  = cppgeneral_alias:description
    l_state = cppgeneral_alias:state
    Access CPSTRANSITIONAL_ALIAS, Set CPSTRANSITIONAL_ALIAS:COMPANY_ID       = sfpNAME:COMPANY_ID,
                                      CPSTRANSITIONAL_ALIAS:STATE            = l_STATE,
                                      CPSTRANSITIONAL_ALIAS:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                                      CPSTRANSITIONAL_ALIAS:ALPHA_LOOK       = l_desc, Approximate


    while cpstransitional_alias:company_id       = sfpname:company_id and
          cpstransitional_alias:state            = l_state and
          cpstransitional_alias:line_of_business = l_line_of_business and
          cpstransitional_alias:alpha_look       = l_desc
        begin
        if (sfpname:eff_date >= cpstransitional_alias:eff_date and
           (sfpname:eff_date <= cpstransitional_alias:exp_date or
           cpstransitional_alias:exp_date = 0)) then
            begin
            if cpstransitional_alias:package_mod = 0 then
                l_package_mod_1 = "Y"
            if cpstransitional_alias:package_mod <> 0 then
                l_special_package_mod = cpstransitional_alias:package_mod
            if cpstransitional_alias:church = 1 then
                l_property_special_church_mod = cpstransitional_alias:package_mod
            end

        next cpstransitional_alias
        end

    next cppgeneral_alias
    end

access cppliability_alias, set cppliability_alias:policy_no    = cppgeneral:policy_no,
                               cppliability_alias:pol_year     = cppgeneral:pol_year,
                               cppliability_alias:end_sequence = cppgeneral:end_sequence, generic

l_liability_package_mod_1 = "N"
while cppliability_alias:policy_no    = cppgeneral:policy_no and
      cppliability_alias:pol_year     = cppgeneral:pol_year and
      cppliability_alias:end_sequence = cppgeneral:end_sequence
    begin
    l_state      = cppliability_alias:state
    l_group_no   = cppliability_alias:group_no
    l_sub_group  = cppliability_alias:sub_group
    l_class_code = cppliability_alias:class_code
    l_sub_code   = cppliability_alias:sub_code
    Access CPSCLASS_ALIAS, Set CPSCLASS_ALIAS:COMPANY_ID       = sfpNAME:COMPANY_ID,
                               CPSCLASS_ALIAS:STATE            = L_STATE,
                               CPSCLASS_ALIAS:LINE_OF_BUSINESS = l_line_of_business,
                               cpsclass_alias:group_no         = l_group_no,
                               cpsclass_alias:sub_group        = l_sub_group,
                               cpsclass_alias:class_code       = l_class_code,
                               cpsclass_alias:sub_code         = l_sub_code, generic

    while CPSCLASS_ALIAS:COMPANY_ID       = sfpNAME:COMPANY_ID and
          CPSCLASS_ALIAS:STATE            = L_STATE and
          CPSCLASS_ALIAS:LINE_OF_BUSINESS = l_line_of_business and
          CPSCLASS_ALIAS:group_no         = l_group_no and
          cpsclass_alias:sub_group        = l_sub_group and
          cpsclass_alias:class_code       = l_class_code and
          cpsclass_alias:sub_code         = l_sub_code
        begin
        if (sfpname:eff_date >= cpsclass_alias:eff_date and
           (sfpname:eff_date <= cpsclass_alias:exp_date or
           cpsclass_alias:exp_date = 0)) then
            begin
            If CPSCLASS_ALIAS:PACKAGE_MOD = 0 then
                l_liability_package_mod_1 = "Y"
            if cpsclass_alias:package_mod <> 0 then
                l_liability_special_package_mod = cpsclass_alias:package_mod
            if cpsclass_alias:church = 1 then
                l_liability_special_church_mod = cpsclass_alias:package_mod
            end

        next cpsclass_alias
        end

    next cppliability_alias
    end

if l_package_mod_1 = "Y" or
   l_liability_package_mod_1 = "Y" then
    begin
    Access SFSPACKAGE, Set SFSPACKAGE:COMPANY_ID = L_COMPANY_ID,
                           SFSPACKAGE:STATE = L_STATE,
                           SFSPACKAGE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While SFSPACKAGE:COMPANY_ID = L_COMPANY_ID And
          SFSPACKAGE:STATE = L_STATE And
          SFSPACKAGE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If L_EFF_DATE >= SFSPACKAGE:EFF_DATE Then
                L_PACKAGE_MOD = SFSPACKAGE:PACKAGE_MOD

            Next SFSPACKAGE
            End
    end
else
    begin
    l_package_mod = l_special_package_mod
    end

if l_package_mod = 0 and
   l_liability_special_package_mod <> 0 then
    l_package_mod = l_liability_special_package_mod

if l_property_special_church_mod <> 0 then
    l_package_mod = l_property_special_church_mod

if l_package_mod = 0 and
   l_liability_special_church_mod <> 0 then
    l_package_mod = l_liability_special_church_mod

access cppgeneral_alias, set cppgeneral_alias:policy_no    = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year     = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence, generic

if sfscompany:boiler_rating <> 4 then
begin
while cppgeneral_alias:policy_no    = cppgeneral:policy_no and
      cppgeneral_alias:pol_year     = cppgeneral:pol_year and
      cppgeneral_alias:end_sequence = cppgeneral:end_sequence
    begin
    change cppgeneral_alias
        begin
        cppgeneral_alias:package_mod[1] = l_package_mod
        cppgeneral_alias:package_mod[2] = l_package_mod
        cppgeneral_alias:package_mod[3] = l_package_mod
        cppgeneral_alias:package_mod[4] = l_package_mod
        cppgeneral_alias:package_mod[5] = l_package_mod
        cppgeneral_alias:package_mod[6] = l_package_mod
        end

    next cppgeneral_alias
    end
end

access cppdeviation, set cppdeviation:policy_no    = cppgeneral:policy_no,
                         cppdeviation:pol_year     = cppgeneral:pol_year,
                         cppdeviation:end_sequence = cppgeneral:end_sequence, generic

if sfscompany:boiler_Rating <> 4 then
begin
if cppdeviation:policy_no    = cppgeneral:policy_no and
   cppdeviation:pol_year     = cppgeneral:pol_year and
   cppdeviation:end_sequence = cppgeneral:end_sequence then
    begin
    change cppdeviation
        begin
        cppdeviation:package_mod = l_package_mod
        end
    end
end

end

procedure add_mcp201_info
begin
do delete_mcp201_info
access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year  = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence, generic

add cppendorse
    begin
    cppendorse:policy_no               = cppgeneral:policy_no
    cppendorse:pol_year                = cppgeneral:pol_year
    cppendorse:end_sequence            = cppgeneral:end_sequence
    cppendorse:prem_no                 = 0
    cppendorse:build_no                = 0
    cppendorse:code                    = l_code_10
    cppendorse:rating_line_of_business = sfsline:rating_line_of_business
    cppendorse:sub_code                = 10
    cppendorse:eff_date                = sfpname:eff_date
    cppendorse:exp_date                = sfpname:exp_date
    cppendorse:limit[1]                = cppgeneral_alias:limit[1]
    end

end

procedure change_mcp201_info
begin
l_prem_no  = 0
l_build_no = 0
access cppendorse, set cppendorse:policy_no = cppgeneral:policy_no,
                       cppendorse:pol_year = cppgeneral:pol_year,
                       cppendorse:end_sequence = cppgeneral:end_sequence,
                       cppendorse:prem_no = l_prem_no,
                       cppendorse:build_no = l_build_no,
                       cppendorse:code = l_code_10, generic

access cppgeneral_alias, set cppgeneral_alias:policy_no = cppgeneral:policy_no,
                             cppgeneral_alias:pol_year = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence,  generic

if cppendorse:policy_no = cppgeneral:policy_no and
   cppendorse:pol_year = cppgeneral:pol_year and
   cppendorse:end_sequence = cppgeneral:end_sequence and
   cppendorse:prem_no = l_prem_no and
   cppendorse:build_no = l_build_no and
   cppendorse:code = l_code_10 then
    begin
    change cppendorse
        begin
        cppendorse:limit[1]                = cppgeneral_alias:limit[1]
        end
    end

end

procedure delete_mcp201_info
begin
access cppendorse, set cppendorse:policy_no = cppgeneral:policy_no,
                       cppendorse:pol_year = cppgeneral:pol_year,
                       cppendorse:end_sequence = cppgeneral:end_sequence, generic

while cppendorse:policy_no = cppgeneral:policy_no and
      cppendorse:pol_year = cppgeneral:pol_year and
      cppendorse:end_sequence = cppgeneral:end_sequence
    begin
    if cppendorse:code = l_code_10 then
        begin
        delete cppendorse
        end

    next cppendorse
    end

end

Procedure GET_BASE_RATES
Begin
-- setup fire, ec and vmm base rate
-- builders risk
If cppGENERAL:BUILDERS_RISK = 1 Then
    Begin
    Do TRANSITIONAL
    Do BUILDERS_RISK_RATING
    End
Else
If cppGENERAL:FILE_NO = "" Then
    Begin
    if l_rate_type = 1 then
        begin
        if cppgeneral:shopping_centers = 1 or
           cppgeneral:multiple_mercantiles = 1 or
           cppgeneral:mercantiles_with_apts = 1 then
            do building_transitional
        else
            begin
            do transitional
            end
        end
    else
        begin
        do transitional
        end
    End
Else
-- specific
If cppGENERAL:FILE_NO <> "" Then
    Begin
    Do TRANSITIONAL
    if l_rate_type = 1 then
        begin
        if cppgeneral:shopping_centers = 1 or
           cppgeneral:multiple_mercantiles = 1 or
           cppgeneral:mercantiles_with_apts = 1 then
            do building_specific_rate_adj
        else
            do specific_rate_adj
        end
    else
        Do SPECIFIC_RATE_ADJ
    End
Else
-- perpetual
write("%c%s",1005,"     ")
If cppGENERAL:PERPETUAL_RATED = 1 Then
    Begin
    Do PERPETUAL
    End

if cppgeneral:sprinklered = 1 and
   sfscompany:boiler_rating = 4 then
    do sprinklered

if l_contents_sprinklered_rate = 0 or
   cppgeneral:sprinklered = 0 then
    l_contents_sprinklered_rate = 1.00

if l_building_sprinklered_rate = 0 or
   cppgeneral:sprinklered = 0 then
    l_building_sprinklered_rate = 1.00

-- AOP peril is option3 or option5
-- option 3 base rate
If cppGENERAL:FORM = 3 Then
    Begin
    Do OPTION3_RATING
    End

-- option 5 base rate
If cppGENERAL:FORM = 5 Then
    Begin
    Do OPTION5_RATING
    End

If cppGENERAL:SPRINKLER_LEAKAGE = 1 And
   cppGENERAL:FORM <> 5 Then
    Begin
    Do SPRINKLER_LEAKAGE
    End

if cppgeneral:earthquake = 1 and
   l_rate_type = 1 then
    begin
    do building_earthquake
    end

if cppgeneral:earthquake = 1 and
   l_rate_type = 2 then
    begin
    access cppearthquake, set cppearthquake:policy_no = cppgeneral:policy_no,
                              cppearthquake:pol_year = cppgeneral:pol_year,
                              cppearthquake:end_sequence = cppgeneral:end_sequence,
                              cppearthquake:prem_no = cppgeneral:prem_no,
                              cppearthquake:build_no = cppgeneral:build_no,
                              cppearthquake:rate_type = cppgeneral:rate_type, generic

    l_earthquake_rate_class = cppearthquake:rate_class
    do property_earthquake
    end

End

Procedure SPRINKLERED
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_TYPE_1 = 1
L_PROTECTION = cppGENERAL:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end

Access CPSTRANSRATES, Set CPSTRANSRATES:COMPANY_ID = L_COMPANY_ID,
                          CPSTRANSRATES:STATE = L_STATE,
                          CPSTRANSRATES:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

While CPSTRANSRATES:COMPANY_ID = L_COMPANY_ID And
      CPSTRANSRATES:STATE = L_STATE And
      CPSTRANSRATES:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        Begin
        If L_EFF_DATE >= CPSTRANSRATES:EFF_DATE Then
            Begin
            Switch(L_PROTECTION)
              Case 1, 2 : L_building_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[1]
              Case 3, 4 : L_building_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[3]
              Default   : L_building_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[5]
              End

            End

        Next CPSTRANSRATES
        End

if l_building_sprinklered_rate = 0 then
    l_building_sprinklered_rate = 1.00
Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = cppgeneral:policy_NO,
                             cppgeneral_alias:pol_year = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                             cppGENERAL_ALIAS:PREM_NO = cppgeneral:PREM_NO,
                             cppGENERAL_ALIAS:BUILD_NO = cppgeneral:BUILD_NO,
                             cppgeneral_alias:rate_type = cppgeneral:rate_type, Generic

if cppgeneral_alias:policy_no = cppgeneral:policy_no and
   cppgeneral_alias:pol_year = cppgeneral:pol_year and
   cppgeneral_alias:end_sequence = cppgeneral:end_sequence and
   cppgeneral_alias:prem_no  = cppgeneral:prem_no and
   cppgeneral_alias:build_no = cppgeneral:build_no and
   cppgeneral:rate_type      = cppgeneral:rate_Type then
    begin
    change cppgeneral_alias
        Begin
        If cppGENERAL_ALIAS:SPRINKLERED = 1 Then
            Begin
            cppGENERAL_ALIAS:SPRINKLERED_RATE[1] = L_SPRINKLERED_RATE
            End
        Else
            Begin
            cppGENERAL_ALIAS:SPRINKLERED_RATE[1] = 1.00
            End
        end
    End
else
    begin
    If cppGENERAL:SPRINKLERED = 1 Then
        Begin
        cppGENERAL:SPRINKLERED_RATE[1] = L_SPRINKLERED_RATE
        End
    Else
        Begin
        cppGENERAL:SPRINKLERED_RATE[1] = 1.00
        End
    end

L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_TYPE_1 = 2
L_PROTECTION = cppGENERAL:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end

Access CPSTRANSRATES, Set CPSTRANSRATES:COMPANY_ID = L_COMPANY_ID,
                          CPSTRANSRATES:STATE = L_STATE,
                          CPSTRANSRATES:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

While CPSTRANSRATES:COMPANY_ID = L_COMPANY_ID And
      CPSTRANSRATES:STATE = L_STATE And
      CPSTRANSRATES:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        Begin
        If L_EFF_DATE >= CPSTRANSRATES:EFF_DATE Then
            Begin
            Switch(L_PROTECTION)
              Case 1, 2 : L_contents_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[2]
              Case 3, 4 : L_contents_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[4]
              Default   : L_contents_SPRINKLERED_RATE = CPSTRANSRATES:as_fire_rates[6]
              End

            End

        Next CPSTRANSRATES
        End

Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = cppgeneral:policy_NO,
                             cppgeneral_alias:pol_year = cppgeneral:pol_year,
                             cppgeneral_alias:end_sequence = cppgeneral:end_sequence,
                             cppGENERAL_ALIAS:PREM_NO = cppgeneral:PREM_NO,
                             cppGENERAL_ALIAS:BUILD_NO = cppgeneral:BUILD_NO,
                             cppgeneral_alias:rate_type = cppgeneral:rate_type, Generic

if l_contents_sprinklered_rate = 0 then
    l_contents_sprinklered_rate = 1.00
if cppgeneral_alias:policy_no = cppgeneral:policy_no and
   cppgeneral_alias:pol_year = cppgeneral:pol_year and
   cppgeneral_alias:end_sequence = cppgeneral:end_sequence and
   cppgeneral_alias:prem_no  = cppgeneral:prem_no and
   cppgeneral_alias:build_no = cppgeneral:build_no and
   cppgeneral:rate_type      = cppgeneral:rate_Type then
    begin
    change cppgeneral_alias
        Begin
        If cppGENERAL_ALIAS:SPRINKLERED = 1 Then
            Begin
            cppGENERAL_ALIAS:SPRINKLERED_RATE[2] = L_SPRINKLERED_RATE
            End
        Else
            Begin
            cppGENERAL_ALIAS:SPRINKLERED_RATE[2] = 1.00
            End
        end
    End
else
    begin
    If cppGENERAL:SPRINKLERED = 1 Then
        Begin
        cppGENERAL:SPRINKLERED_RATE[2] = L_SPRINKLERED_RATE
        End
    Else
        Begin
        cppGENERAL:SPRINKLERED_RATE[2] = 1.00
        End
    end

End

Procedure BUILDING_transitional
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_GROUP_NO = 13
L_SUB_GROUP = 1
L_SUB_CODE = 1
L_EFF_DATE = sfpNAME:EFF_DATE
L_PROTECTION = cppGENERAL:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION

include "cpsproprateb.pro"
if cppgeneral:shopping_centers = 1 then
    l_class_code = l_class_code_1
else
if cppgeneral:multiple_mercantiles = 1 then
    l_class_code = l_class_code_2
else
if cppgeneral:mercantiles_with_apts = 1 then
    l_class_code = l_class_code_3

if sfpname:company_id one of "DELOS", "GGUND" then
    begin
    include "cpstrans_delos.pro"
    end
else
    begin
    Include "cpstrans.pro"
    end

End

procedure building_earthquake
begin
access cppearthquake, set cppearthquake:policy_no = cppgeneral:policy_no,
                          cppearthquake:pol_year = cppgeneral:pol_year,
                          cppearthquake:end_sequence = cppgeneral:end_sequence,
                          cppearthquake:prem_no = cppgeneral:prem_no,
                          cppearthquake:build_no = cppgeneral:build_no,
                          cppearthquake:rate_type = cppgeneral:rate_type, generic

l_company_id = sfpname:company_id
l_state = cppgeneral:state
l_eff_date = sfpname:eff_date
l_building_type = cppearthquake:construction

include "cpseqbuilding.pro"

end

procedure property_earthquake
begin
access cppearthquake, set cppearthquake:policy_no = cppgeneral:policy_no,
                          cppearthquake:pol_year = cppgeneral:pol_year,
                          cppearthquake:end_sequence = cppgeneral:end_sequence,
                          cppearthquake:prem_no = cppgeneral:prem_no,
                          cppearthquake:build_no = cppgeneral:build_no,
                          cppearthquake:rate_type = cppgeneral:rate_type, generic

l_company_id = sfpname:company_id
l_state = cppgeneral:state
l_eff_date = sfpname:eff_date
l_building_type = cppearthquake:construction

include "cpseqproperty.pro"

end

Procedure SPRINKLER_LEAKAGE
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_RATE_TYPE = cppGENERAL:RATE_TYPE

Include "cpstransrates.pro"

End

Procedure TRANSITIONAL
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_GROUP_NO = cppGENERAL:GROUP_NO
L_SUB_GROUP = cppGENERAL:SUB_GROUP
L_CLASS_CODE = cppGENERAL:CLASS_CODE
L_SUB_CODE = cppGENERAL:SUB_CODE
L_EFF_DATE = sfpNAME:EFF_DATE
L_PROTECTION = cppGENERAL:PROTECTION
if cppgeneral:state = 19 then
    begin
    if cppgeneral:protection one of 1, 2 then
        l_protection = 1
    else
    if cppgeneral:protection one of 3, 4 then
        l_protection = 2
    else
        l_protection = 3
    end
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION

if sfpname:company_id one of "DELOS", "GGUND" then
    begin
    include "cpstrans_delos.pro"
    end
else
    begin
    Include "cpstrans.pro"
    end

Access CPSSPECIFIC, Set CPSSPECIFIC:COMPANY_ID       = L_COMPANY_ID,
                        CPSSPECIFIC:STATE            = L_STATE,
                        CPSSPECIFIC:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                        CPSSPECIFIC:CLASS_CODE       = L_CLASS_CODE, Generic

While CPSSPECIFIC:COMPANY_ID       = L_COMPANY_ID And
      CPSSPECIFIC:STATE            = L_STATE And
      CPSSPECIFIC:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS And
      CPSSPECIFIC:CLASS_CODE       = L_CLASS_CODE
       Begin
       If L_EFF_DATE >= CPSSPECIFIC:EFF_DATE Then
           Begin
           l_specific_minimum = cpsspecific:minimum_factor
           End

       Next CPSSPECIFIC
       End

End

Procedure SPECIFIC_RATE_ADJ
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_CLASS_CODE = cppGENERAL:PROPERTY_CLASS_CODE
L_EFF_DATE = sfpNAME:EFF_DATE
L_SPRINKLERED = cppGENERAL:SPRINKLERED
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION
--L_RATE_TYPE = cppGENERAL:RATE_TYPE

Include "cpsspecific.pro"

End

Procedure BUILDING_SPECIFIC_RATE_ADJ
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_SPRINKLERED = cppGENERAL:SPRINKLERED
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION

include "cpsproprateb.pro"
if cppgeneral:shopping_centers = 1 then
    l_class_code = l_class_code_1
else
if cppgeneral:multiple_mercantiles = 1 then
    l_class_code = l_class_code_2
else
if cppgeneral:mercantiles_with_apts = 1 then
    l_class_code = l_class_code_3

Include "cpsspecific.pro"

End

Procedure PERPETUAL
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_CLASS_CODE = cppGENERAL:PROPERTY_CLASS_CODE
L_SUB_CODE = cppGENERAL:SUB_CODE
L_EFF_DATE = sfpNAME:EFF_DATE

Include "cpsperpetual.pro"

End

Procedure OPTION3_RATING
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION
L_RATE_TYPE = cppGENERAL:RATE_TYPE

Include "cpsoption3.pro"

End

Procedure OPTION5_RATING
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_CONSTRUCTION = cppGENERAL:CONSTRUCTION
--L_RATE_TYPE = cppGENERAL:RATE_TYPE
L_EXCLUDE_THEFT = cppEXCLUSIONS:EXCLUDE_THEFT
L_GROUP_NO = cppGENERAL:GROUP_NO
L_COUNTY = cppGENERAL:COUNTY
L_RATE_GROUP = cppGENERAL:RATE_GROUP
L_CMP_SYMBOL = cppGENERAL:CMP_SYMBOL

Include "cpsoption5.pro"

End

Procedure BUILDERS_RISK_RATING
Begin
L_COMPANY_ID = sfpNAME:COMPANY_ID
L_STATE = cppGENERAL:STATE
L_EFF_DATE = sfpNAME:EFF_DATE
L_FORM = cppGENERAL:FORM

Include "cpsbuildrisk.pro"

End

Procedure ACCESS_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = G_PREM_NO,
                   sfpEND:BUILD_NO = G_BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> G_PREM_NO Or
            sfpEND:BUILD_NO <> G_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next sfpEND
    End

End

Procedure ADD_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = G_PREM_NO,
                   sfpEND:BUILD_NO = G_BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> G_PREM_NO Or
            sfpEND:BUILD_NO <> g_BUILD_NO

    L_SUB_CODE = sfpEND:SUB_CODE

    Next sfpEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = G_policy_NO,
                             cppgeneral_alias:pol_year = g_year,
                             cppgeneral_alias:end_sequence = g_end_sequence,
                             cppGENERAL_ALIAS:PREM_NO = g_PREM_NO,
                             cppGENERAL_ALIAS:BUILD_NO = g_BUILD_NO, Generic

L_STATE = cppGENERAL_ALIAS:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = sfpNAME:COMPANY_ID,
                      SFSOPTEND:STATE = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> sfpNAME:COMPANY_ID Or
            SFSOPTEND:STATE <> L_STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> l_LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (sfpname:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        l_mcp140_limit = sfsoptend:limit[1]
        End

    Next SFSOPTEND
    End

if l_form_edition <> "" then
begin
Add sfpEND
    Begin
    sfpEND:policy_NO            =       G_policy_NO
    sfpend:pol_year             =       g_year
    sfpend:end_sequence         =       g_end_sequence
    sfpEND:PREM_NO              =       g_PREM_NO
    sfpEND:BUILD_NO             =       g_BUILD_NO
    sfpEND:SUB_CODE             =       L_SUB_CODE
    sfpEND:CODE                 =       L_CODE
    sfpEND:FORM_EDITION         =       L_FORM_EDITION
    sfpEND:DESCRIPTION          =       L_DESCRIPTION
    sfpEND:LOB_END_CODE         =       "P"
    sfpEND:PREMIUM              =       0
    sfpEND:LOB_END_CODE         =       "P"
    sfpend:ok_print             =       "Y"
    End
end

End

Procedure DELETE_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = g_PREM_NO,
                   sfpEND:BUILD_NO = g_BUILD_NO, Generic

Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> g_PREM_NO Or
            sfpEND:BUILD_NO <> g_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        Delete sfpEND

    Next sfpEND
    End

End

Procedure ACCESS_sfpEND_1
Begin
l_prem_no = 0000
l_build_no = 0000
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = L_PREM_NO,
                   sfpEND:BUILD_NO = L_BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> L_PREM_NO Or
            sfpEND:BUILD_NO <> L_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next sfpEND
    End

End

Procedure ADD_sfpEND_1
Begin
l_prem_no = 0
l_build_no = 0
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpend:prem_no = l_prem_no,
                   sfpend:build_no = l_build_no, generic

L_SUB_CODE = 0
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpend:prem_no <> l_prem_no or
            sfpend:build_no <> l_build_no

    L_SUB_CODE = sfpEND:SUB_CODE

    Next sfpEND
    End

L_SUB_CODE = L_SUB_CODE + 10

L_STATE = cppGENERAL:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = sfpNAME:COMPANY_ID,
                      SFSOPTEND:STATE = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> sfpNAME:COMPANY_ID Or
            SFSOPTEND:STATE <> L_STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> L_LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If (sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE and
       (sfpname:eff_date <= sfsoptend:exp_date or
       sfsoptend:exp_date = 0)) Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add sfpEND
    Begin
    sfpEND:policy_NO            =       G_policy_NO
    sfpend:pol_year             =       g_year
    sfpend:end_sequence         =       g_end_sequence
    sfpEND:PREM_NO              =       0000
    sfpEND:BUILD_NO             =       0000
    sfpEND:SUB_CODE             =       L_SUB_CODE
    sfpEND:CODE                 =       L_CODE
    sfpEND:FORM_EDITION         =       L_FORM_EDITION
    sfpEND:LOB_END_CODE         =       "P"
    sfpEND:DESCRIPTION          =       L_DESCRIPTION
    sfpEND:PREMIUM              =       0
    sfpend:policy_wide_form     =       1
    sfpend:terrorism_form       =       0
    sfpend:manual_premium       =       0
    End

End

Procedure DELETE_sfpEND_1
Begin
l_prem_no = 0
l_build_no = 0
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = L_PREM_NO,
                   sfpEND:BUILD_NO = L_BUILD_NO, Generic

Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> L_PREM_NO Or
            sfpEND:BUILD_NO <> L_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        Delete sfpEND

    Next sfpEND
    End

End

procedure update_cppgeneral_from_cppblanket
begin
access cppblanket, set cppblanket:policy_no = cppgeneral:policy_no,
                       cppblanket:pol_year = cppgeneral:pol_year,
                       cppblanket:end_sequence = cppgeneral:end_sequence, generic

while cppblanket:policy_no = cppgeneral:policy_no and
      cppblanket:pol_year = cppgeneral:pol_year and
      cppblanket:end_sequence = cppgeneral:end_sequence
    begin
    if cppgeneral:prem_no   = cppblanket:prem_no and
       cppgeneral:build_no  = cppblanket:build_no and
       cppgeneral:rate_type = cppblanket:rate_type then
        begin
        change cppgeneral_alias
            begin
            cppgeneral_alias:business_desc[1]      = cppblanket:business_desc[1]
            cppgeneral_alias:business_desc[2]      = cppblanket:business_desc[2]
            cppgeneral_alias:state                 = cppblanket:state
            cppgeneral_alias:county                = cppblanket:county
            cppgeneral_alias:shopping_centers      = cppblanket:shopping_centers
            cppgeneral_alias:multiple_mercantiles  = cppblanket:multiple_mercantiles
            cppgeneral_alias:mercantiles_with_apts = cppblanket:mercantiles_with_apts
            cppgeneral_alias:group_no              = cppblanket:group_no
            cppgeneral_alias:class_code            = cppblanket:class_code
            cppgeneral_alias:description           = cppblanket:description/raw
            cppgeneral_alias:sub_group             = cppblanket:sub_group
            cppgeneral_alias:sub_code              = cppblanket:sub_code
            cppgeneral_alias:construction          = cppblanket:construction
            cppgeneral_alias:protection            = cppblanket:protection
            cppgeneral_alias:sprinklered           = cppblanket:sprinklered
            cppgeneral_alias:file_no               = cppblanket:file_no
            cppgeneral_alias:rate_eff_date         = cppblanket:rate_eff_date
--            cppgeneral_alias:reins                 = cppblanket:reins
            cppgeneral_alias:rate_group            = cppblanket:rate_group
            cppgeneral_alias:property_class_code   = cppblanket:property_class_code
            cppgeneral_alias:apt_condo             = cppblanket:apt_condo
            cppgeneral_alias:earthquake_rate_class = cppblanket:earthquake_rate_class
            cppgeneral_alias:cmp_symbol            = cppblanket:cmp_symbol/raw
            cppgeneral_alias:perpetual_rated       = cppblanket:perpetual_rated
            cppgeneral_alias:residential           = cppblanket:residential
            cppgeneral_alias:church                = cppblanket:church
            cppgeneral_alias:construction_code     = cppblanket:construction_code/raw
            cppgeneral_alias:limit[1]              = cppblanket:limit[1]
            cppgeneral_alias:limit[2]              = cppblanket:limit[2]
            cppgeneral_alias:brtheft               = cppblanket:brtheft
            cppgeneral_alias:base_rate[1]          = cppblanket:base_rate[1]
            cppgeneral_alias:base_rate[2]          = cppblanket:base_rate[2]
            cppgeneral_alias:base_rate[3]          = cppblanket:base_rate[3]
            cppgeneral_alias:base_rate[4]          = cppblanket:base_rate[4]
            cppgeneral_alias:base_rate[5]          = cppblanket:base_rate[5]
            cppgeneral_alias:base_rate[6]          = cppblanket:base_rate[6]
            cppgeneral_alias:base_rate[7]          = cppblanket:base_rate[7]
            cppgeneral_alias:base_rate[8]          = cppblanket:base_rate[8]
            cppgeneral_alias:base_rate[9]          = cppblanket:base_rate[9]
            cppgeneral_alias:base_rate[10]         = cppblanket:base_rate[10]
            cppgeneral_alias:base_rate[11]         = cppblanket:base_rate[11]
            cppgeneral_alias:base_rate[12]         = cppblanket:base_rate[12]
            cppgeneral_alias:other_subject_limit   = cppblanket:other_subject_limit
            cppgeneral_alias:specific_rate_adjustment[1] = cppblanket:specific_rate_adjustment[1]
            cppgeneral_alias:specific_rate_adjustment[2] = cppblanket:specific_rate_adjustment[2]
            end
        end
    else
        begin
        access cppgeneral_alt, set cppgeneral_alt:policy_no = cppgeneral:policy_no,
                                   cppgeneral_alt:pol_year = cppgeneral:pol_year,
                                   cppgeneral_alt:end_sequence = cppgeneral:end_sequence, generic

        add cppgeneral_alias
            begin
            cppgeneral_alias:policy_no             = cppblanket:policy_no
            cppgeneral_alias:pol_year              = cppblanket:pol_year
            cppgeneral_alias:end_sequence          = cppblanket:end_sequence
            cppgeneral_alias:prem_no               = cppblanket:prem_no
            cppgeneral_alias:build_no              = cppblanket:build_no
            cppgeneral_alias:rate_type             = cppblanket:rate_type
            cppgeneral_alias:company_id            = cppgeneral_alt:company_id/raw
            cppgeneral_alias:form                  = cppgeneral_alt:form
            cppgeneral_alias:territory             = cppgeneral_alt:territory
            cppgeneral_alias:replacement_cost      = cppgeneral_alt:replacement_cost
            cppgeneral_alias:deductible            = cppgeneral_alt:deductible
            cppgeneral_alias:coinsurance           = cppgeneral_alt:coinsurance
            cppgeneral_alias:group                 = cppgeneral_alt:group
            cppgeneral_alias:symbol                = cppgeneral_alt:symbol/raw
            cppgeneral_alias:inflation_guard       = cppgeneral_alt:inflation_guard
            cppgeneral_alias:type                  = cppgeneral_alt:type/raw
            cppgeneral_alias:builders_risk         = cppgeneral_alt:builders_risk
            cppgeneral_alias:condo                 = cppgeneral_alt:condo
            cppgeneral_alias:unit_owner            = cppgeneral_alt:unit_owner
            cppgeneral_alias:theft                 = cppgeneral_alt:theft
            cppgeneral_alias:vacancy               = cppgeneral_alt:vacancy
            cppgeneral_alias:sprinkler_leakage     = cppgeneral_alt:sprinkler_leakage
            cppgeneral_alias:protective_systems    = cppgeneral_alt:protective_systems
            cppgeneral_alias:agreed_value          = cppgeneral_alt:agreed_value
            cppgeneral_alias:exclusions            = cppgeneral_alt:exclusions
            cppgeneral_alias:class_rate            = cppgeneral_alt:class_rate/raw
            cppgeneral_alias:peril[1]              = cppgeneral_alt:peril[1]/raw
            cppgeneral_alias:peril[2]              = cppgeneral_alt:peril[2]/raw
            cppgeneral_alias:peril[3]              = cppgeneral_alt:peril[3]/raw
            cppgeneral_alias:peril[4]              = cppgeneral_alt:peril[4]/raw
            cppgeneral_alias:peril[5]              = cppgeneral_alt:peril[5]/raw
            cppgeneral_alias:peril[6]              = cppgeneral_alt:peril[6]/raw
            cppgeneral_alias:peril[7]              = cppgeneral_alt:peril[7]/raw
            cppgeneral_alias:package_mod[1]        = cppgeneral_alt:package_mod[1]
            cppgeneral_alias:package_mod[2]        = cppgeneral_alt:package_mod[2]
            cppgeneral_alias:package_mod[3]        = cppgeneral_alt:package_mod[3]
            cppgeneral_alias:package_mod[4]        = cppgeneral_alt:package_mod[4]
            cppgeneral_alias:package_mod[5]        = cppgeneral_alt:package_mod[5]
            cppgeneral_alias:package_mod[6]        = cppgeneral_alt:package_mod[6]
            cppgeneral_alias:package_mod[7]        = cppgeneral_alt:package_mod[7]
            cppgeneral_alias:package               = cppgeneral_alt:package/raw
            cppgeneral_alias:wind_deductible       = cppgeneral_alt:wind_deductible
            cppgeneral_alias:property_symbol       = cppgeneral_alt:property_symbol
            cppgeneral_alias:trans_rate_no         = cppgeneral_alt:trans_rate_no
            cppgeneral_alias:company_deviation[1]  = cppgeneral_alt:company_deviation[1]
            cppgeneral_alias:company_deviation[2]  = cppgeneral_alt:company_deviation[2]
            cppgeneral_alias:company_deviation[3]  = cppgeneral_alt:company_deviation[3]
            cppgeneral_alias:company_deviation[4]  = cppgeneral_alt:company_deviation[4]
            cppgeneral_alias:company_deviation[5]  = cppgeneral_alt:company_deviation[5]
            cppgeneral_alias:company_deviation[6]  = cppgeneral_alt:company_deviation[6]
            cppgeneral_alias:company_deviation[7]  = cppgeneral_alt:company_deviation[7]
            cppgeneral_alias:public_institutional  = cppgeneral_alt:public_institutional
            cppgeneral_alias:sl_coinsurance        = cppgeneral_alt:sl_coinsurance
            cppgeneral_alias:earthquake            = cppgeneral_alt:earthquake
            cppgeneral_alias:rating_territory_group = cppgeneral_alt:rating_territory_group
            cppgeneral_alias:rating_territory      = cppgeneral_alt:rating_territory
            cppgeneral_alias:rating_territory_factor = cppgeneral_alt:rating_territory_factor
            cppgeneral_alias:rating_territory_sub_code = cppgeneral_alt:rating_territory_sub_code
            cppgeneral_alias:blanket               = 0
            cppgeneral_alias:contents_deductible   = cppgeneral_alt:contents_deductible
            cppgeneral_alias:manually_rated[1]     = cppgeneral_alt:manually_rated[1]
            cppgeneral_alias:manually_rated[2]     = cppgeneral_alt:manually_rated[2]
            cppgeneral_alias:manually_rated[3]     = cppgeneral_alt:manually_rated[3]
            cppgeneral_alias:manually_rated[4]     = cppgeneral_alt:manually_rated[4]
            cppgeneral_alias:manually_rated[5]     = cppgeneral_alt:manually_rated[5]
            cppgeneral_alias:manually_rated[6]     = cppgeneral_alt:manually_rated[6]
            cppgeneral_alias:manually_rated[7]     = cppgeneral_alt:manually_rated[7]
            cppgeneral_alias:manually_rated[8]     = cppgeneral_alt:manually_rated[8]
            cppgeneral_alias:manually_rated[9]     = cppgeneral_alt:manually_rated[9]
            cppgeneral_alias:manually_rated[10]    = cppgeneral_alt:manually_rated[10]
            cppgeneral_alias:manually_rated[11]    = cppgeneral_alt:manually_rated[11]
            cppgeneral_alias:manually_rated[12]    = cppgeneral_alt:manually_rated[12]
            cppgeneral_alias:rating_line_of_business = cppgeneral_alt:rating_line_of_business
            cppgeneral_alias:blanket_description   = ""/raw
            cppgeneral_alias:business_desc[1]      = cppblanket:business_desc[1]/raw
            cppgeneral_alias:business_desc[2]      = cppblanket:business_desc[2]/raw
            cppgeneral_alias:state                 = cppblanket:state
            cppgeneral_alias:county                = cppblanket:county
            cppgeneral_alias:shopping_centers      = cppblanket:shopping_centers
            cppgeneral_alias:multiple_mercantiles  = cppblanket:multiple_mercantiles
            cppgeneral_alias:mercantiles_with_apts = cppblanket:mercantiles_with_apts
            cppgeneral_alias:group_no              = cppblanket:group_no
            cppgeneral_alias:class_code            = cppblanket:class_code
            cppgeneral_alias:description           = cppblanket:description/raw
            cppgeneral_alias:sub_group             = cppblanket:sub_group
            cppgeneral_alias:sub_code              = cppblanket:sub_code
            cppgeneral_alias:construction          = cppblanket:construction
            cppgeneral_alias:protection            = cppblanket:protection
            cppgeneral_alias:sprinklered           = cppblanket:sprinklered
            cppgeneral_alias:file_no               = cppblanket:file_no
            cppgeneral_alias:rate_eff_date         = cppblanket:rate_eff_date
--            cppgeneral_alias:reins                 = cppblanket:reins
            cppgeneral_alias:rate_group            = cppblanket:rate_group
            cppgeneral_alias:property_class_code   = cppblanket:property_class_code
            cppgeneral_alias:apt_condo             = cppblanket:apt_condo
            cppgeneral_alias:earthquake_rate_class = cppblanket:earthquake_rate_class
            cppgeneral_alias:cmp_symbol            = cppblanket:cmp_symbol/raw
            cppgeneral_alias:perpetual_rated       = cppblanket:perpetual_rated
            cppgeneral_alias:residential           = cppblanket:residential
            cppgeneral_alias:church                = cppblanket:church
            cppgeneral_alias:construction_code     = cppblanket:construction_code/raw
            cppgeneral_alias:limit[1]              = cppblanket:limit[1]
            cppgeneral_alias:limit[2]              = cppblanket:limit[2]
            cppgeneral_alias:base_rate[1]          = cppblanket:base_rate[1]
            cppgeneral_alias:base_rate[2]          = cppblanket:base_rate[2]
            cppgeneral_alias:base_rate[3]          = cppblanket:base_rate[3]
            cppgeneral_alias:base_rate[4]          = cppblanket:base_rate[4]
            cppgeneral_alias:base_rate[5]          = cppblanket:base_rate[5]
            cppgeneral_alias:base_rate[6]          = cppblanket:base_rate[6]
            cppgeneral_alias:base_rate[7]          = cppblanket:base_rate[7]
            cppgeneral_alias:base_rate[8]          = cppblanket:base_rate[8]
            cppgeneral_alias:base_rate[9]          = cppblanket:base_rate[9]
            cppgeneral_alias:base_rate[10]         = cppblanket:base_rate[10]
            cppgeneral_alias:base_rate[11]         = cppblanket:base_rate[11]
            cppgeneral_alias:base_rate[12]         = cppblanket:base_rate[12]
            cppgeneral_alias:other_subject_limit   = cppblanket:other_subject_limit
            cppgeneral_alias:specific_rate_adjustment[1] = cppblanket:specific_rate_adjustment[1]
            cppgeneral_alias:specific_rate_adjustment[2] = cppblanket:specific_rate_adjustment[2]
            end

            Access cpppolicy, Set cpppolicy:policy_NO = cppblanket:policy_NO,
                                  cpppolicy:pol_year = cppblanket:pol_year,
                                  cpppolicy:end_sequence = cppblanket:end_sequence,
                                  cpppolicy:PREM_NO  = cppblanket:PREM_NO,
                                  cpppolicy:BUILD_NO = cppblanket:BUILD_NO, Generic

            If cpppolicy:policy_NO <> cppblanket:policy_NO Or
               cpppolicy:pol_year <> cppblanket:pol_year or
               cpppolicy:end_sequence <> cppblanket:end_sequence or
               cpppolicy:PREM_NO  <> cppblanket:PREM_NO Or
               cpppolicy:BUILD_NO <> cppblanket:BUILD_NO Then
                Add cpppolicy
                    Begin
                    cpppolicy:policy_NO             = cppblanket:policy_NO
                    cpppolicy:pol_year              = cppblanket:pol_year
                    cpppolicy:end_sequence          = cppblanket:end_sequence
                    cpppolicy:PREM_NO               = cppblanket:PREM_NO
                    cpppolicy:BUILD_NO              = cppblanket:BUILD_NO
                    End

            l_state = cppblanket:state
            Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID       = sfpNAME:COMPANY_ID,
                                    CPSPROPRATE:STATE            = L_STATE,
                                    CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS, Generic

            While CPSPROPRATE:COMPANY_ID       = sfpNAME:COMPANY_ID And
                  CPSPROPRATE:STATE            = L_STATE And
                  CPSPROPRATE:LINE_OF_BUSINESS = l_LINE_OF_BUSINESS
                Begin
                If (sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE and
                   (sfpname:Eff_date <= cpsproprate:exp_date or
                   cpsproprate:exp_date = 0)) Then
                    Begin
                    Access cppPROPERTY, Set cppPROPERTY:policy_NO = cppblanket:policy_NO,
                                            cppproperty:pol_year = cppblanket:pol_year,
                                            cppproperty:end_sequence = cppblanket:end_sequence,
                                            cppPROPERTY:PREM_NO  = cppblanket:PREM_NO,
                                            cppPROPERTY:BUILD_NO = cppblanket:BUILD_NO, Generic

                    If cppPROPERTY:policy_NO <> cppblanket:policy_NO Or
                       cppproperty:pol_year <> cppblanket:pol_year or
                       cppproperty:end_sequence <> cppblanket:end_sequence or
                       cppPROPERTY:PREM_NO  <> cppblanket:PREM_NO Or
                       cppPROPERTY:BUILD_NO <> cppblanket:BUILD_NO Then
                        Add cppPROPERTY
                            Begin
                            cppPROPERTY:policy_NO               = cppblanket:policy_NO
                            cppproperty:pol_year                = cppblanket:pol_year
                            cppproperty:end_sequence            = cppblanket:end_sequence
                            cppPROPERTY:PREM_NO                 = cppblanket:PREM_NO
                            cppPROPERTY:BUILD_NO                = cppblanket:BUILD_NO
                            cppPROPERTY:AR_LIMIT                = CPSPROPRATE:AR_BASIC_LIMIT
                            cppproperty:boiler                  = 1
                            cppPROPERTY:GLASS_LIMIT             = CPSPROPRATE:GLASS_LIMIT
                            cppPROPERTY:GLASS_PER_PANE          = CPSPROPRATE:GLASS_PANE
                            cppPROPERTY:SIGNS_ATTACHED          = CPSPROPRATE:SIGNS_ATTACHED_LIMIT
                            cppPROPERTY:SIGNS_NOT_ATTACHED      = CPSPROPRATE:SIGNS_NOT_ATTACHED_LIMIT
                            cppPROPERTY:DELETE_SIGNS_DEDUCTIBLE = 0
                            cppPROPERTY:BUILDING_CODE_PERCENT   = CPSPROPRATE:BUILDING_LAW_PERCENT
                            if (sfpname:company_Id = "NWIC" and
                               (cppgeneral:unit_owner = 1 or
                               cppgeneral:condo = 1)) then
                                begin
                                if cpsproprate:condo_building_code_percent <> 0 then
                                    cppproperty:building_code_percent = cpsproprate:condo_building_code_percent
                                end
                            cppPROPERTY:LOSS_UTILITY            = CPSPROPRATE:UTILITY_LIMIT
                            cppPROPERTY:MECHANICAL_BREAKDOWN    = CPSPROPRATE:MECHANICAL_LIMIT
                            cppPROPERTY:DEBRIS_FACTOR           = CPSPROPRATE:DEBRIS_PERCENT
                            if (sfpname:company_Id = "NWIC" and
                               (cppgeneral:unit_owner = 1 or
                               cppgeneral:condo = 1)) then
                                begin
                                if cpsproprate:condo_debris_removal <> 0 then
                                    cppproperty:debris_factor = cpsproprate:condo_debris_removal
                                end
                            cppPROPERTY:DEBRIS_REMOVAL          = CPSPROPRATE:DEBRIS_LIMIT
                            cppPROPERTY:FIRE_DEPT               = CPSPROPRATE:FIRE_DEPT_LIMIT
                            cppPROPERTY:COVERAGE_A_TIMES        = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[1]
                            cppPROPERTY:COVERAGE_B_TIMES        = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[2]
                            cppPROPERTY:COVERAGE_D_TIMES        = CPSPROPRATE:NEWLY_ACQUIRED_PERCENT[3]
                            cppPROPERTY:COV_A_LIMIT             = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[1]
                            cppPROPERTY:COV_B_LIMIT             = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[2]
                            cppPROPERTY:COV_D_LIMIT             = CPSPROPRATE:NEWLY_ACQUIRED_LIMIT[3]
                            cppPROPERTY:OFF_PREM_OTHER_LOCATION = CPSPROPRATE:OFF_PREM_LOC_LIMIT
                            cppPROPERTY:OFF_PREM_IN_TRANSIT     = CPSPROPRATE:OFF_PREM_TRANSIT_LIMIT
                            cppPROPERTY:MCP505_OPTION           = 0
                            cppPROPERTY:OPTIONAL_THEFT_LIMIT    = 0
                            cppPROPERTY:OUTDOOR_PROPERTY        = CPSPROPRATE:OUTDOOR_BASIC_LIMIT
                            cppPROPERTY:OUTDOOR_PROPERTY_PER    = CPSPROPRATE:OUTDOOR_PER_PLANT
                            cppPROPERTY:PERSONAL_EFFECTS        = CPSPROPRATE:PERSONAL_EFFECTS_LIMIT
                            cppPROPERTY:PERSONAL_PROPERTY_OF_OTHERS = CPSPROPRATE:PROPERTY_OTHERS_LIMIT
                            cppPROPERTY:VALUABLE_PAPERS         = CPSPROPRATE:VALUABLE_LIMIT
                            cppPROPERTY:POLLUTION_CLEAN_UP      = CPSPROPRATE:POLLUTION_LIMIT
                            cppPROPERTY:PRECIOUS_METALS         = CPSPROPRATE:METALS_LIMIT
                            if cppgeneral:unit_owner = 1 then
                                begin
                                cppproperty:loss_assessment     = cpsproprate:loss_assessment
                                cppproperty:coverage_b_times    = cpsproprate:newly_acquired_percent[2]
                                cppproperty:furs                = cpsproprate:furs_mcp017
                                cppproperty:jewelry_limit       = cpsproprate:jewelry_limit_mcp017
                                cppproperty:jewelry_per         = cpsproprate:jewelry_per_mcp017
                                end
                            else
                                begin
                                cppPROPERTY:FURS                = CPSPROPRATE:FURS
                                cppPROPERTY:JEWELRY_LIMIT       = CPSPROPRATE:JEWELRY_LIMIT
                                cppPROPERTY:JEWELRY_PER         = CPSPROPRATE:JEWELRY_PER
                                end
                            cppPROPERTY:REPLACEMENT_THRESHOLD   = CPSPROPRATE:REPLACEMENT_THRESHOLD
                            cppPROPERTY:SPECIAL_CONDITION       = CPSPROPRATE:SPECIAL_CONDITION
                            cppPROPERTY:SPECIAL_CONDITION_FACTOR = CPSPROPRATE:SPECIAL_FACTOR
                            End

                    End

                Next CPSPROPRATE
                End
        end

    next cppblanket
    end

end

End
