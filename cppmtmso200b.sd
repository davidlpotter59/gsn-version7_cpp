%%
Screen
        Name            = "cppmtmso200b" ;
        Type            = "Detail" ;
        Padcharacter    = Space ;
        Highlite        = Underscore ;
        Screensize      = "dynamic" ;
        Windowtitle= "%a     %s Optional Coverages - MCP017    Ver 7.00 %m" ;
        Domain          = "cppPROPERTY" ;

        Global Unsigned Ascii Number G_policy_NO[9] ;
        global unsigned ascii number g_year[4] ;
        global unsigned ascii number g_end_sequence[4] ;
        Global Unsigned Ascii Number G_PREM_NO[4] ;
        Global Unsigned Ascii Number G_BUILD_NO[4] ;

        Local Unsigned Ascii Number L_SUB_CODE[4],
                                    L_STATE[2] ,
                                    l_signs_limit[8]=0,
                                    l_line_of_business[4],
                                    L_WATER_BKUP_LIMIT[8] ;

        Local String L_CODE[7],
                     L_CODE_1[7],
                     L_CODE_2[7],
                     L_CODE_3[7],
                     L_CODE_4[7],
                     L_CODE_5[7],
                     L_code_6[7],
                     L_ADD_ENDORSEMENT[1] ,
                     L_FORM_EDITION[18],
                     L_DESCRIPTION[55] ;

        Access cppPROPERTY,
           Set cppPROPERTY:policy_NO = G_policy_NO ,
               cppproperty:pol_year = g_year,
               cppproperty:end_sequence = g_end_sequence,
               cppPROPERTY:PREM_NO = G_PREM_NO ,
               cppPROPERTY:BUILD_NO = G_BUILD_NO ;

        Include "STDKEYS7.INC"

style definition

        include "styles.inc"

Functions

        Include "STDFUNC7.INC"

menu definition

        include "stdmenu7.inc"

}

toolbar definition

        include "stdtoolbar7.inc"
}

Access Validation
If cppPROPERTY:policy_NO <> G_policy_NO Or
   cppproperty:pol_year <> g_year or
   cppproperty:end_sequence <> g_end_sequence or
   cppPROPERTY:PREM_NO <> G_PREM_NO Or
   cppPROPERTY:BUILD_NO <> G_BUILD_NO Then
    Error 1000 ;

screen at 1,1 to 20,80
Properties
        {
        Layouttype = column
        }
{
Panel
Properties
        {
        Borderstyle     = raised
        Scrollbarpolicy = asneeded
        }
{
%%
                                                        _______________
*------------------------------------------------------------------------------*
| Policy No:   _________  ____  ____                                           |
| Location No: ____                                                            |
| Building No: ____                                                            |
*------------------------------------------------------------------------------*
| A/R Limit:               ________     Outdoor property Limit:   ________     |
| Inflation                __           Outdoor property Per:     ________     |
| Peak Season:             ___          Outdoor Signs:            ________     |
| Building Code/Law:       ___          -Entirely Metal:          _            |
| -ACV Basis MCP506:       _            -Delete Ded (MCP108):     _            |
| Loss Utility Service:    ________     Personal Effects:         ________     |
| Debris Removal:          ________     Property of Others:       ________     |
| Loss Assessment:         ________     Valuable Papers:          ________     |
| Newly Acquired Property               Precious Metals:          ________     |
| -Coverage B Limit Times: ____         Furs:                     ________     |
| Off Premises Property                 Limit Water Backup:       _            |
| -At Other Locations:     ________     Water Backup:             ________     |
| -In Transit:             ________     Boilers:                  _            |
| -MCP505:                 _                                                   |
| -Optional Theft Limit:   ________                                            |
| _Override Premium:       ________                                            |
*------------------------------------------------------------------------------*
%%

components

Fields
101     FUNCTION/noecho/showasguidetext ;
301     Begin
        If FUNCTION One Of "ADD", "CHANGE" Then
            Begin
            cppPROPERTY:policy_NO = G_policy_NO
            cppproperty:pol_Year = g_year
            cppproperty:end_sequence = g_end_sequence
            cppPROPERTY:PREM_NO = G_PREM_NO
            cppPROPERTY:BUILD_NO = G_BUILD_NO
            End
        access sfsline, set sfsline:company_id = sfpname:company_id,
                            sfsline:line_of_business = sfpname:line_of_business,
                            sfsline:lob_subline = "00", generic

        l_line_of_business = sfsline:rating_line_of_business

        End
        cppPROPERTY:policy_NO/displayonly                   Mandatory;
302     cppproperty:pol_year/displayonly ;
303     cppproperty:end_sequence/displayonly;
401     cppPROPERTY:PREM_NO/displayonly                      Mandatory;
501     cppPROPERTY:BUILD_NO/displayonly                     Mandatory;

701     cppPROPERTY:AR_LIMIT;
801     cppPROPERTY:INFLATION_GUARD[2];
901     cppPROPERTY:PEAK_SEASON;
1001    cppPROPERTY:BUILDING_CODE_PERCENT;
1101    cppproperty:building_code_acv/checkbox/values="0,1" ;
1201    cppPROPERTY:LOSS_UTILITY;
1301    cppPROPERTY:DEBRIS_REMOVAL;
1401    cppproperty:loss_assessment;
1601    cppproperty:coverage_b_times ;
1801    cppPROPERTY:OFF_PREM_OTHER_LOCATION;
1901    cppPROPERTY:OFF_PREM_IN_TRANSIT;
2001    cppPROPERTY:MCP505_OPTION/checkbox/values="0,1" ;
2101    cppproperty:optional_theft_limit ;
2201    cppproperty:off_prem_in_transit_manual ;

702     cppPROPERTY:OUTDOOR_PROPERTY ;
802     cppPROPERTY:OUTDOOR_PROPERTY_PER;
902     cppPROPERTY:SIGNS_NOT_ATTACHED;
1002    cppproperty:signs_metal/checkbox/values="0,1"
        do signs_not_attached_limit
        hide if cppproperty:signs_not_attached = l_signs_limit ;
1102    cppproperty:delete_signs_deductible/checkbox/values="0,1" ;
1202    cppPROPERTY:PERSONAL_EFFECTS;
1302    cppproperty:personal_property_of_others ;
1402    cppPROPERTY:VALUABLE_PAPERS;
1501    cppPROPERTY:PRECIOUS_METALS;
1602    cppproperty:furs ;
1701    cppPROPERTY:WATER_BACKUP_LIMITED/checkbox/values="0,1" ;
1802    Begin
        If FUNCTION = "ADD" Or
           FUNCTION = "CHANGE" And
           cppPROPERTY:WATER_BACKUP_LIMITED = 1 Then
            Begin
            Do GET_WATER_BACKUP_BASIC_LIMIT
            cppPROPERTY:WATER_BACKUP = L_WATER_BKUP_LIMIT
            End
        End
        cppPROPERTY:WATER_BACKUP/default
        Hide If cppPROPERTY:WATER_BACKUP_LIMITED = 0 ;
1902    cppPROPERTY:BOILER/checkbox/values="0,1";

}

}


Update
If UPDATEOK = "YES" And
   Abort = "NO" Then
    Begin
    L_STATE = cppGENERAL:STATE
    Access cpsproprate, Set cpsproprate:COMPANY_ID = sfpNAME:COMPANY_ID,
                           cpsproprate:STATE = L_STATE,
                           cpsproprate:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While cpsproprate:COMPANY_ID = sfpNAME:COMPANY_ID And
          cpsproprate:STATE = L_STATE And
          cpsproprate:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If sfpNAME:EFF_DATE >= cpsproprate:EFF_DATE Then
                Begin
                L_CODE_1 = cpsproprate:signs_delete_ded_code          -- signs delete deductible
                L_CODE_2 = cpsproprate:building_law_acv_code          -- ACV building code
                L_CODE_3 = cpsproprate:water_backup_code              -- water backup limted
                L_CODE_4 = cpsproprate:water_backup_policy_limit_code -- water backup up to policy limits
                L_CODE_5 = cpsproprate:boiler_code                    -- boilers
                l_code_6 = cpsproprate:building_law_excl_code         -- delete building code
                End
            Next cpsproprate
            End

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:DELETE_SIGNS_DEDUCTIBLE = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:DELETE_SIGNS_DEDUCTIBLE = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_2 <> "" Then
        Begin
        L_CODE = L_CODE_2
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BUILDING_CODE_ACV = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BUILDING_CODE_ACV = 0 Then
            Do DELETE_sfpEND
        End

    If L_CODE_3 <> "" Then
        Begin
        L_CODE = L_CODE_3
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:WATER_BACKUP_LIMITED = 1 And
           cppPROPERTY:WATER_BACKUP = L_WATER_BKUP_LIMIT Then
            Do ADD_sfpEND
        If (L_ADD_ENDORSEMENT = "N" And
           (cppPROPERTY:WATER_BACKUP_LIMITED = 0 Or
           cppPROPERTY:WATER_BACKUP <> L_WATER_BKUP_LIMIT)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_4 <> "" Then
        Begin
        L_CODE = L_CODE_4
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:WATER_BACKUP <> L_WATER_BKUP_LIMIT And
           cppPROPERTY:WATER_BACKUP <> 0 Then
            Do ADD_sfpEND
        If (L_ADD_ENDORSEMENT = "N" And
           (cppPROPERTY:WATER_BACKUP = L_WATER_BKUP_LIMIT Or
           cppPROPERTY:WATER_BACKUP = 0)) Then
            Do DELETE_sfpEND
        End

    If L_CODE_5 <> "" Then
        Begin
        L_CODE = L_CODE_5
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:BOILER = 1 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:BOILER = 0  Then
            Do DELETE_sfpEND
        End

    If L_CODE_6 <> "" Then
        Begin
        L_CODE = L_CODE_6
        Do ACCESS_sfpEND
        If L_ADD_ENDORSEMENT = "Y" And
           cppPROPERTY:building_code_percent = 0 Then
            Do ADD_sfpEND
        If L_ADD_ENDORSEMENT = "N" And
           cppPROPERTY:building_code_percent <> 0 Then
            Do DELETE_sfpEND
        End

    End

Procedure Definition

Procedure GET_WATER_BACKUP_BASIC_LIMIT
Begin
L_STATE = cppGENERAL:STATE
Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID,
                        CPSPROPRATE:STATE = L_STATE,
                        CPSPROPRATE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

L_WATER_BKUP_LIMIT = 0
While CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID And
      CPSPROPRATE:STATE = L_STATE And
      CPSPROPRATE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        Begin
        If sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE Then
            L_WATER_BKUP_LIMIT = CPSPROPRATE:WATER_BACKUP_BASIC_LIMIT

        Next CPSPROPRATE
        End

End

Procedure ACCESS_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = G_PREM_NO,
                   sfpEND:BUILD_NO = G_BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> G_PREM_NO Or
            sfpEND:BUILD_NO <> G_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next sfpEND
    End

End

Procedure ADD_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = G_PREM_NO,
                   sfpEND:BUILD_NO = G_BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> G_PREM_NO Or
            sfpEND:BUILD_NO <> G_BUILD_NO

    L_SUB_CODE = sfpEND:SUB_CODE

    Next sfpEND
    End

L_SUB_CODE = L_SUB_CODE + 10

Access cppGENERAL_ALIAS, Set cppGENERAL_ALIAS:policy_NO = G_policy_NO,
                             cppgeneral_alias:pol_year = g_year,
                             cppgeneral_alias:end_sequence = g_end_sequence,
                             cppGENERAL_ALIAS:PREM_NO = G_PREM_NO,
                             cppGENERAL_ALIAS:BUILD_NO = G_BUILD_NO, Generic

L_STATE = cppGENERAL_ALIAS:STATE
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = sfpNAME:COMPANY_ID,
                      SFSOPTEND:STATE = L_STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> sfpNAME:COMPANY_ID Or
            SFSOPTEND:STATE <> L_STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> L_LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If sfpNAME:EFF_DATE >= SFSOPTEND:EFF_DATE Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add sfpEND
    Begin
    sfpEND:policy_NO            =       G_policy_NO
    sfpend:pol_year             =       g_year
    sfpend:end_sequence         =       g_end_sequence
    sfpEND:PREM_NO              =       G_PREM_NO
    sfpEND:BUILD_NO             =       G_BUILD_NO
    sfpEND:SUB_CODE             =       L_SUB_CODE
    sfpEND:CODE                 =       L_CODE
    sfpEND:FORM_EDITION         =       L_FORM_EDITION
    sfpEND:DESCRIPTION          =       L_DESCRIPTION
    sfpEND:PREMIUM              =       0
    sfpEND:LOB_END_CODE         =       "P"
    End

End

Procedure DELETE_sfpEND
Begin
Access sfpEND, Set sfpEND:policy_NO = G_policy_NO ,
                   sfpend:pol_year = g_year,
                   sfpend:end_sequence = g_end_sequence,
                   sfpEND:PREM_NO = G_PREM_NO,
                   sfpEND:BUILD_NO = G_BUILD_NO, Generic

Repeat Begin
    Exit If sfpEND:policy_NO <> G_policy_NO Or
            sfpend:pol_year <> g_year or
            sfpend:end_sequence <> g_end_sequence or
            sfpEND:PREM_NO <> G_PREM_NO Or
            sfpEND:BUILD_NO <> G_BUILD_NO

    If sfpEND:CODE = L_CODE Then
        Delete sfpEND

    Next sfpEND
    End

End

Procedure signs_not_attached_limit
Begin
L_STATE = cppGENERAL_ALIAS:STATE
Access CPSPROPRATE, Set CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID,
                        CPSPROPRATE:STATE = L_STATE,
                        CPSPROPRATE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

While CPSPROPRATE:COMPANY_ID = sfpNAME:COMPANY_ID And
      CPSPROPRATE:STATE = L_STATE And
      CPSPROPRATE:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
        Begin
        If sfpNAME:EFF_DATE >= CPSPROPRATE:EFF_DATE Then
            Begin
            L_signs_LIMIT = CPSPROPRATE:signs_not_attached_limit
            End

        Next CPSPROPRATE
        End

end

End
