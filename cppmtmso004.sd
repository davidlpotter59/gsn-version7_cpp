%%
Screen
        Name            = "cppmtmso004" ;
        Type            = "Detail" ;
        Padcharacter    = Space ;
        Highlite        = Underscore ;
        Screensize      = "dynamic" ;
        Windowtitle = "%a     %s Glass - Ver 7.00     %m" ;
        Domain          = "CPPGLASS" ;
        iconline        = 0;

        Global Unsigned Ascii Number G_POLICY_NO[9] ;
        Global Unsigned Ascii Number G_YEAR[4] ;
        Global Unsigned Ascii Number G_END_SEQUENCE[4] ;
        Global Unsigned Ascii Number G_PREM_NO[4] ;
        Global Unsigned Ascii Number G_BUILD_NO[4] ;
        Global Unsigned Ascii Number G_SUB_CODE[4] ;

        global string g_code[7] ;

        Local String L_DESC[50] ,
                     L_CLASS[1] ,
                     L_CODE[7],
                     L_CODE_1[7],
                     L_CODE_2[7],
                     L_CODE_3[7],
                     L_CODE_4[7],
                     L_CODE_5[7],
                     L_FORM_EDITION[18],
                     L_DESCRIPTION[55],
                     L_ADD_ENDORSEMENT[1] ,
                     L_SCREEN[11] ;

        Local Unsigned Ascii Number L_SPECIAL_CONDITION[1] ,
                                    L_HOTEL_MOTEL[1] ,
                                    L_LOSS_PAYMENT[1] ,
                                    l_damaged_glass[1],
                                    L_RETENTION[1] ,
                                    L_SUB_CODE[4] ,
                                    l_line_of_business[4] ;

        Access CPPGLASS,
           Set CPPGLASS:POLICY_NO = G_POLICY_NO ,
               CPPGLASS:POL_YEAR = G_YEAR,
               CPPGLASS:END_SEQUENCE = G_END_SEQUENCE, generic ;

        Include "STDKEYS7.INC"

style definition

        include "styles.inc"

Functions

        "func1"  display "cppmtmso450"  tagged endorse_fn ;
        "func2"  display "cppmtmso400"  tagged spec_fn ;
        "func3"  display "cppmtmso401"  tagged struct_fn ;
        "func4"  display "cppmtmso402"  tagged hotel_fn ;
        "func5"  display "cppmtmso453"  tagged damaged_fn ;
        "func6"  display "cppmtmso403"  tagged loss_fn ;
        "func7"  display "cppmtmso404"  tagged retention_fn ;

        Include "stdfunc7.inc"

menu definition

        include "stdmenu7.inc"

        include "cppmsoglmenu7.inc"

}

toolbar definition

        include "stdtoolbar7.inc"

}

Access Validation
If CPPGLASS:POLICY_NO <> G_POLICY_NO Or
   CPPGLASS:POL_YEAR <> G_YEAR Or
   CPPGLASS:END_SEQUENCE  <> G_END_SEQUENCE  Then
    Error 1000 ;


screen at 1,1 to 20,80
Properties
        {
        Layouttype = column
        }
{
Panel
Properties
        {
        Borderstyle     = raised
        Scrollbarpolicy = asneeded
        }
{
%%
                                                        _______________
*------------------------------------------------------------------------------*
| Policy No:   _________  ____  ____                                           |
| Location No: ____                                                            |
| Building No: ____                                                            |
*------------------------------------------------------------------------------*
%%

components

Fields
101     FUNCTION/noecho/showasguidetext ;
301     Begin
        If FUNCTION = "ADD" Then
            Begin
            access sfpname, set sfpname:policy_no = g_policy_no,
                                sfpname:pol_year = g_year,
                                sfpname:end_sequence = g_end_sequence, generic

            access sfsline, set sfsline:company_id = sfpname:company_id,
                                sfsline:line_of_business = sfpname:line_of_business,
                                sfsline:lob_subline = "00", generic

            access sfpmaster, set sfpmaster:policy_no = g_policy_no,
                                  sfpmaster:pol_year = g_year,
                                  sfpmaster:end_sequence = g_end_sequence, generic

            CPPGLASS:POLICY_NO = G_POLICY_NO
            CPPGLASS:POL_YEAR = G_YEAR
            CPPGLASS:END_SEQUENCE = G_END_SEQUENCE
            CPPGLASS:PREM_NO = G_PREM_NO
            CPPGLASS:BUILD_NO = G_BUILD_NO
            CPPGLASS:STATE = sfpmaster:STATE
            cppglass:rating_line_of_business = sfsline:rating_line_of_business

            Access SFPMASTER, Set SFPMASTER:POLICY_NO = G_POLICY_NO,
                                  SFPMASTER:POL_YEAR = G_YEAR,
                                  SFPMASTER:END_SEQUENCE  = G_END_SEQUENCE, Generic

            If SFPMASTER:POLICY_NO <> G_POLICY_NO Or
               SFPMASTER:POL_YEAR <> G_YEAR Or
               SFPMASTER:END_SEQUENCE  <> G_END_SEQUENCE  Then
                Add SFPMASTER
                    Begin
                    SFPMASTER:POLICY_NO = G_POLICY_NO
                    SFPMASTER:POL_YEAR = G_YEAR
                    SFPMASTER:END_SEQUENCE = G_END_SEQUENCE
                    End
            End
        End
        CPPGLASS:POLICY_NO/displayonly ;
302     CPPGLASS:POL_YEAR/displayonly ;
303     CPPGLASS:END_SEQUENCE/displayonly;
401     CPPGLASS:PREM_NO/default Mandatory ;
501     CPPGLASS:BUILD_NO/default Mandatory ;

} -- end of header

CardDialog GUI at 1,80
{
Panel
Properties
        {
        Scrollbarpolicy = asneeded
        Text            = "Rating Information"
        }
{
%%
*------------------------------------------------------------------------------*
| Description:         __________________________________________________      |
|                      __________________________________________________      |
| Classification:      _               Limit:            __________            |
| Position:            _               Territory:        ___                   |
| No Plates:           ____            Length:           ____                  |
| Width:               ____            Square Feet:      _______               |
| Deductible Percent:  _               Deductible:       _____                 |
| Special Conditions:  _               Obstructions:     _                     |
| Hotels/Motels:       _                                                       |
*------------------------------------------------------------------------------*
%%

components

fields
201     begin
        if function one of "ADD" then
            begin
            do subcode
            cppglass:sub_code = l_sub_code
            end
        end
        CPPGLASS:DESCRIPTION[1]/uppercase;
301     CPPGLASS:DESCRIPTION[2]/uppercase;
401     Begin
        L_CLASS = CPPGLASS:CLASS
        l_line_of_business = sfsline:rating_line_of_business
        Access CPSGLASSCLASS_ALIAS, Set CPSGLASSCLASS_ALIAS:COMPANY_ID = SFPNAME:COMPANY_ID,
                                        CPSGLASSCLASS_ALIAS:STATE = CPPGLASS:STATE,
                                        CPSGLASSCLASS_ALIAS:LINE_OF_BUSINESS = cppglass:rating_LINE_OF_BUSINESS,
                                        CPSGLASSCLASS_ALIAS:CLASS_DESCRIPTION = L_DESC, Approximate

        CPPGLASS:CLASS_SUB_CODE = CPSGLASSCLASS_ALIAS:SUB_CODE
        End
        CPPGLASS:CLASS/default/uppercase     Mandatory
        Access CPSGLASSCLASS, Set CPSGLASSCLASS:COMPANY_ID = SFPNAME:COMPANY_ID,
                                  CPSGLASSCLASS:STATE = CPPGLASS:STATE,
                                  CPSGLASSCLASS:LINE_OF_BUSINESS = cppglass:rating_LINE_OF_BUSINESS,
                                  CPSGLASSCLASS:CLASS = CPPGLASS:CLASS, Generic

--        If cppGLASS:CLASS <> CPSGLASSCLASS:CLASS Or
--           cppGLASS:CLASS = "" Then
--            Error "Invalid Class Code"

        Activehelp CPSGLASSCLASS_ALIAS:CLASS,
                   CPSGLASSCLASS_ALIAS:CLASS_DESCRIPTION ;
402     CPPGLASS:LIMIT
        Hide If CPPGLASS:CLASS <> "E"
        If CPPGLASS:CLASS = "E" And
           CPPGLASS:LIMIT = 0 Then
            Error "Must enter a limit" ;
501     begin
        l_line_of_business = sfsline:rating_line_of_business
        access cpsglassposuse, set cpsglassposuse:company_id = sfpname:company_id,
                                   cpsglassposuse:state = cppglass:state,
                                   cpsglassposuse:line_of_business = cppglass:rating_line_of_business, generic
        end
        CPPGLASS:POSITION_USE
        access cpsglassposuse, set cpsglassposuse:company_id = sfpname:company_id,
                                   cpsglassposuse:state = cppglass:state,
                                   cpsglassposuse:line_of_business = cppglass:rating_line_of_business,
                                   cpsglassposuse:position_use = cppglass:position_use, generic

        If CPPGLASS:POSITION_USE <> CPSGLASSPOSUSE:POSITION_USE Or
           CPPGLASS:POSITION_USE = 0 Then
            Error "Invalid position/use"

        Activehelp CPSGLASSPOSUSE_ALIAS:POSITION_USE/width=12,
                   CPSGLASSPOSUSE_ALIAS:DESCRIPTION[1],
                   CPSGLASSPOSUSE_ALIAS:DESCRIPTION[2],
                   CPSGLASSPOSUSE_ALIAS:DESCRIPTION[3],
                   CPSGLASSPOSUSE_ALIAS:DESCRIPTION[4] ;
502    CPPGLASS:TERRITORY
        If CPPGLASS:TERRITORY <> CPSGLASSTERR:TERRITORY Or
           CPPGLASS:TERRITORY = 0 Then
            Error 1206

        Activehelp CPSGLASSTERR_ALIAS:TERRITORY/width=10,
                   CPSGLASSTERR_ALIAS:DESCRIPTION ;
601    CPPGLASS:NO_PLATES    Mandatory;
602    CPPGLASS:LENGTH       Mandatory ;
701    CPPGLASS:WIDTH        Mandatory ;
702    Begin
        If FUNCTION = "ADD" Or
           FUNCTION = "CHANGE" Then
            begin
            access sfscompany, set sfscompany:company_id = sfpname:company_id, generic

            CPPGLASS:SQUARE_FEET = ((CPPGLASS:LENGTH * CPPGLASS:WIDTH)
                                   Divide 144)
            end
        End
        CPPGLASS:SQUARE_FEET/displayonly/mask="ZZZZ.ZZ" ;
801    CPPGLASS:DEDUCTIBLE_PERCENT/checkbox/values="0,1" ;
802    CPPGLASS:DEDUCTIBLE
        Hide If CPPGLASS:DEDUCTIBLE_PERCENT = 1
        If CPPGLASS:DEDUCTIBLE <> CPSGLASSDEDUCT:DEDUCTIBLE Then
            Error 1207

        Activehelp CPSGLASSDEDUCT_ALIAS:DEDUCTIBLE ;
802    CPPGLASS:DEDUCTIBLE
        Hide If CPPGLASS:DEDUCTIBLE_PERCENT = 0
        If CPPGLASS:DEDUCTIBLE <> CPSGLASSDEDP:DEDUCTIBLE Then
            Error "Invalid deductible percent"

        Activehelp CPSGLASSDEDP_ALIAS:DEDUCTIBLE ;
901    Begin
            L_SPECIAL_CONDITION = CPPGLASS:SPECIAL_CONDITIONS
        End
        CPPGLASS:SPECIAL_CONDITIONS/checkbox/values="0,1";
902    CPPGLASS:OBSTRUCTIONS/checkbox/values="0,1" ;
1001    Begin
            L_HOTEL_MOTEL = CPPGLASS:HOTELS_MOTELS
        End
        CPPGLASS:HOTELS_MOTELS/checkbox/values="0,1" ;

} -- end of rating info


Panel
Properties
        {
        Scrollbarpolicy = asneeded
        Text            = "Coverages"
        }
{
%%
*------------------------------------------------------------------------------*
| Optional Loss Payment For Large Plates: _                                    |
| Damaged Glass Exclusion:                _                                    |
| Vacancy/Unoccupancy:                    _                                    |
| 50/50 Retention:                        _                                    |
*------------------------------------------------------------------------------*
%%

components

fields
201    Begin
            L_LOSS_PAYMENT = CPPGLASS:OPTIONAL_LOSS_PAYMENT
        End
        CPPGLASS:OPTIONAL_LOSS_PAYMENT/checkbox/values="0,1"
        Hide If CPPGLASS:SQUARE_FEET < 100 ;
301    begin
            l_damaged_glass = cppglass:damaged_glass_exclusion
        end
        CPPGLASS:DAMAGED_GLASS_EXCLUSION/checkbox/values="0,1" ;
401    CPPGLASS:VACANCY_UNOCCUPANCY/checkbox/values="0,1" ;
501    Begin
            L_RETENTION = CPPGLASS:RETENTION
        End
        CPPGLASS:RETENTION/checkbox/values="0,1";

} -- end of coverages

}

}


Update
If UPDATEOK = "YES" And
   Abort = "NO" Then
    Begin
    If FUNCTION = "ADD" Then
        Begin
        Access CPPPOLICY, Set CPPPOLICY:POLICY_NO = CPPGLASS:POLICY_NO,
                              CPPPOLICY:POL_YEAR = CPPGLASS:POL_YEAR,
                              CPPPOLICY:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                              CPPPOLICY:PREM_NO = CPPGLASS:PREM_NO,
                              CPPPOLICY:BUILD_NO = CPPGLASS:BUILD_NO, Generic

        If CPPPOLICY:POLICY_NO <> CPPGLASS:POLICY_NO Or
           CPPPOLICY:POL_YEAR <> CPPGLASS:POL_YEAR Or
           CPPPOLICY:END_SEQUENCE <> CPPGLASS:END_SEQUENCE Or
           CPPPOLICY:PREM_NO <> CPPGLASS:PREM_NO Or
           CPPPOLICY:BUILD_NO <> CPPGLASS:BUILD_NO Then
            Add CPPPOLICY
                Begin
                CPPPOLICY:POLICY_NO = CPPGLASS:POLICY_NO
                CPPPOLICY:POL_YEAR = CPPGLASS:POL_YEAR
                CPPPOLICY:END_SEQUENCE = CPPGLASS:END_SEQUENCE
                CPPPOLICY:PREM_NO = CPPGLASS:PREM_NO
                CPPPOLICY:BUILD_NO = CPPGLASS:BUILD_NO
                End
        End

    If FUNCTION = "ADD" Then
        Begin
        If CPPGLASS:CLASS = "S" Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso401"
            With Initial Function "CHANGE|BACK"
            End

        If CPPGLASS:SPECIAL_CONDITIONS = 1 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso400"
            With Initial Function "ADD|BACK"
            End

        If CPPGLASS:HOTELS_MOTELS = 1 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso402"
            With Initial Function "CHANGE|BACK"
            End

        If CPPGLASS:damaged_glass_exclusion = 1 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_code = "MCP133"
            Display Modal Screen "cppmtmso453"
            With Initial Function "ADD|BACK"
            End

        --MCP530
        If ((FUNCTION = "ADD" And
           CPPGLASS:OPTIONAL_LOSS_PAYMENT = 1) Or
           (FUNCTION = "CHANGE" And
           L_LOSS_PAYMENT = 0 And
           CPPGLASS:OPTIONAL_LOSS_PAYMENT = 1)) Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso403"
            With Initial Function "CHANGE|BACK"
            End

        If FUNCTION = "CHANGE" And
           L_LOSS_PAYMENT = 1 And
           CPPGLASS:OPTIONAL_LOSS_PAYMENT = 0 Then
            Begin
            L_CODE = "MCP530"
            Do DELETE_SFPEND
            End

        --MCP535
        If ((FUNCTION = "ADD" And
           CPPGLASS:RETENTION = 1) Or
           (FUNCTION = "CHANGE" And
           L_RETENTION = 0 And
           CPPGLASS:RETENTION = 1)) Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso404"
            With Initial Function "CHANGE|BACK"
            End

        If FUNCTION = "CHANGE" And
           L_RETENTION = 1 And
           CPPGLASS:RETENTION = 0 Then
            Begin
            L_CODE = "MCP535"
            Do DELETE_SFPEND
            End
        End

    If FUNCTION = "CHANGE" Then
        Begin
        If CPPGLASS:CLASS = "S" And
           L_CLASS <> "S" Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso401"
            With Initial Function "CHANGE|BACK"
            End

        If CPPGLASS:SPECIAL_CONDITIONS = 1 And
           L_SPECIAL_CONDITION = 0 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso400"
            With Initial Function "ADD|BACK"
            End

        If CPPGLASS:HOTELS_MOTELS = 1 And
           L_HOTEL_MOTEL = 0 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_SUB_CODE = CPPGLASS:SUB_CODE
            Display Modal Screen "cppmtmso402"
            With Initial Function "CHANGE|BACK"
            End

        If CPPGLASS:damaged_glass_exclusion = 1 And
           L_damaged_glass = 0 Then
            Begin
            G_PREM_NO = CPPGLASS:PREM_NO
            G_BUILD_NO = CPPGLASS:BUILD_NO
            G_code = "MCP133"
            Display Modal Screen "cppmtmso453"
            With Initial Function "ADD|BACK"
            End

        End

    If FUNCTION = "CHANGE" Then
        Begin
        If CPPGLASS:CLASS <> "S" And
           L_CLASS = "S" Then
            Begin
            Access CPPGLASS_ALIAS, Set CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO,
                                       CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR ,
                                       CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                       CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO,
                                       CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO,
                                       CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE, Generic

            If CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO And
               CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR And
               CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
               CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO And
               CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO And
               CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE Then
                Change CPPGLASS_ALIAS
                    Begin
                    CPPGLASS_ALIAS:STRUCTURAL[1] = 0
                    CPPGLASS_ALIAS:STRUCTURAL_BENT[1] = 0
                    CPPGLASS_ALIAS:STRUCTURAL_FLAT[1] = 0
                    CPPGLASS_ALIAS:STRUCTURAL[2] = 0
                    CPPGLASS_ALIAS:STRUCTURAL_BENT[2] = 0
                    CPPGLASS_ALIAS:STRUCTURAL_FLAT[2] = 0
                    CPPGLASS_ALIAS:STRUCTURAL_TEMPERED_CLASS = ""
                    End
            End

        If CPPGLASS:SPECIAL_CONDITIONS = 0 And
           L_SPECIAL_CONDITION = 1 Then
            Begin
            Access CPPGLASSSPEC, Set CPPGLASSSPEC:POLICY_NO = CPPGLASS:POLICY_NO,
                                     CPPGLASSSPEC:POL_YEAR = CPPGLASS:POL_YEAR,
                                     CPPGLASSSPEC:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                     CPPGLASSSPEC:PREM_NO = CPPGLASS:PREM_NO,
                                     CPPGLASSSPEC:BUILD_NO = CPPGLASS:BUILD_NO,
                                     CPPGLASSSPEC:SUB_CODE = CPPGLASS:SUB_CODE, Generic

            If CPPGLASSSPEC:POLICY_NO = CPPGLASS:POLICY_NO And
               CPPGLASSSPEC:POL_YEAR = CPPGLASS:POL_YEAR And
               CPPGLASSSPEC:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
               CPPGLASSSPEC:PREM_NO = CPPGLASS:PREM_NO And
               CPPGLASSSPEC:BUILD_NO = CPPGLASS:BUILD_NO And
               CPPGLASSSPEC:SUB_CODE = CPPGLASS:SUB_CODE Then
                Delete CPPGLASSSPEC
            End

        If CPPGLASS:HOTELS_MOTELS = 0 And
           L_HOTEL_MOTEL = 1 Then
            Begin
            Access CPPGLASS_ALIAS, Set CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO,
                                       CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR,
                                       CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                       CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO,
                                       CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO,
                                       CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE, Generic

            If CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO And
               CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR And
               CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
               CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO And
               CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO And
               CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE Then
                Change CPPGLASS_ALIAS
                    Begin
                    CPPGLASS_ALIAS:NO_ROOMS = 0
                    End
            End

        If CPPGLASS:damaged_glass_exclusion = 0 And
           L_damaged_glass = 1 Then
            Begin
            g_code = "MCP133"
            Access cppendorse, Set cppendorse:POLICY_NO = CPPGLASS:POLICY_NO,
                                   cppendorse:POL_YEAR = CPPGLASS:POL_YEAR,
                                   cppendorse:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                   cppendorse:PREM_NO = CPPGLASS:PREM_NO,
                                   cppendorse:BUILD_NO = CPPGLASS:BUILD_NO,
                                   cppendorse:code = g_code, generic

            while cppendorse:POLICY_NO = CPPGLASS:POLICY_NO And
                  cppendorse:POL_YEAR = CPPGLASS:POL_YEAR And
                  cppendorse:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
                  cppendorse:PREM_NO = CPPGLASS:PREM_NO And
                  cppendorse:BUILD_NO = CPPGLASS:BUILD_NO And
                  cppendorse:code = g_code
                    begin
                    delete cppendorse

                    next cppendorse
                    end
            End

        If CPPGLASS:OPTIONAL_LOSS_PAYMENT = 0 And
           L_LOSS_PAYMENT = 1 Then
            Begin
            Access CPPGLASS_ALIAS, Set CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO,
                                       CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR,
                                       CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                       CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO,
                                       CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO,
                                       CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE, Generic

            If CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO And
               CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR And
               CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
               CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO And
               CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO And
               CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE Then
                Change CPPGLASS_ALIAS
                    Begin
                    CPPGLASS_ALIAS:PLATE_LIMITATION = 0
                    End
            End

        If CPPGLASS:RETENTION = 0 And
           L_RETENTION = 1 Then
            Begin
            Access CPPGLASS_ALIAS, Set CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO,
                                       CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR,
                                       CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE,
                                       CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO,
                                       CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO,
                                       CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE, Generic

            If CPPGLASS_ALIAS:POLICY_NO = CPPGLASS:POLICY_NO And
               CPPGLASS_ALIAS:POL_YEAR = CPPGLASS:POL_YEAR And
               CPPGLASS_ALIAS:END_SEQUENCE = CPPGLASS:END_SEQUENCE And
               CPPGLASS_ALIAS:PREM_NO = CPPGLASS:PREM_NO And
               CPPGLASS_ALIAS:BUILD_NO = CPPGLASS:BUILD_NO And
               CPPGLASS_ALIAS:SUB_CODE = CPPGLASS:SUB_CODE Then
                Change CPPGLASS_ALIAS
                    Begin
                    CPPGLASS_ALIAS:RETENTION_AMOUNT = 0
                    End
            End

        End

    Access CPSGLASSDEDP, Set CPSGLASSDEDP:COMPANY_ID = SFPNAME:COMPANY_ID,
                             CPSGLASSDEDP:STATE = CPPGLASS:STATE,
                             CPSGLASSDEDP:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                             CPSGLASSDEDP:DEDUCTIBLE = CPPGLASS:DEDUCTIBLE, Generic

    While CPSGLASSDEDP:COMPANY_ID = SFPNAME:COMPANY_ID And
          CPSGLASSDEDP:STATE = CPPGLASS:STATE And
          CPSGLASSDEDP:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS And
          CPSGLASSDEDP:DEDUCTIBLE = CPPGLASS:DEDUCTIBLE
            Begin
            If SFPNAME:EFF_DATE >= CPSGLASSDEDP:EFF_DATE Then
                Begin
                L_CODE_1 = CPSGLASSDEDP:CODE --MCP532 or MCP533
                End

            Next CPSGLASSDEDP
            End

    Access CPSGLASSLOSS, Set CPSGLASSLOSS:COMPANY_ID = SFPNAME:COMPANY_ID,
                             CPSGLASSLOSS:STATE = CPPGLASS:STATE,
                             CPSGLASSLOSS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While CPSGLASSLOSS:COMPANY_ID = SFPNAME:COMPANY_ID And
          CPSGLASSLOSS:STATE = CPPGLASS:STATE And
          CPSGLASSLOSS:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If SFPNAME:EFF_DATE >= CPSGLASSLOSS:EFF_DATE Then
                Begin
                L_CODE_2 = CPSGLASSLOSS:CODE --MCP530
                End

            Next CPSGLASSLOSS
            End

    Access CPSGLASSVACANCY, Set CPSGLASSVACANCY:COMPANY_ID = SFPNAME:COMPANY_ID,
                                CPSGLASSVACANCY:STATE = CPPGLASS:STATE,
                                CPSGLASSVACANCY:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While CPSGLASSVACANCY:COMPANY_ID = SFPNAME:COMPANY_ID And
          CPSGLASSVACANCY:STATE = CPPGLASS:STATE And
          CPSGLASSVACANCY:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If SFPNAME:EFF_DATE >= CPSGLASSVACANCY:EFF_DATE Then
                Begin
                L_CODE_3 = CPSGLASSVACANCY:CODE --MCP531
                End

            Next CPSGLASSVACANCY
            End

    Access CPSGLASSRATE1, Set CPSGLASSRATE1:COMPANY_ID = SFPNAME:COMPANY_ID,
                              CPSGLASSRATE1:STATE = CPPGLASS:STATE,
                              CPSGLASSRATE1:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While CPSGLASSRATE1:COMPANY_ID = SFPNAME:COMPANY_ID And
          CPSGLASSRATE1:STATE = CPPGLASS:STATE And
          CPSGLASSRATE1:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If SFPNAME:EFF_DATE >= CPSGLASSRATE1:EFF_DATE Then
                Begin
                L_CODE_4 = CPSGLASSRATE1:DAMAGED_GLASS_EXCLUSION --MCP133
                End

            Next CPSGLASSRATE1
            End

    Access CPSGLASS50, Set CPSGLASS50:COMPANY_ID = SFPNAME:COMPANY_ID,
                           CPSGLASS50:STATE = CPPGLASS:STATE,
                           CPSGLASS50:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

    While CPSGLASS50:COMPANY_ID = SFPNAME:COMPANY_ID And
          CPSGLASS50:STATE = CPPGLASS:STATE And
          CPSGLASS50:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS
            Begin
            If SFPNAME:EFF_DATE >= CPSGLASS50:EFF_DATE Then
                Begin
                L_CODE_5 = CPSGLASS50:CODE  --MCP535
                End

            Next CPSGLASS50
            End

    If L_CODE_1 <> "" Then
        Begin
        L_CODE = L_CODE_1
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGLASS:DEDUCTIBLE_PERCENT = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGLASS:DEDUCTIBLE_PERCENT = 0 Then
            Do DELETE_SFPEND
        End

    If L_CODE_2 <> "" Then
        Begin
        L_CODE = L_CODE_2
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGLASS:OPTIONAL_LOSS_PAYMENT = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGLASS:OPTIONAL_LOSS_PAYMENT = 0 Then
            Do DELETE_SFPEND
        End

    If L_CODE_3 <> "" Then
        Begin
        L_CODE = L_CODE_3
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGLASS:VACANCY_UNOCCUPANCY = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGLASS:VACANCY_UNOCCUPANCY = 0 Then
            Do DELETE_SFPEND
        End

    If L_CODE_4 <> "" Then
        Begin
        L_CODE = L_CODE_4
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGLASS:DAMAGED_GLASS_EXCLUSION = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGLASS:DAMAGED_GLASS_EXCLUSION = 0 Then
            Do DELETE_SFPEND
        End

    If L_CODE_5 <> "" Then
        Begin
        L_CODE = L_CODE_5
        Do ACCESS_SFPEND
        If L_ADD_ENDORSEMENT = "Y" And
           CPPGLASS:RETENTION = 1 Then
            Do ADD_SFPEND
        If L_ADD_ENDORSEMENT = "N" And
           CPPGLASS:RETENTION = 0 Then
            Do DELETE_SFPEND
        End

    If FUNCTION = "ADD" Or
       FUNCTION = "CHange" Then
        Begin
        Access CPSGLASSTRIGGER, Set CPSGLASSTRIGGER:COMPANY_ID = SFPNAME:COMPANY_ID,
                                    CPSGLASSTRIGGER:STATE = CPPGLASS:STATE,
                                    CPSGLASSTRIGGER:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS, Generic

        While CPSGLASSTRIGGER:COMPANY_ID = SFPNAME:COMPANY_ID And
              CPSGLASSTRIGGER:STATE = CPPGLASS:STATE And
              CPSGLASSTRIGGER:LINE_OF_BUSINESS =  L_LINE_OF_BUSINESS
                Begin
                L_CODE_1 = CPSGLASSTRIGGER:TRIGGER_ENDORSEMENT[1]
                L_CODE_2 = CPSGLASSTRIGGER:TRIGGER_ENDORSEMENT[2]

                Next CPSGLASSTRIGGER
                End

        If L_CODE_1 <> "" Then
            Begin
            L_CODE = L_CODE_1
            Do ACCESS_SFPEND
            If L_ADD_ENDORSEMENT = "Y" Then
               Do ADD_SFPEND
            End

        If L_CODE_2 <> "" Then
            Begin
            L_CODE = L_CODE_2
            Do ACCESS_SFPEND
            If L_ADD_ENDORSEMENT = "Y" Then
                Do ADD_SFPEND
            End

        End

    If FUNCTION = "DELETE" Then
        Begin
        Access CPPGLASS_ALIAS, Set CPPGLASS_ALIAS:POLICY_NO = G_POLICY_NO,
                                   CPPGLASS_ALIAS:POL_YEAR = G_YEAR ,
                                   CPPGLASS_ALIAS:END_SEQUENCE = G_END_SEQUENCE,
                                   CPPGLASS_ALIAS:PREM_NO = G_PREM_NO,
                                   CPPGLASS_ALIAS:BUILD_NO = G_BUILD_NO, Generic

        If CPPGLASS_ALIAS:POLICY_NO <> G_POLICY_NO Or
           CPPGLASS_ALIAS:POL_YEAR <> G_YEAR Or
           CPPGLASS_ALIAS:END_SEQUENCE <> G_END_SEQUENCE Or
           CPPGLASS_ALIAS:PREM_NO <> G_PREM_NO Or
           CPPGLASS_ALIAS:BUILD_NO <> G_BUILD_NO Then
            Begin
            L_CODE = L_CODE_1
            Do ACCESS_SFPEND
            If L_ADD_ENDORSEMENT = "N" Then
                Do DELETE_SFPEND
            L_CODE = L_CODE_2
            Do ACCESS_SFPEND
            If L_ADD_ENDORSEMENT = "N" Then
                Do DELETE_SFPEND
            End
        End

    End

Procedure Definition

Procedure subcode
begin
access cppglass_alias, set cppglass_alias:policy_no = cppglass:policy_no,
                           cppglass_alias:pol_year = cppglass:pol_year,
                           cppglass_alias:end_sequence = cppglass:end_sequence,
                           cppglass_alias:prem_no = cppglass:prem_no,
                           cppglass_alias:build_no = cppglass:build_no, generic

l_sub_code = 0
while cppglass_alias:policy_no = cppglass:policy_no and
      cppglass_alias:pol_year = cppglass:pol_year and
      cppglass_alias:end_sequence = cppglass:end_sequence and
      cppglass_alias:prem_no = cppglass:prem_no and
      cppglass_alias:build_no = cppglass:build_no
        begin
        l_sub_code = cppglass_alias:sub_code

        next cppglass_alias
        end

l_sub_code = l_sub_code + 10
end

Procedure ACCESS_SFPEND
Begin
Access SFPEND, Set SFPEND:POLICY_NO = G_POLICY_NO ,
                   SFPEND:POL_YEAR = G_YEAR,
                   SFPEND:END_SEQUENCE = G_END_SEQUENCE,
                   SFPEND:PREM_NO = G_PREM_NO,
                   SFPEND:BUILD_NO = G_BUILD_NO, Generic

L_ADD_ENDORSEMENT = "Y"
Repeat Begin
    Exit If SFPEND:POLICY_NO <> G_POLICY_NO Or
            SFPEND:POL_YEAR <> G_YEAR Or
            SFPEND:END_SEQUENCE <> G_END_SEQUENCE Or
            SFPEND:PREM_NO <> G_PREM_NO Or
            SFPEND:BUILD_NO <> G_BUILD_NO

    If SFPEND:CODE = L_CODE Then
        L_ADD_ENDORSEMENT = "N"

    Next SFPEND
    End

End

Procedure ADD_SFPEND
Begin
Access SFPEND, Set SFPEND:POLICY_NO = G_POLICY_NO ,
                   SFPEND:POL_YEAR = G_YEAR,
                   SFPEND:END_SEQUENCE = G_END_SEQUENCE,
                   SFPEND:PREM_NO = G_PREM_NO,
                   SFPEND:BUILD_NO = G_BUILD_NO, Generic

L_SUB_CODE = 0
Repeat Begin
    Exit If SFPEND:POLICY_NO <> G_POLICY_NO Or
            SFPEND:POL_YEAR <> G_YEAR Or
            SFPEND:END_SEQUENCE <> G_END_SEQUENCE Or
            SFPEND:PREM_NO <> G_PREM_NO Or
            SFPEND:BUILD_NO <> G_BUILD_NO

    L_SUB_CODE = SFPEND:SUB_CODE

    Next SFPEND
    End

L_SUB_CODE = L_SUB_CODE + 10
Access SFSOPTEND, Set SFSOPTEND:COMPANY_ID = SFPNAME:COMPANY_ID,
                      SFSOPTEND:STATE = CPPGLASS:STATE,
                      SFSOPTEND:LINE_OF_BUSINESS = L_LINE_OF_BUSINESS,
                      SFSOPTEND:CODE = L_CODE, Generic

Repeat Begin
    Exit If SFSOPTEND:COMPANY_ID <> SFPNAME:COMPANY_ID Or
            SFSOPTEND:STATE <> CPPGLASS:STATE Or
            SFSOPTEND:LINE_OF_BUSINESS <> L_LINE_OF_BUSINESS Or
            SFSOPTEND:CODE <> L_CODE

    If SFPNAME:EFF_DATE >= SFSOPTEND:EFF_DATE Then
        Begin
        L_FORM_EDITION = SFSOPTEND:FORM_EDITION
        L_DESCRIPTION = SFSOPTEND:DESCRIPTION
        End

    Next SFSOPTEND
    End

Add SFPEND
    Begin
    SFPEND:POLICY_NO            =       G_POLICY_NO
    SFPEND:POL_YEAR             =       G_YEAR
    SFPEND:END_SEQUENCE         =       G_END_SEQUENCE
    SFPEND:PREM_NO              =       G_PREM_NO
    SFPEND:BUILD_NO             =       G_BUILD_NO
    SFPEND:SUB_CODE             =       L_SUB_CODE
    SFPEND:CODE                 =       L_CODE
    SFPEND:FORM_EDITION         =       L_FORM_EDITION
    SFPEND:DESCRIPTION          =       L_DESCRIPTION
    SFPEND:LOB_END_CODE         =       "G"
    SFPEND:PREMIUM              =       0
    SFPEND:LOB_END_CODE         =       "G"
    End

End

Procedure DELETE_SFPEND
Begin
Access SFPEND, Set SFPEND:POLICY_NO = G_POLICY_NO ,
                   SFPEND:POL_YEAR = G_YEAR,
                   SFPEND:END_SEQUENCE = G_END_SEQUENCE,
                   SFPEND:PREM_NO = G_PREM_NO,
                   SFPEND:BUILD_NO = G_BUILD_NO, Generic

Repeat Begin
    Exit If SFPEND:POLICY_NO <> G_POLICY_NO Or
            SFPEND:POL_YEAR <> G_YEAR Or
            SFPEND:END_SEQUENCE <> G_END_SEQUENCE Or
            SFPEND:PREM_NO <> G_PREM_NO Or
            SFPEND:BUILD_NO <> G_BUILD_NO

    If SFPEND:CODE = L_CODE Then
        Delete SFPEND

    Next SFPEND
    End

End

End
